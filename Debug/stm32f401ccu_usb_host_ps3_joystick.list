
stm32f401ccu_usb_host_ps3_joystick.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00008a8c  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000890  08008c2c  08008c2c  00018c2c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080094bc  080094bc  00020090  2**0
                  CONTENTS
  4 .ARM          00000008  080094bc  080094bc  000194bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  080094c4  080094c4  00020090  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080094c4  080094c4  000194c4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080094c8  080094c8  000194c8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000090  20000000  080094cc  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000828  20000090  0800955c  00020090  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200008b8  0800955c  000208b8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020090  2**0
                  CONTENTS, READONLY
 12 .debug_info   0001e067  00000000  00000000  000200c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000041cb  00000000  00000000  0003e127  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000e30  00000000  00000000  000422f8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000cc8  00000000  00000000  00043128  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001a843  00000000  00000000  00043df0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00014a04  00000000  00000000  0005e633  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008cf82  00000000  00000000  00073037  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  000fffb9  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000040e8  00000000  00000000  0010000c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000090 	.word	0x20000090
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08008c14 	.word	0x08008c14

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000094 	.word	0x20000094
 80001dc:	08008c14 	.word	0x08008c14

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <__aeabi_uldivmod>:
 8000280:	b953      	cbnz	r3, 8000298 <__aeabi_uldivmod+0x18>
 8000282:	b94a      	cbnz	r2, 8000298 <__aeabi_uldivmod+0x18>
 8000284:	2900      	cmp	r1, #0
 8000286:	bf08      	it	eq
 8000288:	2800      	cmpeq	r0, #0
 800028a:	bf1c      	itt	ne
 800028c:	f04f 31ff 	movne.w	r1, #4294967295
 8000290:	f04f 30ff 	movne.w	r0, #4294967295
 8000294:	f000 b96e 	b.w	8000574 <__aeabi_idiv0>
 8000298:	f1ad 0c08 	sub.w	ip, sp, #8
 800029c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002a0:	f000 f806 	bl	80002b0 <__udivmoddi4>
 80002a4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002a8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002ac:	b004      	add	sp, #16
 80002ae:	4770      	bx	lr

080002b0 <__udivmoddi4>:
 80002b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002b4:	9d08      	ldr	r5, [sp, #32]
 80002b6:	4604      	mov	r4, r0
 80002b8:	468c      	mov	ip, r1
 80002ba:	2b00      	cmp	r3, #0
 80002bc:	f040 8083 	bne.w	80003c6 <__udivmoddi4+0x116>
 80002c0:	428a      	cmp	r2, r1
 80002c2:	4617      	mov	r7, r2
 80002c4:	d947      	bls.n	8000356 <__udivmoddi4+0xa6>
 80002c6:	fab2 f282 	clz	r2, r2
 80002ca:	b142      	cbz	r2, 80002de <__udivmoddi4+0x2e>
 80002cc:	f1c2 0020 	rsb	r0, r2, #32
 80002d0:	fa24 f000 	lsr.w	r0, r4, r0
 80002d4:	4091      	lsls	r1, r2
 80002d6:	4097      	lsls	r7, r2
 80002d8:	ea40 0c01 	orr.w	ip, r0, r1
 80002dc:	4094      	lsls	r4, r2
 80002de:	ea4f 4817 	mov.w	r8, r7, lsr #16
 80002e2:	0c23      	lsrs	r3, r4, #16
 80002e4:	fbbc f6f8 	udiv	r6, ip, r8
 80002e8:	fa1f fe87 	uxth.w	lr, r7
 80002ec:	fb08 c116 	mls	r1, r8, r6, ip
 80002f0:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80002f4:	fb06 f10e 	mul.w	r1, r6, lr
 80002f8:	4299      	cmp	r1, r3
 80002fa:	d909      	bls.n	8000310 <__udivmoddi4+0x60>
 80002fc:	18fb      	adds	r3, r7, r3
 80002fe:	f106 30ff 	add.w	r0, r6, #4294967295
 8000302:	f080 8119 	bcs.w	8000538 <__udivmoddi4+0x288>
 8000306:	4299      	cmp	r1, r3
 8000308:	f240 8116 	bls.w	8000538 <__udivmoddi4+0x288>
 800030c:	3e02      	subs	r6, #2
 800030e:	443b      	add	r3, r7
 8000310:	1a5b      	subs	r3, r3, r1
 8000312:	b2a4      	uxth	r4, r4
 8000314:	fbb3 f0f8 	udiv	r0, r3, r8
 8000318:	fb08 3310 	mls	r3, r8, r0, r3
 800031c:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000320:	fb00 fe0e 	mul.w	lr, r0, lr
 8000324:	45a6      	cmp	lr, r4
 8000326:	d909      	bls.n	800033c <__udivmoddi4+0x8c>
 8000328:	193c      	adds	r4, r7, r4
 800032a:	f100 33ff 	add.w	r3, r0, #4294967295
 800032e:	f080 8105 	bcs.w	800053c <__udivmoddi4+0x28c>
 8000332:	45a6      	cmp	lr, r4
 8000334:	f240 8102 	bls.w	800053c <__udivmoddi4+0x28c>
 8000338:	3802      	subs	r0, #2
 800033a:	443c      	add	r4, r7
 800033c:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000340:	eba4 040e 	sub.w	r4, r4, lr
 8000344:	2600      	movs	r6, #0
 8000346:	b11d      	cbz	r5, 8000350 <__udivmoddi4+0xa0>
 8000348:	40d4      	lsrs	r4, r2
 800034a:	2300      	movs	r3, #0
 800034c:	e9c5 4300 	strd	r4, r3, [r5]
 8000350:	4631      	mov	r1, r6
 8000352:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000356:	b902      	cbnz	r2, 800035a <__udivmoddi4+0xaa>
 8000358:	deff      	udf	#255	; 0xff
 800035a:	fab2 f282 	clz	r2, r2
 800035e:	2a00      	cmp	r2, #0
 8000360:	d150      	bne.n	8000404 <__udivmoddi4+0x154>
 8000362:	1bcb      	subs	r3, r1, r7
 8000364:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000368:	fa1f f887 	uxth.w	r8, r7
 800036c:	2601      	movs	r6, #1
 800036e:	fbb3 fcfe 	udiv	ip, r3, lr
 8000372:	0c21      	lsrs	r1, r4, #16
 8000374:	fb0e 331c 	mls	r3, lr, ip, r3
 8000378:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800037c:	fb08 f30c 	mul.w	r3, r8, ip
 8000380:	428b      	cmp	r3, r1
 8000382:	d907      	bls.n	8000394 <__udivmoddi4+0xe4>
 8000384:	1879      	adds	r1, r7, r1
 8000386:	f10c 30ff 	add.w	r0, ip, #4294967295
 800038a:	d202      	bcs.n	8000392 <__udivmoddi4+0xe2>
 800038c:	428b      	cmp	r3, r1
 800038e:	f200 80e9 	bhi.w	8000564 <__udivmoddi4+0x2b4>
 8000392:	4684      	mov	ip, r0
 8000394:	1ac9      	subs	r1, r1, r3
 8000396:	b2a3      	uxth	r3, r4
 8000398:	fbb1 f0fe 	udiv	r0, r1, lr
 800039c:	fb0e 1110 	mls	r1, lr, r0, r1
 80003a0:	ea43 4401 	orr.w	r4, r3, r1, lsl #16
 80003a4:	fb08 f800 	mul.w	r8, r8, r0
 80003a8:	45a0      	cmp	r8, r4
 80003aa:	d907      	bls.n	80003bc <__udivmoddi4+0x10c>
 80003ac:	193c      	adds	r4, r7, r4
 80003ae:	f100 33ff 	add.w	r3, r0, #4294967295
 80003b2:	d202      	bcs.n	80003ba <__udivmoddi4+0x10a>
 80003b4:	45a0      	cmp	r8, r4
 80003b6:	f200 80d9 	bhi.w	800056c <__udivmoddi4+0x2bc>
 80003ba:	4618      	mov	r0, r3
 80003bc:	eba4 0408 	sub.w	r4, r4, r8
 80003c0:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 80003c4:	e7bf      	b.n	8000346 <__udivmoddi4+0x96>
 80003c6:	428b      	cmp	r3, r1
 80003c8:	d909      	bls.n	80003de <__udivmoddi4+0x12e>
 80003ca:	2d00      	cmp	r5, #0
 80003cc:	f000 80b1 	beq.w	8000532 <__udivmoddi4+0x282>
 80003d0:	2600      	movs	r6, #0
 80003d2:	e9c5 0100 	strd	r0, r1, [r5]
 80003d6:	4630      	mov	r0, r6
 80003d8:	4631      	mov	r1, r6
 80003da:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80003de:	fab3 f683 	clz	r6, r3
 80003e2:	2e00      	cmp	r6, #0
 80003e4:	d14a      	bne.n	800047c <__udivmoddi4+0x1cc>
 80003e6:	428b      	cmp	r3, r1
 80003e8:	d302      	bcc.n	80003f0 <__udivmoddi4+0x140>
 80003ea:	4282      	cmp	r2, r0
 80003ec:	f200 80b8 	bhi.w	8000560 <__udivmoddi4+0x2b0>
 80003f0:	1a84      	subs	r4, r0, r2
 80003f2:	eb61 0103 	sbc.w	r1, r1, r3
 80003f6:	2001      	movs	r0, #1
 80003f8:	468c      	mov	ip, r1
 80003fa:	2d00      	cmp	r5, #0
 80003fc:	d0a8      	beq.n	8000350 <__udivmoddi4+0xa0>
 80003fe:	e9c5 4c00 	strd	r4, ip, [r5]
 8000402:	e7a5      	b.n	8000350 <__udivmoddi4+0xa0>
 8000404:	f1c2 0320 	rsb	r3, r2, #32
 8000408:	fa20 f603 	lsr.w	r6, r0, r3
 800040c:	4097      	lsls	r7, r2
 800040e:	fa01 f002 	lsl.w	r0, r1, r2
 8000412:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000416:	40d9      	lsrs	r1, r3
 8000418:	4330      	orrs	r0, r6
 800041a:	0c03      	lsrs	r3, r0, #16
 800041c:	fbb1 f6fe 	udiv	r6, r1, lr
 8000420:	fa1f f887 	uxth.w	r8, r7
 8000424:	fb0e 1116 	mls	r1, lr, r6, r1
 8000428:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800042c:	fb06 f108 	mul.w	r1, r6, r8
 8000430:	4299      	cmp	r1, r3
 8000432:	fa04 f402 	lsl.w	r4, r4, r2
 8000436:	d909      	bls.n	800044c <__udivmoddi4+0x19c>
 8000438:	18fb      	adds	r3, r7, r3
 800043a:	f106 3cff 	add.w	ip, r6, #4294967295
 800043e:	f080 808d 	bcs.w	800055c <__udivmoddi4+0x2ac>
 8000442:	4299      	cmp	r1, r3
 8000444:	f240 808a 	bls.w	800055c <__udivmoddi4+0x2ac>
 8000448:	3e02      	subs	r6, #2
 800044a:	443b      	add	r3, r7
 800044c:	1a5b      	subs	r3, r3, r1
 800044e:	b281      	uxth	r1, r0
 8000450:	fbb3 f0fe 	udiv	r0, r3, lr
 8000454:	fb0e 3310 	mls	r3, lr, r0, r3
 8000458:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800045c:	fb00 f308 	mul.w	r3, r0, r8
 8000460:	428b      	cmp	r3, r1
 8000462:	d907      	bls.n	8000474 <__udivmoddi4+0x1c4>
 8000464:	1879      	adds	r1, r7, r1
 8000466:	f100 3cff 	add.w	ip, r0, #4294967295
 800046a:	d273      	bcs.n	8000554 <__udivmoddi4+0x2a4>
 800046c:	428b      	cmp	r3, r1
 800046e:	d971      	bls.n	8000554 <__udivmoddi4+0x2a4>
 8000470:	3802      	subs	r0, #2
 8000472:	4439      	add	r1, r7
 8000474:	1acb      	subs	r3, r1, r3
 8000476:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
 800047a:	e778      	b.n	800036e <__udivmoddi4+0xbe>
 800047c:	f1c6 0c20 	rsb	ip, r6, #32
 8000480:	fa03 f406 	lsl.w	r4, r3, r6
 8000484:	fa22 f30c 	lsr.w	r3, r2, ip
 8000488:	431c      	orrs	r4, r3
 800048a:	fa20 f70c 	lsr.w	r7, r0, ip
 800048e:	fa01 f306 	lsl.w	r3, r1, r6
 8000492:	ea4f 4e14 	mov.w	lr, r4, lsr #16
 8000496:	fa21 f10c 	lsr.w	r1, r1, ip
 800049a:	431f      	orrs	r7, r3
 800049c:	0c3b      	lsrs	r3, r7, #16
 800049e:	fbb1 f9fe 	udiv	r9, r1, lr
 80004a2:	fa1f f884 	uxth.w	r8, r4
 80004a6:	fb0e 1119 	mls	r1, lr, r9, r1
 80004aa:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 80004ae:	fb09 fa08 	mul.w	sl, r9, r8
 80004b2:	458a      	cmp	sl, r1
 80004b4:	fa02 f206 	lsl.w	r2, r2, r6
 80004b8:	fa00 f306 	lsl.w	r3, r0, r6
 80004bc:	d908      	bls.n	80004d0 <__udivmoddi4+0x220>
 80004be:	1861      	adds	r1, r4, r1
 80004c0:	f109 30ff 	add.w	r0, r9, #4294967295
 80004c4:	d248      	bcs.n	8000558 <__udivmoddi4+0x2a8>
 80004c6:	458a      	cmp	sl, r1
 80004c8:	d946      	bls.n	8000558 <__udivmoddi4+0x2a8>
 80004ca:	f1a9 0902 	sub.w	r9, r9, #2
 80004ce:	4421      	add	r1, r4
 80004d0:	eba1 010a 	sub.w	r1, r1, sl
 80004d4:	b2bf      	uxth	r7, r7
 80004d6:	fbb1 f0fe 	udiv	r0, r1, lr
 80004da:	fb0e 1110 	mls	r1, lr, r0, r1
 80004de:	ea47 4701 	orr.w	r7, r7, r1, lsl #16
 80004e2:	fb00 f808 	mul.w	r8, r0, r8
 80004e6:	45b8      	cmp	r8, r7
 80004e8:	d907      	bls.n	80004fa <__udivmoddi4+0x24a>
 80004ea:	19e7      	adds	r7, r4, r7
 80004ec:	f100 31ff 	add.w	r1, r0, #4294967295
 80004f0:	d22e      	bcs.n	8000550 <__udivmoddi4+0x2a0>
 80004f2:	45b8      	cmp	r8, r7
 80004f4:	d92c      	bls.n	8000550 <__udivmoddi4+0x2a0>
 80004f6:	3802      	subs	r0, #2
 80004f8:	4427      	add	r7, r4
 80004fa:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 80004fe:	eba7 0708 	sub.w	r7, r7, r8
 8000502:	fba0 8902 	umull	r8, r9, r0, r2
 8000506:	454f      	cmp	r7, r9
 8000508:	46c6      	mov	lr, r8
 800050a:	4649      	mov	r1, r9
 800050c:	d31a      	bcc.n	8000544 <__udivmoddi4+0x294>
 800050e:	d017      	beq.n	8000540 <__udivmoddi4+0x290>
 8000510:	b15d      	cbz	r5, 800052a <__udivmoddi4+0x27a>
 8000512:	ebb3 020e 	subs.w	r2, r3, lr
 8000516:	eb67 0701 	sbc.w	r7, r7, r1
 800051a:	fa07 fc0c 	lsl.w	ip, r7, ip
 800051e:	40f2      	lsrs	r2, r6
 8000520:	ea4c 0202 	orr.w	r2, ip, r2
 8000524:	40f7      	lsrs	r7, r6
 8000526:	e9c5 2700 	strd	r2, r7, [r5]
 800052a:	2600      	movs	r6, #0
 800052c:	4631      	mov	r1, r6
 800052e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000532:	462e      	mov	r6, r5
 8000534:	4628      	mov	r0, r5
 8000536:	e70b      	b.n	8000350 <__udivmoddi4+0xa0>
 8000538:	4606      	mov	r6, r0
 800053a:	e6e9      	b.n	8000310 <__udivmoddi4+0x60>
 800053c:	4618      	mov	r0, r3
 800053e:	e6fd      	b.n	800033c <__udivmoddi4+0x8c>
 8000540:	4543      	cmp	r3, r8
 8000542:	d2e5      	bcs.n	8000510 <__udivmoddi4+0x260>
 8000544:	ebb8 0e02 	subs.w	lr, r8, r2
 8000548:	eb69 0104 	sbc.w	r1, r9, r4
 800054c:	3801      	subs	r0, #1
 800054e:	e7df      	b.n	8000510 <__udivmoddi4+0x260>
 8000550:	4608      	mov	r0, r1
 8000552:	e7d2      	b.n	80004fa <__udivmoddi4+0x24a>
 8000554:	4660      	mov	r0, ip
 8000556:	e78d      	b.n	8000474 <__udivmoddi4+0x1c4>
 8000558:	4681      	mov	r9, r0
 800055a:	e7b9      	b.n	80004d0 <__udivmoddi4+0x220>
 800055c:	4666      	mov	r6, ip
 800055e:	e775      	b.n	800044c <__udivmoddi4+0x19c>
 8000560:	4630      	mov	r0, r6
 8000562:	e74a      	b.n	80003fa <__udivmoddi4+0x14a>
 8000564:	f1ac 0c02 	sub.w	ip, ip, #2
 8000568:	4439      	add	r1, r7
 800056a:	e713      	b.n	8000394 <__udivmoddi4+0xe4>
 800056c:	3802      	subs	r0, #2
 800056e:	443c      	add	r4, r7
 8000570:	e724      	b.n	80003bc <__udivmoddi4+0x10c>
 8000572:	bf00      	nop

08000574 <__aeabi_idiv0>:
 8000574:	4770      	bx	lr
 8000576:	bf00      	nop

08000578 <_write>:
/* USER CODE BEGIN PFP */
/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
int _write(int file, char*p, int len) {
 8000578:	b580      	push	{r7, lr}
 800057a:	b084      	sub	sp, #16
 800057c:	af00      	add	r7, sp, #0
 800057e:	60f8      	str	r0, [r7, #12]
 8000580:	60b9      	str	r1, [r7, #8]
 8000582:	607a      	str	r2, [r7, #4]
  HAL_UART_Transmit(&huart1, (uint8_t *)p, len, 0xFFFF);
 8000584:	687b      	ldr	r3, [r7, #4]
 8000586:	b29a      	uxth	r2, r3
 8000588:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800058c:	68b9      	ldr	r1, [r7, #8]
 800058e:	4804      	ldr	r0, [pc, #16]	; (80005a0 <_write+0x28>)
 8000590:	f003 f871 	bl	8003676 <HAL_UART_Transmit>
  return len;
 8000594:	687b      	ldr	r3, [r7, #4]
}
 8000596:	4618      	mov	r0, r3
 8000598:	3710      	adds	r7, #16
 800059a:	46bd      	mov	sp, r7
 800059c:	bd80      	pop	{r7, pc}
 800059e:	bf00      	nop
 80005a0:	200000e0 	.word	0x200000e0

080005a4 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80005a4:	b580      	push	{r7, lr}
 80005a6:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80005a8:	f000 fb34 	bl	8000c14 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80005ac:	f000 f80c 	bl	80005c8 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80005b0:	f000 f8ca 	bl	8000748 <MX_GPIO_Init>
  MX_USB_HOST_Init();
 80005b4:	f006 fe80 	bl	80072b8 <MX_USB_HOST_Init>
  MX_USART2_UART_Init();
 80005b8:	f000 f89c 	bl	80006f4 <MX_USART2_UART_Init>
  MX_USART1_UART_Init();
 80005bc:	f000 f870 	bl	80006a0 <MX_USART1_UART_Init>
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
    /* USER CODE END WHILE */
    MX_USB_HOST_Process();
 80005c0:	f006 fea0 	bl	8007304 <MX_USB_HOST_Process>
 80005c4:	e7fc      	b.n	80005c0 <main+0x1c>
	...

080005c8 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 80005c8:	b580      	push	{r7, lr}
 80005ca:	b094      	sub	sp, #80	; 0x50
 80005cc:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80005ce:	f107 0320 	add.w	r3, r7, #32
 80005d2:	2230      	movs	r2, #48	; 0x30
 80005d4:	2100      	movs	r1, #0
 80005d6:	4618      	mov	r0, r3
 80005d8:	f007 fb60 	bl	8007c9c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80005dc:	f107 030c 	add.w	r3, r7, #12
 80005e0:	2200      	movs	r2, #0
 80005e2:	601a      	str	r2, [r3, #0]
 80005e4:	605a      	str	r2, [r3, #4]
 80005e6:	609a      	str	r2, [r3, #8]
 80005e8:	60da      	str	r2, [r3, #12]
 80005ea:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 80005ec:	2300      	movs	r3, #0
 80005ee:	60bb      	str	r3, [r7, #8]
 80005f0:	4b29      	ldr	r3, [pc, #164]	; (8000698 <SystemClock_Config+0xd0>)
 80005f2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80005f4:	4a28      	ldr	r2, [pc, #160]	; (8000698 <SystemClock_Config+0xd0>)
 80005f6:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80005fa:	6413      	str	r3, [r2, #64]	; 0x40
 80005fc:	4b26      	ldr	r3, [pc, #152]	; (8000698 <SystemClock_Config+0xd0>)
 80005fe:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000600:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000604:	60bb      	str	r3, [r7, #8]
 8000606:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 8000608:	2300      	movs	r3, #0
 800060a:	607b      	str	r3, [r7, #4]
 800060c:	4b23      	ldr	r3, [pc, #140]	; (800069c <SystemClock_Config+0xd4>)
 800060e:	681b      	ldr	r3, [r3, #0]
 8000610:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8000614:	4a21      	ldr	r2, [pc, #132]	; (800069c <SystemClock_Config+0xd4>)
 8000616:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800061a:	6013      	str	r3, [r2, #0]
 800061c:	4b1f      	ldr	r3, [pc, #124]	; (800069c <SystemClock_Config+0xd4>)
 800061e:	681b      	ldr	r3, [r3, #0]
 8000620:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8000624:	607b      	str	r3, [r7, #4]
 8000626:	687b      	ldr	r3, [r7, #4]
  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8000628:	2301      	movs	r3, #1
 800062a:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800062c:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000630:	627b      	str	r3, [r7, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000632:	2302      	movs	r3, #2
 8000634:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000636:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 800063a:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLM = 25;
 800063c:	2319      	movs	r3, #25
 800063e:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 336;
 8000640:	f44f 73a8 	mov.w	r3, #336	; 0x150
 8000644:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 8000646:	2304      	movs	r3, #4
 8000648:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 7;
 800064a:	2307      	movs	r3, #7
 800064c:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800064e:	f107 0320 	add.w	r3, r7, #32
 8000652:	4618      	mov	r0, r3
 8000654:	f002 fb7a 	bl	8002d4c <HAL_RCC_OscConfig>
 8000658:	4603      	mov	r3, r0
 800065a:	2b00      	cmp	r3, #0
 800065c:	d001      	beq.n	8000662 <SystemClock_Config+0x9a>
  {
    Error_Handler();
 800065e:	f000 f89b 	bl	8000798 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000662:	230f      	movs	r3, #15
 8000664:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000666:	2302      	movs	r3, #2
 8000668:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800066a:	2300      	movs	r3, #0
 800066c:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 800066e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000672:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000674:	2300      	movs	r3, #0
 8000676:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8000678:	f107 030c 	add.w	r3, r7, #12
 800067c:	2102      	movs	r1, #2
 800067e:	4618      	mov	r0, r3
 8000680:	f002 fddc 	bl	800323c <HAL_RCC_ClockConfig>
 8000684:	4603      	mov	r3, r0
 8000686:	2b00      	cmp	r3, #0
 8000688:	d001      	beq.n	800068e <SystemClock_Config+0xc6>
  {
    Error_Handler();
 800068a:	f000 f885 	bl	8000798 <Error_Handler>
  }
}
 800068e:	bf00      	nop
 8000690:	3750      	adds	r7, #80	; 0x50
 8000692:	46bd      	mov	sp, r7
 8000694:	bd80      	pop	{r7, pc}
 8000696:	bf00      	nop
 8000698:	40023800 	.word	0x40023800
 800069c:	40007000 	.word	0x40007000

080006a0 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 80006a0:	b580      	push	{r7, lr}
 80006a2:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 80006a4:	4b11      	ldr	r3, [pc, #68]	; (80006ec <MX_USART1_UART_Init+0x4c>)
 80006a6:	4a12      	ldr	r2, [pc, #72]	; (80006f0 <MX_USART1_UART_Init+0x50>)
 80006a8:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 80006aa:	4b10      	ldr	r3, [pc, #64]	; (80006ec <MX_USART1_UART_Init+0x4c>)
 80006ac:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 80006b0:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 80006b2:	4b0e      	ldr	r3, [pc, #56]	; (80006ec <MX_USART1_UART_Init+0x4c>)
 80006b4:	2200      	movs	r2, #0
 80006b6:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 80006b8:	4b0c      	ldr	r3, [pc, #48]	; (80006ec <MX_USART1_UART_Init+0x4c>)
 80006ba:	2200      	movs	r2, #0
 80006bc:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 80006be:	4b0b      	ldr	r3, [pc, #44]	; (80006ec <MX_USART1_UART_Init+0x4c>)
 80006c0:	2200      	movs	r2, #0
 80006c2:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 80006c4:	4b09      	ldr	r3, [pc, #36]	; (80006ec <MX_USART1_UART_Init+0x4c>)
 80006c6:	220c      	movs	r2, #12
 80006c8:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80006ca:	4b08      	ldr	r3, [pc, #32]	; (80006ec <MX_USART1_UART_Init+0x4c>)
 80006cc:	2200      	movs	r2, #0
 80006ce:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 80006d0:	4b06      	ldr	r3, [pc, #24]	; (80006ec <MX_USART1_UART_Init+0x4c>)
 80006d2:	2200      	movs	r2, #0
 80006d4:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 80006d6:	4805      	ldr	r0, [pc, #20]	; (80006ec <MX_USART1_UART_Init+0x4c>)
 80006d8:	f002 ff80 	bl	80035dc <HAL_UART_Init>
 80006dc:	4603      	mov	r3, r0
 80006de:	2b00      	cmp	r3, #0
 80006e0:	d001      	beq.n	80006e6 <MX_USART1_UART_Init+0x46>
  {
    Error_Handler();
 80006e2:	f000 f859 	bl	8000798 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 80006e6:	bf00      	nop
 80006e8:	bd80      	pop	{r7, pc}
 80006ea:	bf00      	nop
 80006ec:	200000e0 	.word	0x200000e0
 80006f0:	40011000 	.word	0x40011000

080006f4 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 80006f4:	b580      	push	{r7, lr}
 80006f6:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 80006f8:	4b11      	ldr	r3, [pc, #68]	; (8000740 <MX_USART2_UART_Init+0x4c>)
 80006fa:	4a12      	ldr	r2, [pc, #72]	; (8000744 <MX_USART2_UART_Init+0x50>)
 80006fc:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 80006fe:	4b10      	ldr	r3, [pc, #64]	; (8000740 <MX_USART2_UART_Init+0x4c>)
 8000700:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8000704:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8000706:	4b0e      	ldr	r3, [pc, #56]	; (8000740 <MX_USART2_UART_Init+0x4c>)
 8000708:	2200      	movs	r2, #0
 800070a:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 800070c:	4b0c      	ldr	r3, [pc, #48]	; (8000740 <MX_USART2_UART_Init+0x4c>)
 800070e:	2200      	movs	r2, #0
 8000710:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8000712:	4b0b      	ldr	r3, [pc, #44]	; (8000740 <MX_USART2_UART_Init+0x4c>)
 8000714:	2200      	movs	r2, #0
 8000716:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8000718:	4b09      	ldr	r3, [pc, #36]	; (8000740 <MX_USART2_UART_Init+0x4c>)
 800071a:	220c      	movs	r2, #12
 800071c:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800071e:	4b08      	ldr	r3, [pc, #32]	; (8000740 <MX_USART2_UART_Init+0x4c>)
 8000720:	2200      	movs	r2, #0
 8000722:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8000724:	4b06      	ldr	r3, [pc, #24]	; (8000740 <MX_USART2_UART_Init+0x4c>)
 8000726:	2200      	movs	r2, #0
 8000728:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 800072a:	4805      	ldr	r0, [pc, #20]	; (8000740 <MX_USART2_UART_Init+0x4c>)
 800072c:	f002 ff56 	bl	80035dc <HAL_UART_Init>
 8000730:	4603      	mov	r3, r0
 8000732:	2b00      	cmp	r3, #0
 8000734:	d001      	beq.n	800073a <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 8000736:	f000 f82f 	bl	8000798 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 800073a:	bf00      	nop
 800073c:	bd80      	pop	{r7, pc}
 800073e:	bf00      	nop
 8000740:	20000124 	.word	0x20000124
 8000744:	40004400 	.word	0x40004400

08000748 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000748:	b480      	push	{r7}
 800074a:	b083      	sub	sp, #12
 800074c:	af00      	add	r7, sp, #0

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800074e:	2300      	movs	r3, #0
 8000750:	607b      	str	r3, [r7, #4]
 8000752:	4b10      	ldr	r3, [pc, #64]	; (8000794 <MX_GPIO_Init+0x4c>)
 8000754:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000756:	4a0f      	ldr	r2, [pc, #60]	; (8000794 <MX_GPIO_Init+0x4c>)
 8000758:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800075c:	6313      	str	r3, [r2, #48]	; 0x30
 800075e:	4b0d      	ldr	r3, [pc, #52]	; (8000794 <MX_GPIO_Init+0x4c>)
 8000760:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000762:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000766:	607b      	str	r3, [r7, #4]
 8000768:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800076a:	2300      	movs	r3, #0
 800076c:	603b      	str	r3, [r7, #0]
 800076e:	4b09      	ldr	r3, [pc, #36]	; (8000794 <MX_GPIO_Init+0x4c>)
 8000770:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000772:	4a08      	ldr	r2, [pc, #32]	; (8000794 <MX_GPIO_Init+0x4c>)
 8000774:	f043 0301 	orr.w	r3, r3, #1
 8000778:	6313      	str	r3, [r2, #48]	; 0x30
 800077a:	4b06      	ldr	r3, [pc, #24]	; (8000794 <MX_GPIO_Init+0x4c>)
 800077c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800077e:	f003 0301 	and.w	r3, r3, #1
 8000782:	603b      	str	r3, [r7, #0]
 8000784:	683b      	ldr	r3, [r7, #0]

}
 8000786:	bf00      	nop
 8000788:	370c      	adds	r7, #12
 800078a:	46bd      	mov	sp, r7
 800078c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000790:	4770      	bx	lr
 8000792:	bf00      	nop
 8000794:	40023800 	.word	0x40023800

08000798 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000798:	b480      	push	{r7}
 800079a:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 800079c:	b672      	cpsid	i
}
 800079e:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80007a0:	e7fe      	b.n	80007a0 <Error_Handler+0x8>
	...

080007a4 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80007a4:	b480      	push	{r7}
 80007a6:	b083      	sub	sp, #12
 80007a8:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80007aa:	2300      	movs	r3, #0
 80007ac:	607b      	str	r3, [r7, #4]
 80007ae:	4b10      	ldr	r3, [pc, #64]	; (80007f0 <HAL_MspInit+0x4c>)
 80007b0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80007b2:	4a0f      	ldr	r2, [pc, #60]	; (80007f0 <HAL_MspInit+0x4c>)
 80007b4:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80007b8:	6453      	str	r3, [r2, #68]	; 0x44
 80007ba:	4b0d      	ldr	r3, [pc, #52]	; (80007f0 <HAL_MspInit+0x4c>)
 80007bc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80007be:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80007c2:	607b      	str	r3, [r7, #4]
 80007c4:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 80007c6:	2300      	movs	r3, #0
 80007c8:	603b      	str	r3, [r7, #0]
 80007ca:	4b09      	ldr	r3, [pc, #36]	; (80007f0 <HAL_MspInit+0x4c>)
 80007cc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80007ce:	4a08      	ldr	r2, [pc, #32]	; (80007f0 <HAL_MspInit+0x4c>)
 80007d0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80007d4:	6413      	str	r3, [r2, #64]	; 0x40
 80007d6:	4b06      	ldr	r3, [pc, #24]	; (80007f0 <HAL_MspInit+0x4c>)
 80007d8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80007da:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80007de:	603b      	str	r3, [r7, #0]
 80007e0:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80007e2:	bf00      	nop
 80007e4:	370c      	adds	r7, #12
 80007e6:	46bd      	mov	sp, r7
 80007e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007ec:	4770      	bx	lr
 80007ee:	bf00      	nop
 80007f0:	40023800 	.word	0x40023800

080007f4 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 80007f4:	b580      	push	{r7, lr}
 80007f6:	b08c      	sub	sp, #48	; 0x30
 80007f8:	af00      	add	r7, sp, #0
 80007fa:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80007fc:	f107 031c 	add.w	r3, r7, #28
 8000800:	2200      	movs	r2, #0
 8000802:	601a      	str	r2, [r3, #0]
 8000804:	605a      	str	r2, [r3, #4]
 8000806:	609a      	str	r2, [r3, #8]
 8000808:	60da      	str	r2, [r3, #12]
 800080a:	611a      	str	r2, [r3, #16]
  if(huart->Instance==USART1)
 800080c:	687b      	ldr	r3, [r7, #4]
 800080e:	681b      	ldr	r3, [r3, #0]
 8000810:	4a32      	ldr	r2, [pc, #200]	; (80008dc <HAL_UART_MspInit+0xe8>)
 8000812:	4293      	cmp	r3, r2
 8000814:	d12d      	bne.n	8000872 <HAL_UART_MspInit+0x7e>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 8000816:	2300      	movs	r3, #0
 8000818:	61bb      	str	r3, [r7, #24]
 800081a:	4b31      	ldr	r3, [pc, #196]	; (80008e0 <HAL_UART_MspInit+0xec>)
 800081c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800081e:	4a30      	ldr	r2, [pc, #192]	; (80008e0 <HAL_UART_MspInit+0xec>)
 8000820:	f043 0310 	orr.w	r3, r3, #16
 8000824:	6453      	str	r3, [r2, #68]	; 0x44
 8000826:	4b2e      	ldr	r3, [pc, #184]	; (80008e0 <HAL_UART_MspInit+0xec>)
 8000828:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800082a:	f003 0310 	and.w	r3, r3, #16
 800082e:	61bb      	str	r3, [r7, #24]
 8000830:	69bb      	ldr	r3, [r7, #24]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000832:	2300      	movs	r3, #0
 8000834:	617b      	str	r3, [r7, #20]
 8000836:	4b2a      	ldr	r3, [pc, #168]	; (80008e0 <HAL_UART_MspInit+0xec>)
 8000838:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800083a:	4a29      	ldr	r2, [pc, #164]	; (80008e0 <HAL_UART_MspInit+0xec>)
 800083c:	f043 0301 	orr.w	r3, r3, #1
 8000840:	6313      	str	r3, [r2, #48]	; 0x30
 8000842:	4b27      	ldr	r3, [pc, #156]	; (80008e0 <HAL_UART_MspInit+0xec>)
 8000844:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000846:	f003 0301 	and.w	r3, r3, #1
 800084a:	617b      	str	r3, [r7, #20]
 800084c:	697b      	ldr	r3, [r7, #20]
    /**USART1 GPIO Configuration
    PA9     ------> USART1_TX
    PA10     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 800084e:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 8000852:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000854:	2302      	movs	r3, #2
 8000856:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000858:	2300      	movs	r3, #0
 800085a:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800085c:	2303      	movs	r3, #3
 800085e:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8000860:	2307      	movs	r3, #7
 8000862:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000864:	f107 031c 	add.w	r3, r7, #28
 8000868:	4619      	mov	r1, r3
 800086a:	481e      	ldr	r0, [pc, #120]	; (80008e4 <HAL_UART_MspInit+0xf0>)
 800086c:	f000 fb7a 	bl	8000f64 <HAL_GPIO_Init>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }

}
 8000870:	e030      	b.n	80008d4 <HAL_UART_MspInit+0xe0>
  else if(huart->Instance==USART2)
 8000872:	687b      	ldr	r3, [r7, #4]
 8000874:	681b      	ldr	r3, [r3, #0]
 8000876:	4a1c      	ldr	r2, [pc, #112]	; (80008e8 <HAL_UART_MspInit+0xf4>)
 8000878:	4293      	cmp	r3, r2
 800087a:	d12b      	bne.n	80008d4 <HAL_UART_MspInit+0xe0>
    __HAL_RCC_USART2_CLK_ENABLE();
 800087c:	2300      	movs	r3, #0
 800087e:	613b      	str	r3, [r7, #16]
 8000880:	4b17      	ldr	r3, [pc, #92]	; (80008e0 <HAL_UART_MspInit+0xec>)
 8000882:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000884:	4a16      	ldr	r2, [pc, #88]	; (80008e0 <HAL_UART_MspInit+0xec>)
 8000886:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800088a:	6413      	str	r3, [r2, #64]	; 0x40
 800088c:	4b14      	ldr	r3, [pc, #80]	; (80008e0 <HAL_UART_MspInit+0xec>)
 800088e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000890:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000894:	613b      	str	r3, [r7, #16]
 8000896:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000898:	2300      	movs	r3, #0
 800089a:	60fb      	str	r3, [r7, #12]
 800089c:	4b10      	ldr	r3, [pc, #64]	; (80008e0 <HAL_UART_MspInit+0xec>)
 800089e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80008a0:	4a0f      	ldr	r2, [pc, #60]	; (80008e0 <HAL_UART_MspInit+0xec>)
 80008a2:	f043 0301 	orr.w	r3, r3, #1
 80008a6:	6313      	str	r3, [r2, #48]	; 0x30
 80008a8:	4b0d      	ldr	r3, [pc, #52]	; (80008e0 <HAL_UART_MspInit+0xec>)
 80008aa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80008ac:	f003 0301 	and.w	r3, r3, #1
 80008b0:	60fb      	str	r3, [r7, #12]
 80008b2:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 80008b4:	230c      	movs	r3, #12
 80008b6:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80008b8:	2302      	movs	r3, #2
 80008ba:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80008bc:	2300      	movs	r3, #0
 80008be:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80008c0:	2303      	movs	r3, #3
 80008c2:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 80008c4:	2307      	movs	r3, #7
 80008c6:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80008c8:	f107 031c 	add.w	r3, r7, #28
 80008cc:	4619      	mov	r1, r3
 80008ce:	4805      	ldr	r0, [pc, #20]	; (80008e4 <HAL_UART_MspInit+0xf0>)
 80008d0:	f000 fb48 	bl	8000f64 <HAL_GPIO_Init>
}
 80008d4:	bf00      	nop
 80008d6:	3730      	adds	r7, #48	; 0x30
 80008d8:	46bd      	mov	sp, r7
 80008da:	bd80      	pop	{r7, pc}
 80008dc:	40011000 	.word	0x40011000
 80008e0:	40023800 	.word	0x40023800
 80008e4:	40020000 	.word	0x40020000
 80008e8:	40004400 	.word	0x40004400

080008ec <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80008ec:	b480      	push	{r7}
 80008ee:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 80008f0:	e7fe      	b.n	80008f0 <NMI_Handler+0x4>

080008f2 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80008f2:	b480      	push	{r7}
 80008f4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80008f6:	e7fe      	b.n	80008f6 <HardFault_Handler+0x4>

080008f8 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 80008f8:	b480      	push	{r7}
 80008fa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80008fc:	e7fe      	b.n	80008fc <MemManage_Handler+0x4>

080008fe <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 80008fe:	b480      	push	{r7}
 8000900:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8000902:	e7fe      	b.n	8000902 <BusFault_Handler+0x4>

08000904 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8000904:	b480      	push	{r7}
 8000906:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8000908:	e7fe      	b.n	8000908 <UsageFault_Handler+0x4>

0800090a <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 800090a:	b480      	push	{r7}
 800090c:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 800090e:	bf00      	nop
 8000910:	46bd      	mov	sp, r7
 8000912:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000916:	4770      	bx	lr

08000918 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8000918:	b480      	push	{r7}
 800091a:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 800091c:	bf00      	nop
 800091e:	46bd      	mov	sp, r7
 8000920:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000924:	4770      	bx	lr

08000926 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8000926:	b480      	push	{r7}
 8000928:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800092a:	bf00      	nop
 800092c:	46bd      	mov	sp, r7
 800092e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000932:	4770      	bx	lr

08000934 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8000934:	b580      	push	{r7, lr}
 8000936:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8000938:	f000 f9be 	bl	8000cb8 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 800093c:	bf00      	nop
 800093e:	bd80      	pop	{r7, pc}

08000940 <OTG_FS_IRQHandler>:

/**
  * @brief This function handles USB On The Go FS global interrupt.
  */
void OTG_FS_IRQHandler(void)
{
 8000940:	b580      	push	{r7, lr}
 8000942:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN OTG_FS_IRQn 0 */

  /* USER CODE END OTG_FS_IRQn 0 */
  HAL_HCD_IRQHandler(&hhcd_USB_OTG_FS);
 8000944:	4802      	ldr	r0, [pc, #8]	; (8000950 <OTG_FS_IRQHandler+0x10>)
 8000946:	f000 fefb 	bl	8001740 <HAL_HCD_IRQHandler>
  /* USER CODE BEGIN OTG_FS_IRQn 1 */

  /* USER CODE END OTG_FS_IRQn 1 */
}
 800094a:	bf00      	nop
 800094c:	bd80      	pop	{r7, pc}
 800094e:	bf00      	nop
 8000950:	20000560 	.word	0x20000560

08000954 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000954:	b580      	push	{r7, lr}
 8000956:	b086      	sub	sp, #24
 8000958:	af00      	add	r7, sp, #0
 800095a:	60f8      	str	r0, [r7, #12]
 800095c:	60b9      	str	r1, [r7, #8]
 800095e:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000960:	2300      	movs	r3, #0
 8000962:	617b      	str	r3, [r7, #20]
 8000964:	e00a      	b.n	800097c <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8000966:	f3af 8000 	nop.w
 800096a:	4601      	mov	r1, r0
 800096c:	68bb      	ldr	r3, [r7, #8]
 800096e:	1c5a      	adds	r2, r3, #1
 8000970:	60ba      	str	r2, [r7, #8]
 8000972:	b2ca      	uxtb	r2, r1
 8000974:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000976:	697b      	ldr	r3, [r7, #20]
 8000978:	3301      	adds	r3, #1
 800097a:	617b      	str	r3, [r7, #20]
 800097c:	697a      	ldr	r2, [r7, #20]
 800097e:	687b      	ldr	r3, [r7, #4]
 8000980:	429a      	cmp	r2, r3
 8000982:	dbf0      	blt.n	8000966 <_read+0x12>
	}

return len;
 8000984:	687b      	ldr	r3, [r7, #4]
}
 8000986:	4618      	mov	r0, r3
 8000988:	3718      	adds	r7, #24
 800098a:	46bd      	mov	sp, r7
 800098c:	bd80      	pop	{r7, pc}

0800098e <_close>:
	}
	return len;
}

int _close(int file)
{
 800098e:	b480      	push	{r7}
 8000990:	b083      	sub	sp, #12
 8000992:	af00      	add	r7, sp, #0
 8000994:	6078      	str	r0, [r7, #4]
	return -1;
 8000996:	f04f 33ff 	mov.w	r3, #4294967295
}
 800099a:	4618      	mov	r0, r3
 800099c:	370c      	adds	r7, #12
 800099e:	46bd      	mov	sp, r7
 80009a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80009a4:	4770      	bx	lr

080009a6 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80009a6:	b480      	push	{r7}
 80009a8:	b083      	sub	sp, #12
 80009aa:	af00      	add	r7, sp, #0
 80009ac:	6078      	str	r0, [r7, #4]
 80009ae:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80009b0:	683b      	ldr	r3, [r7, #0]
 80009b2:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80009b6:	605a      	str	r2, [r3, #4]
	return 0;
 80009b8:	2300      	movs	r3, #0
}
 80009ba:	4618      	mov	r0, r3
 80009bc:	370c      	adds	r7, #12
 80009be:	46bd      	mov	sp, r7
 80009c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80009c4:	4770      	bx	lr

080009c6 <_isatty>:

int _isatty(int file)
{
 80009c6:	b480      	push	{r7}
 80009c8:	b083      	sub	sp, #12
 80009ca:	af00      	add	r7, sp, #0
 80009cc:	6078      	str	r0, [r7, #4]
	return 1;
 80009ce:	2301      	movs	r3, #1
}
 80009d0:	4618      	mov	r0, r3
 80009d2:	370c      	adds	r7, #12
 80009d4:	46bd      	mov	sp, r7
 80009d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80009da:	4770      	bx	lr

080009dc <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80009dc:	b480      	push	{r7}
 80009de:	b085      	sub	sp, #20
 80009e0:	af00      	add	r7, sp, #0
 80009e2:	60f8      	str	r0, [r7, #12]
 80009e4:	60b9      	str	r1, [r7, #8]
 80009e6:	607a      	str	r2, [r7, #4]
	return 0;
 80009e8:	2300      	movs	r3, #0
}
 80009ea:	4618      	mov	r0, r3
 80009ec:	3714      	adds	r7, #20
 80009ee:	46bd      	mov	sp, r7
 80009f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80009f4:	4770      	bx	lr
	...

080009f8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80009f8:	b580      	push	{r7, lr}
 80009fa:	b086      	sub	sp, #24
 80009fc:	af00      	add	r7, sp, #0
 80009fe:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000a00:	4a14      	ldr	r2, [pc, #80]	; (8000a54 <_sbrk+0x5c>)
 8000a02:	4b15      	ldr	r3, [pc, #84]	; (8000a58 <_sbrk+0x60>)
 8000a04:	1ad3      	subs	r3, r2, r3
 8000a06:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000a08:	697b      	ldr	r3, [r7, #20]
 8000a0a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000a0c:	4b13      	ldr	r3, [pc, #76]	; (8000a5c <_sbrk+0x64>)
 8000a0e:	681b      	ldr	r3, [r3, #0]
 8000a10:	2b00      	cmp	r3, #0
 8000a12:	d102      	bne.n	8000a1a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000a14:	4b11      	ldr	r3, [pc, #68]	; (8000a5c <_sbrk+0x64>)
 8000a16:	4a12      	ldr	r2, [pc, #72]	; (8000a60 <_sbrk+0x68>)
 8000a18:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000a1a:	4b10      	ldr	r3, [pc, #64]	; (8000a5c <_sbrk+0x64>)
 8000a1c:	681a      	ldr	r2, [r3, #0]
 8000a1e:	687b      	ldr	r3, [r7, #4]
 8000a20:	4413      	add	r3, r2
 8000a22:	693a      	ldr	r2, [r7, #16]
 8000a24:	429a      	cmp	r2, r3
 8000a26:	d207      	bcs.n	8000a38 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000a28:	f007 f8f0 	bl	8007c0c <__errno>
 8000a2c:	4603      	mov	r3, r0
 8000a2e:	220c      	movs	r2, #12
 8000a30:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000a32:	f04f 33ff 	mov.w	r3, #4294967295
 8000a36:	e009      	b.n	8000a4c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000a38:	4b08      	ldr	r3, [pc, #32]	; (8000a5c <_sbrk+0x64>)
 8000a3a:	681b      	ldr	r3, [r3, #0]
 8000a3c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000a3e:	4b07      	ldr	r3, [pc, #28]	; (8000a5c <_sbrk+0x64>)
 8000a40:	681a      	ldr	r2, [r3, #0]
 8000a42:	687b      	ldr	r3, [r7, #4]
 8000a44:	4413      	add	r3, r2
 8000a46:	4a05      	ldr	r2, [pc, #20]	; (8000a5c <_sbrk+0x64>)
 8000a48:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000a4a:	68fb      	ldr	r3, [r7, #12]
}
 8000a4c:	4618      	mov	r0, r3
 8000a4e:	3718      	adds	r7, #24
 8000a50:	46bd      	mov	sp, r7
 8000a52:	bd80      	pop	{r7, pc}
 8000a54:	20010000 	.word	0x20010000
 8000a58:	00000400 	.word	0x00000400
 8000a5c:	200000ac 	.word	0x200000ac
 8000a60:	200008b8 	.word	0x200008b8

08000a64 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8000a64:	b480      	push	{r7}
 8000a66:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8000a68:	4b06      	ldr	r3, [pc, #24]	; (8000a84 <SystemInit+0x20>)
 8000a6a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8000a6e:	4a05      	ldr	r2, [pc, #20]	; (8000a84 <SystemInit+0x20>)
 8000a70:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8000a74:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8000a78:	bf00      	nop
 8000a7a:	46bd      	mov	sp, r7
 8000a7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a80:	4770      	bx	lr
 8000a82:	bf00      	nop
 8000a84:	e000ed00 	.word	0xe000ed00

08000a88 <checksum>:

void init_uart_proto() {

}

static inline uint8_t checksum(uint8_t* dat, uint8_t len) {
 8000a88:	b480      	push	{r7}
 8000a8a:	b085      	sub	sp, #20
 8000a8c:	af00      	add	r7, sp, #0
 8000a8e:	6078      	str	r0, [r7, #4]
 8000a90:	460b      	mov	r3, r1
 8000a92:	70fb      	strb	r3, [r7, #3]
	uint8_t chk = 0;
 8000a94:	2300      	movs	r3, #0
 8000a96:	73fb      	strb	r3, [r7, #15]
	for(uint8_t i=0;i<len;i++) {
 8000a98:	2300      	movs	r3, #0
 8000a9a:	73bb      	strb	r3, [r7, #14]
 8000a9c:	e009      	b.n	8000ab2 <checksum+0x2a>
		chk ^= dat[i];
 8000a9e:	7bbb      	ldrb	r3, [r7, #14]
 8000aa0:	687a      	ldr	r2, [r7, #4]
 8000aa2:	4413      	add	r3, r2
 8000aa4:	781a      	ldrb	r2, [r3, #0]
 8000aa6:	7bfb      	ldrb	r3, [r7, #15]
 8000aa8:	4053      	eors	r3, r2
 8000aaa:	73fb      	strb	r3, [r7, #15]
	for(uint8_t i=0;i<len;i++) {
 8000aac:	7bbb      	ldrb	r3, [r7, #14]
 8000aae:	3301      	adds	r3, #1
 8000ab0:	73bb      	strb	r3, [r7, #14]
 8000ab2:	7bba      	ldrb	r2, [r7, #14]
 8000ab4:	78fb      	ldrb	r3, [r7, #3]
 8000ab6:	429a      	cmp	r2, r3
 8000ab8:	d3f1      	bcc.n	8000a9e <checksum+0x16>
	}
	return chk;
 8000aba:	7bfb      	ldrb	r3, [r7, #15]
}
 8000abc:	4618      	mov	r0, r3
 8000abe:	3714      	adds	r7, #20
 8000ac0:	46bd      	mov	sp, r7
 8000ac2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ac6:	4770      	bx	lr

08000ac8 <generate_uart_packet>:

int generate_uart_packet(uart_ids_t id, uint8_t* dst, uint8_t* src, uint8_t src_len) {
 8000ac8:	b590      	push	{r4, r7, lr}
 8000aca:	b087      	sub	sp, #28
 8000acc:	af00      	add	r7, sp, #0
 8000ace:	60b9      	str	r1, [r7, #8]
 8000ad0:	607a      	str	r2, [r7, #4]
 8000ad2:	461a      	mov	r2, r3
 8000ad4:	4603      	mov	r3, r0
 8000ad6:	73fb      	strb	r3, [r7, #15]
 8000ad8:	4613      	mov	r3, r2
 8000ada:	73bb      	strb	r3, [r7, #14]
	if(dst == NULL || src == NULL) {
 8000adc:	68bb      	ldr	r3, [r7, #8]
 8000ade:	2b00      	cmp	r3, #0
 8000ae0:	d002      	beq.n	8000ae8 <generate_uart_packet+0x20>
 8000ae2:	687b      	ldr	r3, [r7, #4]
 8000ae4:	2b00      	cmp	r3, #0
 8000ae6:	d102      	bne.n	8000aee <generate_uart_packet+0x26>
		return -1;
 8000ae8:	f04f 33ff 	mov.w	r3, #4294967295
 8000aec:	e035      	b.n	8000b5a <generate_uart_packet+0x92>
	}
	dst[0] = UPACK_STX;
 8000aee:	68bb      	ldr	r3, [r7, #8]
 8000af0:	22aa      	movs	r2, #170	; 0xaa
 8000af2:	701a      	strb	r2, [r3, #0]
	dst[1] = id;
 8000af4:	68bb      	ldr	r3, [r7, #8]
 8000af6:	3301      	adds	r3, #1
 8000af8:	7bfa      	ldrb	r2, [r7, #15]
 8000afa:	701a      	strb	r2, [r3, #0]
	dst[2] = src_len;
 8000afc:	68bb      	ldr	r3, [r7, #8]
 8000afe:	3302      	adds	r3, #2
 8000b00:	7bba      	ldrb	r2, [r7, #14]
 8000b02:	701a      	strb	r2, [r3, #0]

	for(uint8_t i=0;i<src_len;i++) {
 8000b04:	2300      	movs	r3, #0
 8000b06:	75fb      	strb	r3, [r7, #23]
 8000b08:	e00c      	b.n	8000b24 <generate_uart_packet+0x5c>
		dst[3+i] = src[i];
 8000b0a:	7dfb      	ldrb	r3, [r7, #23]
 8000b0c:	687a      	ldr	r2, [r7, #4]
 8000b0e:	441a      	add	r2, r3
 8000b10:	7dfb      	ldrb	r3, [r7, #23]
 8000b12:	3303      	adds	r3, #3
 8000b14:	4619      	mov	r1, r3
 8000b16:	68bb      	ldr	r3, [r7, #8]
 8000b18:	440b      	add	r3, r1
 8000b1a:	7812      	ldrb	r2, [r2, #0]
 8000b1c:	701a      	strb	r2, [r3, #0]
	for(uint8_t i=0;i<src_len;i++) {
 8000b1e:	7dfb      	ldrb	r3, [r7, #23]
 8000b20:	3301      	adds	r3, #1
 8000b22:	75fb      	strb	r3, [r7, #23]
 8000b24:	7dfa      	ldrb	r2, [r7, #23]
 8000b26:	7bbb      	ldrb	r3, [r7, #14]
 8000b28:	429a      	cmp	r2, r3
 8000b2a:	d3ee      	bcc.n	8000b0a <generate_uart_packet+0x42>
	}

	dst[3+src_len] = checksum(dst, src_len+3);
 8000b2c:	7bbb      	ldrb	r3, [r7, #14]
 8000b2e:	3303      	adds	r3, #3
 8000b30:	b2da      	uxtb	r2, r3
 8000b32:	7bbb      	ldrb	r3, [r7, #14]
 8000b34:	3303      	adds	r3, #3
 8000b36:	4619      	mov	r1, r3
 8000b38:	68bb      	ldr	r3, [r7, #8]
 8000b3a:	185c      	adds	r4, r3, r1
 8000b3c:	4611      	mov	r1, r2
 8000b3e:	68b8      	ldr	r0, [r7, #8]
 8000b40:	f7ff ffa2 	bl	8000a88 <checksum>
 8000b44:	4603      	mov	r3, r0
 8000b46:	7023      	strb	r3, [r4, #0]
	dst[4+src_len] = UPACK_ETX;
 8000b48:	7bbb      	ldrb	r3, [r7, #14]
 8000b4a:	3304      	adds	r3, #4
 8000b4c:	461a      	mov	r2, r3
 8000b4e:	68bb      	ldr	r3, [r7, #8]
 8000b50:	4413      	add	r3, r2
 8000b52:	2255      	movs	r2, #85	; 0x55
 8000b54:	701a      	strb	r2, [r3, #0]
	return src_len + 5;
 8000b56:	7bbb      	ldrb	r3, [r7, #14]
 8000b58:	3305      	adds	r3, #5
}
 8000b5a:	4618      	mov	r0, r3
 8000b5c:	371c      	adds	r7, #28
 8000b5e:	46bd      	mov	sp, r7
 8000b60:	bd90      	pop	{r4, r7, pc}
	...

08000b64 <send_uart_data>:

void send_uart_data(uart_ids_t id, uint8_t *data, uint8_t len) {
 8000b64:	b580      	push	{r7, lr}
 8000b66:	b084      	sub	sp, #16
 8000b68:	af00      	add	r7, sp, #0
 8000b6a:	4603      	mov	r3, r0
 8000b6c:	6039      	str	r1, [r7, #0]
 8000b6e:	71fb      	strb	r3, [r7, #7]
 8000b70:	4613      	mov	r3, r2
 8000b72:	71bb      	strb	r3, [r7, #6]
	uint8_t* dst = malloc(len);
 8000b74:	79bb      	ldrb	r3, [r7, #6]
 8000b76:	4618      	mov	r0, r3
 8000b78:	f007 f872 	bl	8007c60 <malloc>
 8000b7c:	4603      	mov	r3, r0
 8000b7e:	60fb      	str	r3, [r7, #12]
	uint8_t dst_len;
	if(dst == NULL) {
 8000b80:	68fb      	ldr	r3, [r7, #12]
 8000b82:	2b00      	cmp	r3, #0
 8000b84:	d016      	beq.n	8000bb4 <send_uart_data+0x50>
		return;
	}
	dst_len = generate_uart_packet(0, dst, data, len);
 8000b86:	79bb      	ldrb	r3, [r7, #6]
 8000b88:	683a      	ldr	r2, [r7, #0]
 8000b8a:	68f9      	ldr	r1, [r7, #12]
 8000b8c:	2000      	movs	r0, #0
 8000b8e:	f7ff ff9b 	bl	8000ac8 <generate_uart_packet>
 8000b92:	4603      	mov	r3, r0
 8000b94:	72fb      	strb	r3, [r7, #11]
	if(dst_len > 0) {
 8000b96:	7afb      	ldrb	r3, [r7, #11]
 8000b98:	2b00      	cmp	r3, #0
 8000b9a:	d007      	beq.n	8000bac <send_uart_data+0x48>
		HAL_UART_Transmit(&huart2, (uint8_t *)dst, dst_len, 0xFFFF);
 8000b9c:	7afb      	ldrb	r3, [r7, #11]
 8000b9e:	b29a      	uxth	r2, r3
 8000ba0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8000ba4:	68f9      	ldr	r1, [r7, #12]
 8000ba6:	4805      	ldr	r0, [pc, #20]	; (8000bbc <send_uart_data+0x58>)
 8000ba8:	f002 fd65 	bl	8003676 <HAL_UART_Transmit>
	}
	free(dst);
 8000bac:	68f8      	ldr	r0, [r7, #12]
 8000bae:	f007 f85f 	bl	8007c70 <free>
 8000bb2:	e000      	b.n	8000bb6 <send_uart_data+0x52>
		return;
 8000bb4:	bf00      	nop
}
 8000bb6:	3710      	adds	r7, #16
 8000bb8:	46bd      	mov	sp, r7
 8000bba:	bd80      	pop	{r7, pc}
 8000bbc:	20000124 	.word	0x20000124

08000bc0 <Reset_Handler>:
 8000bc0:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000bf8 <LoopFillZerobss+0x12>
 8000bc4:	480d      	ldr	r0, [pc, #52]	; (8000bfc <LoopFillZerobss+0x16>)
 8000bc6:	490e      	ldr	r1, [pc, #56]	; (8000c00 <LoopFillZerobss+0x1a>)
 8000bc8:	4a0e      	ldr	r2, [pc, #56]	; (8000c04 <LoopFillZerobss+0x1e>)
 8000bca:	2300      	movs	r3, #0
 8000bcc:	e002      	b.n	8000bd4 <LoopCopyDataInit>

08000bce <CopyDataInit>:
 8000bce:	58d4      	ldr	r4, [r2, r3]
 8000bd0:	50c4      	str	r4, [r0, r3]
 8000bd2:	3304      	adds	r3, #4

08000bd4 <LoopCopyDataInit>:
 8000bd4:	18c4      	adds	r4, r0, r3
 8000bd6:	428c      	cmp	r4, r1
 8000bd8:	d3f9      	bcc.n	8000bce <CopyDataInit>
 8000bda:	4a0b      	ldr	r2, [pc, #44]	; (8000c08 <LoopFillZerobss+0x22>)
 8000bdc:	4c0b      	ldr	r4, [pc, #44]	; (8000c0c <LoopFillZerobss+0x26>)
 8000bde:	2300      	movs	r3, #0
 8000be0:	e001      	b.n	8000be6 <LoopFillZerobss>

08000be2 <FillZerobss>:
 8000be2:	6013      	str	r3, [r2, #0]
 8000be4:	3204      	adds	r2, #4

08000be6 <LoopFillZerobss>:
 8000be6:	42a2      	cmp	r2, r4
 8000be8:	d3fb      	bcc.n	8000be2 <FillZerobss>
 8000bea:	f7ff ff3b 	bl	8000a64 <SystemInit>
 8000bee:	f007 f813 	bl	8007c18 <__libc_init_array>
 8000bf2:	f7ff fcd7 	bl	80005a4 <main>
 8000bf6:	4770      	bx	lr
 8000bf8:	20010000 	.word	0x20010000
 8000bfc:	20000000 	.word	0x20000000
 8000c00:	20000090 	.word	0x20000090
 8000c04:	080094cc 	.word	0x080094cc
 8000c08:	20000090 	.word	0x20000090
 8000c0c:	200008b8 	.word	0x200008b8

08000c10 <ADC_IRQHandler>:
 8000c10:	e7fe      	b.n	8000c10 <ADC_IRQHandler>
	...

08000c14 <HAL_Init>:
 8000c14:	b580      	push	{r7, lr}
 8000c16:	af00      	add	r7, sp, #0
 8000c18:	4b0e      	ldr	r3, [pc, #56]	; (8000c54 <HAL_Init+0x40>)
 8000c1a:	681b      	ldr	r3, [r3, #0]
 8000c1c:	4a0d      	ldr	r2, [pc, #52]	; (8000c54 <HAL_Init+0x40>)
 8000c1e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8000c22:	6013      	str	r3, [r2, #0]
 8000c24:	4b0b      	ldr	r3, [pc, #44]	; (8000c54 <HAL_Init+0x40>)
 8000c26:	681b      	ldr	r3, [r3, #0]
 8000c28:	4a0a      	ldr	r2, [pc, #40]	; (8000c54 <HAL_Init+0x40>)
 8000c2a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000c2e:	6013      	str	r3, [r2, #0]
 8000c30:	4b08      	ldr	r3, [pc, #32]	; (8000c54 <HAL_Init+0x40>)
 8000c32:	681b      	ldr	r3, [r3, #0]
 8000c34:	4a07      	ldr	r2, [pc, #28]	; (8000c54 <HAL_Init+0x40>)
 8000c36:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000c3a:	6013      	str	r3, [r2, #0]
 8000c3c:	2003      	movs	r0, #3
 8000c3e:	f000 f94f 	bl	8000ee0 <HAL_NVIC_SetPriorityGrouping>
 8000c42:	200f      	movs	r0, #15
 8000c44:	f000 f808 	bl	8000c58 <HAL_InitTick>
 8000c48:	f7ff fdac 	bl	80007a4 <HAL_MspInit>
 8000c4c:	2300      	movs	r3, #0
 8000c4e:	4618      	mov	r0, r3
 8000c50:	bd80      	pop	{r7, pc}
 8000c52:	bf00      	nop
 8000c54:	40023c00 	.word	0x40023c00

08000c58 <HAL_InitTick>:
 8000c58:	b580      	push	{r7, lr}
 8000c5a:	b082      	sub	sp, #8
 8000c5c:	af00      	add	r7, sp, #0
 8000c5e:	6078      	str	r0, [r7, #4]
 8000c60:	4b12      	ldr	r3, [pc, #72]	; (8000cac <HAL_InitTick+0x54>)
 8000c62:	681a      	ldr	r2, [r3, #0]
 8000c64:	4b12      	ldr	r3, [pc, #72]	; (8000cb0 <HAL_InitTick+0x58>)
 8000c66:	781b      	ldrb	r3, [r3, #0]
 8000c68:	4619      	mov	r1, r3
 8000c6a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000c6e:	fbb3 f3f1 	udiv	r3, r3, r1
 8000c72:	fbb2 f3f3 	udiv	r3, r2, r3
 8000c76:	4618      	mov	r0, r3
 8000c78:	f000 f967 	bl	8000f4a <HAL_SYSTICK_Config>
 8000c7c:	4603      	mov	r3, r0
 8000c7e:	2b00      	cmp	r3, #0
 8000c80:	d001      	beq.n	8000c86 <HAL_InitTick+0x2e>
 8000c82:	2301      	movs	r3, #1
 8000c84:	e00e      	b.n	8000ca4 <HAL_InitTick+0x4c>
 8000c86:	687b      	ldr	r3, [r7, #4]
 8000c88:	2b0f      	cmp	r3, #15
 8000c8a:	d80a      	bhi.n	8000ca2 <HAL_InitTick+0x4a>
 8000c8c:	2200      	movs	r2, #0
 8000c8e:	6879      	ldr	r1, [r7, #4]
 8000c90:	f04f 30ff 	mov.w	r0, #4294967295
 8000c94:	f000 f92f 	bl	8000ef6 <HAL_NVIC_SetPriority>
 8000c98:	4a06      	ldr	r2, [pc, #24]	; (8000cb4 <HAL_InitTick+0x5c>)
 8000c9a:	687b      	ldr	r3, [r7, #4]
 8000c9c:	6013      	str	r3, [r2, #0]
 8000c9e:	2300      	movs	r3, #0
 8000ca0:	e000      	b.n	8000ca4 <HAL_InitTick+0x4c>
 8000ca2:	2301      	movs	r3, #1
 8000ca4:	4618      	mov	r0, r3
 8000ca6:	3708      	adds	r7, #8
 8000ca8:	46bd      	mov	sp, r7
 8000caa:	bd80      	pop	{r7, pc}
 8000cac:	20000000 	.word	0x20000000
 8000cb0:	20000008 	.word	0x20000008
 8000cb4:	20000004 	.word	0x20000004

08000cb8 <HAL_IncTick>:
 8000cb8:	b480      	push	{r7}
 8000cba:	af00      	add	r7, sp, #0
 8000cbc:	4b06      	ldr	r3, [pc, #24]	; (8000cd8 <HAL_IncTick+0x20>)
 8000cbe:	781b      	ldrb	r3, [r3, #0]
 8000cc0:	461a      	mov	r2, r3
 8000cc2:	4b06      	ldr	r3, [pc, #24]	; (8000cdc <HAL_IncTick+0x24>)
 8000cc4:	681b      	ldr	r3, [r3, #0]
 8000cc6:	4413      	add	r3, r2
 8000cc8:	4a04      	ldr	r2, [pc, #16]	; (8000cdc <HAL_IncTick+0x24>)
 8000cca:	6013      	str	r3, [r2, #0]
 8000ccc:	bf00      	nop
 8000cce:	46bd      	mov	sp, r7
 8000cd0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000cd4:	4770      	bx	lr
 8000cd6:	bf00      	nop
 8000cd8:	20000008 	.word	0x20000008
 8000cdc:	20000168 	.word	0x20000168

08000ce0 <HAL_GetTick>:
 8000ce0:	b480      	push	{r7}
 8000ce2:	af00      	add	r7, sp, #0
 8000ce4:	4b03      	ldr	r3, [pc, #12]	; (8000cf4 <HAL_GetTick+0x14>)
 8000ce6:	681b      	ldr	r3, [r3, #0]
 8000ce8:	4618      	mov	r0, r3
 8000cea:	46bd      	mov	sp, r7
 8000cec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000cf0:	4770      	bx	lr
 8000cf2:	bf00      	nop
 8000cf4:	20000168 	.word	0x20000168

08000cf8 <HAL_Delay>:
 8000cf8:	b580      	push	{r7, lr}
 8000cfa:	b084      	sub	sp, #16
 8000cfc:	af00      	add	r7, sp, #0
 8000cfe:	6078      	str	r0, [r7, #4]
 8000d00:	f7ff ffee 	bl	8000ce0 <HAL_GetTick>
 8000d04:	60b8      	str	r0, [r7, #8]
 8000d06:	687b      	ldr	r3, [r7, #4]
 8000d08:	60fb      	str	r3, [r7, #12]
 8000d0a:	68fb      	ldr	r3, [r7, #12]
 8000d0c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8000d10:	d005      	beq.n	8000d1e <HAL_Delay+0x26>
 8000d12:	4b0a      	ldr	r3, [pc, #40]	; (8000d3c <HAL_Delay+0x44>)
 8000d14:	781b      	ldrb	r3, [r3, #0]
 8000d16:	461a      	mov	r2, r3
 8000d18:	68fb      	ldr	r3, [r7, #12]
 8000d1a:	4413      	add	r3, r2
 8000d1c:	60fb      	str	r3, [r7, #12]
 8000d1e:	bf00      	nop
 8000d20:	f7ff ffde 	bl	8000ce0 <HAL_GetTick>
 8000d24:	4602      	mov	r2, r0
 8000d26:	68bb      	ldr	r3, [r7, #8]
 8000d28:	1ad3      	subs	r3, r2, r3
 8000d2a:	68fa      	ldr	r2, [r7, #12]
 8000d2c:	429a      	cmp	r2, r3
 8000d2e:	d8f7      	bhi.n	8000d20 <HAL_Delay+0x28>
 8000d30:	bf00      	nop
 8000d32:	bf00      	nop
 8000d34:	3710      	adds	r7, #16
 8000d36:	46bd      	mov	sp, r7
 8000d38:	bd80      	pop	{r7, pc}
 8000d3a:	bf00      	nop
 8000d3c:	20000008 	.word	0x20000008

08000d40 <__NVIC_SetPriorityGrouping>:
 8000d40:	b480      	push	{r7}
 8000d42:	b085      	sub	sp, #20
 8000d44:	af00      	add	r7, sp, #0
 8000d46:	6078      	str	r0, [r7, #4]
 8000d48:	687b      	ldr	r3, [r7, #4]
 8000d4a:	f003 0307 	and.w	r3, r3, #7
 8000d4e:	60fb      	str	r3, [r7, #12]
 8000d50:	4b0c      	ldr	r3, [pc, #48]	; (8000d84 <__NVIC_SetPriorityGrouping+0x44>)
 8000d52:	68db      	ldr	r3, [r3, #12]
 8000d54:	60bb      	str	r3, [r7, #8]
 8000d56:	68ba      	ldr	r2, [r7, #8]
 8000d58:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8000d5c:	4013      	ands	r3, r2
 8000d5e:	60bb      	str	r3, [r7, #8]
 8000d60:	68fb      	ldr	r3, [r7, #12]
 8000d62:	021a      	lsls	r2, r3, #8
 8000d64:	68bb      	ldr	r3, [r7, #8]
 8000d66:	4313      	orrs	r3, r2
 8000d68:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8000d6c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000d70:	60bb      	str	r3, [r7, #8]
 8000d72:	4a04      	ldr	r2, [pc, #16]	; (8000d84 <__NVIC_SetPriorityGrouping+0x44>)
 8000d74:	68bb      	ldr	r3, [r7, #8]
 8000d76:	60d3      	str	r3, [r2, #12]
 8000d78:	bf00      	nop
 8000d7a:	3714      	adds	r7, #20
 8000d7c:	46bd      	mov	sp, r7
 8000d7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d82:	4770      	bx	lr
 8000d84:	e000ed00 	.word	0xe000ed00

08000d88 <__NVIC_GetPriorityGrouping>:
 8000d88:	b480      	push	{r7}
 8000d8a:	af00      	add	r7, sp, #0
 8000d8c:	4b04      	ldr	r3, [pc, #16]	; (8000da0 <__NVIC_GetPriorityGrouping+0x18>)
 8000d8e:	68db      	ldr	r3, [r3, #12]
 8000d90:	0a1b      	lsrs	r3, r3, #8
 8000d92:	f003 0307 	and.w	r3, r3, #7
 8000d96:	4618      	mov	r0, r3
 8000d98:	46bd      	mov	sp, r7
 8000d9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d9e:	4770      	bx	lr
 8000da0:	e000ed00 	.word	0xe000ed00

08000da4 <__NVIC_EnableIRQ>:
 8000da4:	b480      	push	{r7}
 8000da6:	b083      	sub	sp, #12
 8000da8:	af00      	add	r7, sp, #0
 8000daa:	4603      	mov	r3, r0
 8000dac:	71fb      	strb	r3, [r7, #7]
 8000dae:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000db2:	2b00      	cmp	r3, #0
 8000db4:	db0b      	blt.n	8000dce <__NVIC_EnableIRQ+0x2a>
 8000db6:	79fb      	ldrb	r3, [r7, #7]
 8000db8:	f003 021f 	and.w	r2, r3, #31
 8000dbc:	4907      	ldr	r1, [pc, #28]	; (8000ddc <__NVIC_EnableIRQ+0x38>)
 8000dbe:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000dc2:	095b      	lsrs	r3, r3, #5
 8000dc4:	2001      	movs	r0, #1
 8000dc6:	fa00 f202 	lsl.w	r2, r0, r2
 8000dca:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8000dce:	bf00      	nop
 8000dd0:	370c      	adds	r7, #12
 8000dd2:	46bd      	mov	sp, r7
 8000dd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000dd8:	4770      	bx	lr
 8000dda:	bf00      	nop
 8000ddc:	e000e100 	.word	0xe000e100

08000de0 <__NVIC_SetPriority>:
 8000de0:	b480      	push	{r7}
 8000de2:	b083      	sub	sp, #12
 8000de4:	af00      	add	r7, sp, #0
 8000de6:	4603      	mov	r3, r0
 8000de8:	6039      	str	r1, [r7, #0]
 8000dea:	71fb      	strb	r3, [r7, #7]
 8000dec:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000df0:	2b00      	cmp	r3, #0
 8000df2:	db0a      	blt.n	8000e0a <__NVIC_SetPriority+0x2a>
 8000df4:	683b      	ldr	r3, [r7, #0]
 8000df6:	b2da      	uxtb	r2, r3
 8000df8:	490c      	ldr	r1, [pc, #48]	; (8000e2c <__NVIC_SetPriority+0x4c>)
 8000dfa:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000dfe:	0112      	lsls	r2, r2, #4
 8000e00:	b2d2      	uxtb	r2, r2
 8000e02:	440b      	add	r3, r1
 8000e04:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8000e08:	e00a      	b.n	8000e20 <__NVIC_SetPriority+0x40>
 8000e0a:	683b      	ldr	r3, [r7, #0]
 8000e0c:	b2da      	uxtb	r2, r3
 8000e0e:	4908      	ldr	r1, [pc, #32]	; (8000e30 <__NVIC_SetPriority+0x50>)
 8000e10:	79fb      	ldrb	r3, [r7, #7]
 8000e12:	f003 030f 	and.w	r3, r3, #15
 8000e16:	3b04      	subs	r3, #4
 8000e18:	0112      	lsls	r2, r2, #4
 8000e1a:	b2d2      	uxtb	r2, r2
 8000e1c:	440b      	add	r3, r1
 8000e1e:	761a      	strb	r2, [r3, #24]
 8000e20:	bf00      	nop
 8000e22:	370c      	adds	r7, #12
 8000e24:	46bd      	mov	sp, r7
 8000e26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e2a:	4770      	bx	lr
 8000e2c:	e000e100 	.word	0xe000e100
 8000e30:	e000ed00 	.word	0xe000ed00

08000e34 <NVIC_EncodePriority>:
 8000e34:	b480      	push	{r7}
 8000e36:	b089      	sub	sp, #36	; 0x24
 8000e38:	af00      	add	r7, sp, #0
 8000e3a:	60f8      	str	r0, [r7, #12]
 8000e3c:	60b9      	str	r1, [r7, #8]
 8000e3e:	607a      	str	r2, [r7, #4]
 8000e40:	68fb      	ldr	r3, [r7, #12]
 8000e42:	f003 0307 	and.w	r3, r3, #7
 8000e46:	61fb      	str	r3, [r7, #28]
 8000e48:	69fb      	ldr	r3, [r7, #28]
 8000e4a:	f1c3 0307 	rsb	r3, r3, #7
 8000e4e:	2b04      	cmp	r3, #4
 8000e50:	bf28      	it	cs
 8000e52:	2304      	movcs	r3, #4
 8000e54:	61bb      	str	r3, [r7, #24]
 8000e56:	69fb      	ldr	r3, [r7, #28]
 8000e58:	3304      	adds	r3, #4
 8000e5a:	2b06      	cmp	r3, #6
 8000e5c:	d902      	bls.n	8000e64 <NVIC_EncodePriority+0x30>
 8000e5e:	69fb      	ldr	r3, [r7, #28]
 8000e60:	3b03      	subs	r3, #3
 8000e62:	e000      	b.n	8000e66 <NVIC_EncodePriority+0x32>
 8000e64:	2300      	movs	r3, #0
 8000e66:	617b      	str	r3, [r7, #20]
 8000e68:	f04f 32ff 	mov.w	r2, #4294967295
 8000e6c:	69bb      	ldr	r3, [r7, #24]
 8000e6e:	fa02 f303 	lsl.w	r3, r2, r3
 8000e72:	43da      	mvns	r2, r3
 8000e74:	68bb      	ldr	r3, [r7, #8]
 8000e76:	401a      	ands	r2, r3
 8000e78:	697b      	ldr	r3, [r7, #20]
 8000e7a:	409a      	lsls	r2, r3
 8000e7c:	f04f 31ff 	mov.w	r1, #4294967295
 8000e80:	697b      	ldr	r3, [r7, #20]
 8000e82:	fa01 f303 	lsl.w	r3, r1, r3
 8000e86:	43d9      	mvns	r1, r3
 8000e88:	687b      	ldr	r3, [r7, #4]
 8000e8a:	400b      	ands	r3, r1
 8000e8c:	4313      	orrs	r3, r2
 8000e8e:	4618      	mov	r0, r3
 8000e90:	3724      	adds	r7, #36	; 0x24
 8000e92:	46bd      	mov	sp, r7
 8000e94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e98:	4770      	bx	lr
	...

08000e9c <SysTick_Config>:
 8000e9c:	b580      	push	{r7, lr}
 8000e9e:	b082      	sub	sp, #8
 8000ea0:	af00      	add	r7, sp, #0
 8000ea2:	6078      	str	r0, [r7, #4]
 8000ea4:	687b      	ldr	r3, [r7, #4]
 8000ea6:	3b01      	subs	r3, #1
 8000ea8:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8000eac:	d301      	bcc.n	8000eb2 <SysTick_Config+0x16>
 8000eae:	2301      	movs	r3, #1
 8000eb0:	e00f      	b.n	8000ed2 <SysTick_Config+0x36>
 8000eb2:	4a0a      	ldr	r2, [pc, #40]	; (8000edc <SysTick_Config+0x40>)
 8000eb4:	687b      	ldr	r3, [r7, #4]
 8000eb6:	3b01      	subs	r3, #1
 8000eb8:	6053      	str	r3, [r2, #4]
 8000eba:	210f      	movs	r1, #15
 8000ebc:	f04f 30ff 	mov.w	r0, #4294967295
 8000ec0:	f7ff ff8e 	bl	8000de0 <__NVIC_SetPriority>
 8000ec4:	4b05      	ldr	r3, [pc, #20]	; (8000edc <SysTick_Config+0x40>)
 8000ec6:	2200      	movs	r2, #0
 8000ec8:	609a      	str	r2, [r3, #8]
 8000eca:	4b04      	ldr	r3, [pc, #16]	; (8000edc <SysTick_Config+0x40>)
 8000ecc:	2207      	movs	r2, #7
 8000ece:	601a      	str	r2, [r3, #0]
 8000ed0:	2300      	movs	r3, #0
 8000ed2:	4618      	mov	r0, r3
 8000ed4:	3708      	adds	r7, #8
 8000ed6:	46bd      	mov	sp, r7
 8000ed8:	bd80      	pop	{r7, pc}
 8000eda:	bf00      	nop
 8000edc:	e000e010 	.word	0xe000e010

08000ee0 <HAL_NVIC_SetPriorityGrouping>:
 8000ee0:	b580      	push	{r7, lr}
 8000ee2:	b082      	sub	sp, #8
 8000ee4:	af00      	add	r7, sp, #0
 8000ee6:	6078      	str	r0, [r7, #4]
 8000ee8:	6878      	ldr	r0, [r7, #4]
 8000eea:	f7ff ff29 	bl	8000d40 <__NVIC_SetPriorityGrouping>
 8000eee:	bf00      	nop
 8000ef0:	3708      	adds	r7, #8
 8000ef2:	46bd      	mov	sp, r7
 8000ef4:	bd80      	pop	{r7, pc}

08000ef6 <HAL_NVIC_SetPriority>:
 8000ef6:	b580      	push	{r7, lr}
 8000ef8:	b086      	sub	sp, #24
 8000efa:	af00      	add	r7, sp, #0
 8000efc:	4603      	mov	r3, r0
 8000efe:	60b9      	str	r1, [r7, #8]
 8000f00:	607a      	str	r2, [r7, #4]
 8000f02:	73fb      	strb	r3, [r7, #15]
 8000f04:	2300      	movs	r3, #0
 8000f06:	617b      	str	r3, [r7, #20]
 8000f08:	f7ff ff3e 	bl	8000d88 <__NVIC_GetPriorityGrouping>
 8000f0c:	6178      	str	r0, [r7, #20]
 8000f0e:	687a      	ldr	r2, [r7, #4]
 8000f10:	68b9      	ldr	r1, [r7, #8]
 8000f12:	6978      	ldr	r0, [r7, #20]
 8000f14:	f7ff ff8e 	bl	8000e34 <NVIC_EncodePriority>
 8000f18:	4602      	mov	r2, r0
 8000f1a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8000f1e:	4611      	mov	r1, r2
 8000f20:	4618      	mov	r0, r3
 8000f22:	f7ff ff5d 	bl	8000de0 <__NVIC_SetPriority>
 8000f26:	bf00      	nop
 8000f28:	3718      	adds	r7, #24
 8000f2a:	46bd      	mov	sp, r7
 8000f2c:	bd80      	pop	{r7, pc}

08000f2e <HAL_NVIC_EnableIRQ>:
 8000f2e:	b580      	push	{r7, lr}
 8000f30:	b082      	sub	sp, #8
 8000f32:	af00      	add	r7, sp, #0
 8000f34:	4603      	mov	r3, r0
 8000f36:	71fb      	strb	r3, [r7, #7]
 8000f38:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000f3c:	4618      	mov	r0, r3
 8000f3e:	f7ff ff31 	bl	8000da4 <__NVIC_EnableIRQ>
 8000f42:	bf00      	nop
 8000f44:	3708      	adds	r7, #8
 8000f46:	46bd      	mov	sp, r7
 8000f48:	bd80      	pop	{r7, pc}

08000f4a <HAL_SYSTICK_Config>:
 8000f4a:	b580      	push	{r7, lr}
 8000f4c:	b082      	sub	sp, #8
 8000f4e:	af00      	add	r7, sp, #0
 8000f50:	6078      	str	r0, [r7, #4]
 8000f52:	6878      	ldr	r0, [r7, #4]
 8000f54:	f7ff ffa2 	bl	8000e9c <SysTick_Config>
 8000f58:	4603      	mov	r3, r0
 8000f5a:	4618      	mov	r0, r3
 8000f5c:	3708      	adds	r7, #8
 8000f5e:	46bd      	mov	sp, r7
 8000f60:	bd80      	pop	{r7, pc}
	...

08000f64 <HAL_GPIO_Init>:
 8000f64:	b480      	push	{r7}
 8000f66:	b089      	sub	sp, #36	; 0x24
 8000f68:	af00      	add	r7, sp, #0
 8000f6a:	6078      	str	r0, [r7, #4]
 8000f6c:	6039      	str	r1, [r7, #0]
 8000f6e:	2300      	movs	r3, #0
 8000f70:	617b      	str	r3, [r7, #20]
 8000f72:	2300      	movs	r3, #0
 8000f74:	613b      	str	r3, [r7, #16]
 8000f76:	2300      	movs	r3, #0
 8000f78:	61bb      	str	r3, [r7, #24]
 8000f7a:	2300      	movs	r3, #0
 8000f7c:	61fb      	str	r3, [r7, #28]
 8000f7e:	e159      	b.n	8001234 <HAL_GPIO_Init+0x2d0>
 8000f80:	2201      	movs	r2, #1
 8000f82:	69fb      	ldr	r3, [r7, #28]
 8000f84:	fa02 f303 	lsl.w	r3, r2, r3
 8000f88:	617b      	str	r3, [r7, #20]
 8000f8a:	683b      	ldr	r3, [r7, #0]
 8000f8c:	681b      	ldr	r3, [r3, #0]
 8000f8e:	697a      	ldr	r2, [r7, #20]
 8000f90:	4013      	ands	r3, r2
 8000f92:	613b      	str	r3, [r7, #16]
 8000f94:	693a      	ldr	r2, [r7, #16]
 8000f96:	697b      	ldr	r3, [r7, #20]
 8000f98:	429a      	cmp	r2, r3
 8000f9a:	f040 8148 	bne.w	800122e <HAL_GPIO_Init+0x2ca>
 8000f9e:	683b      	ldr	r3, [r7, #0]
 8000fa0:	685b      	ldr	r3, [r3, #4]
 8000fa2:	f003 0303 	and.w	r3, r3, #3
 8000fa6:	2b01      	cmp	r3, #1
 8000fa8:	d005      	beq.n	8000fb6 <HAL_GPIO_Init+0x52>
 8000faa:	683b      	ldr	r3, [r7, #0]
 8000fac:	685b      	ldr	r3, [r3, #4]
 8000fae:	f003 0303 	and.w	r3, r3, #3
 8000fb2:	2b02      	cmp	r3, #2
 8000fb4:	d130      	bne.n	8001018 <HAL_GPIO_Init+0xb4>
 8000fb6:	687b      	ldr	r3, [r7, #4]
 8000fb8:	689b      	ldr	r3, [r3, #8]
 8000fba:	61bb      	str	r3, [r7, #24]
 8000fbc:	69fb      	ldr	r3, [r7, #28]
 8000fbe:	005b      	lsls	r3, r3, #1
 8000fc0:	2203      	movs	r2, #3
 8000fc2:	fa02 f303 	lsl.w	r3, r2, r3
 8000fc6:	43db      	mvns	r3, r3
 8000fc8:	69ba      	ldr	r2, [r7, #24]
 8000fca:	4013      	ands	r3, r2
 8000fcc:	61bb      	str	r3, [r7, #24]
 8000fce:	683b      	ldr	r3, [r7, #0]
 8000fd0:	68da      	ldr	r2, [r3, #12]
 8000fd2:	69fb      	ldr	r3, [r7, #28]
 8000fd4:	005b      	lsls	r3, r3, #1
 8000fd6:	fa02 f303 	lsl.w	r3, r2, r3
 8000fda:	69ba      	ldr	r2, [r7, #24]
 8000fdc:	4313      	orrs	r3, r2
 8000fde:	61bb      	str	r3, [r7, #24]
 8000fe0:	687b      	ldr	r3, [r7, #4]
 8000fe2:	69ba      	ldr	r2, [r7, #24]
 8000fe4:	609a      	str	r2, [r3, #8]
 8000fe6:	687b      	ldr	r3, [r7, #4]
 8000fe8:	685b      	ldr	r3, [r3, #4]
 8000fea:	61bb      	str	r3, [r7, #24]
 8000fec:	2201      	movs	r2, #1
 8000fee:	69fb      	ldr	r3, [r7, #28]
 8000ff0:	fa02 f303 	lsl.w	r3, r2, r3
 8000ff4:	43db      	mvns	r3, r3
 8000ff6:	69ba      	ldr	r2, [r7, #24]
 8000ff8:	4013      	ands	r3, r2
 8000ffa:	61bb      	str	r3, [r7, #24]
 8000ffc:	683b      	ldr	r3, [r7, #0]
 8000ffe:	685b      	ldr	r3, [r3, #4]
 8001000:	091b      	lsrs	r3, r3, #4
 8001002:	f003 0201 	and.w	r2, r3, #1
 8001006:	69fb      	ldr	r3, [r7, #28]
 8001008:	fa02 f303 	lsl.w	r3, r2, r3
 800100c:	69ba      	ldr	r2, [r7, #24]
 800100e:	4313      	orrs	r3, r2
 8001010:	61bb      	str	r3, [r7, #24]
 8001012:	687b      	ldr	r3, [r7, #4]
 8001014:	69ba      	ldr	r2, [r7, #24]
 8001016:	605a      	str	r2, [r3, #4]
 8001018:	683b      	ldr	r3, [r7, #0]
 800101a:	685b      	ldr	r3, [r3, #4]
 800101c:	f003 0303 	and.w	r3, r3, #3
 8001020:	2b03      	cmp	r3, #3
 8001022:	d017      	beq.n	8001054 <HAL_GPIO_Init+0xf0>
 8001024:	687b      	ldr	r3, [r7, #4]
 8001026:	68db      	ldr	r3, [r3, #12]
 8001028:	61bb      	str	r3, [r7, #24]
 800102a:	69fb      	ldr	r3, [r7, #28]
 800102c:	005b      	lsls	r3, r3, #1
 800102e:	2203      	movs	r2, #3
 8001030:	fa02 f303 	lsl.w	r3, r2, r3
 8001034:	43db      	mvns	r3, r3
 8001036:	69ba      	ldr	r2, [r7, #24]
 8001038:	4013      	ands	r3, r2
 800103a:	61bb      	str	r3, [r7, #24]
 800103c:	683b      	ldr	r3, [r7, #0]
 800103e:	689a      	ldr	r2, [r3, #8]
 8001040:	69fb      	ldr	r3, [r7, #28]
 8001042:	005b      	lsls	r3, r3, #1
 8001044:	fa02 f303 	lsl.w	r3, r2, r3
 8001048:	69ba      	ldr	r2, [r7, #24]
 800104a:	4313      	orrs	r3, r2
 800104c:	61bb      	str	r3, [r7, #24]
 800104e:	687b      	ldr	r3, [r7, #4]
 8001050:	69ba      	ldr	r2, [r7, #24]
 8001052:	60da      	str	r2, [r3, #12]
 8001054:	683b      	ldr	r3, [r7, #0]
 8001056:	685b      	ldr	r3, [r3, #4]
 8001058:	f003 0303 	and.w	r3, r3, #3
 800105c:	2b02      	cmp	r3, #2
 800105e:	d123      	bne.n	80010a8 <HAL_GPIO_Init+0x144>
 8001060:	69fb      	ldr	r3, [r7, #28]
 8001062:	08da      	lsrs	r2, r3, #3
 8001064:	687b      	ldr	r3, [r7, #4]
 8001066:	3208      	adds	r2, #8
 8001068:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800106c:	61bb      	str	r3, [r7, #24]
 800106e:	69fb      	ldr	r3, [r7, #28]
 8001070:	f003 0307 	and.w	r3, r3, #7
 8001074:	009b      	lsls	r3, r3, #2
 8001076:	220f      	movs	r2, #15
 8001078:	fa02 f303 	lsl.w	r3, r2, r3
 800107c:	43db      	mvns	r3, r3
 800107e:	69ba      	ldr	r2, [r7, #24]
 8001080:	4013      	ands	r3, r2
 8001082:	61bb      	str	r3, [r7, #24]
 8001084:	683b      	ldr	r3, [r7, #0]
 8001086:	691a      	ldr	r2, [r3, #16]
 8001088:	69fb      	ldr	r3, [r7, #28]
 800108a:	f003 0307 	and.w	r3, r3, #7
 800108e:	009b      	lsls	r3, r3, #2
 8001090:	fa02 f303 	lsl.w	r3, r2, r3
 8001094:	69ba      	ldr	r2, [r7, #24]
 8001096:	4313      	orrs	r3, r2
 8001098:	61bb      	str	r3, [r7, #24]
 800109a:	69fb      	ldr	r3, [r7, #28]
 800109c:	08da      	lsrs	r2, r3, #3
 800109e:	687b      	ldr	r3, [r7, #4]
 80010a0:	3208      	adds	r2, #8
 80010a2:	69b9      	ldr	r1, [r7, #24]
 80010a4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80010a8:	687b      	ldr	r3, [r7, #4]
 80010aa:	681b      	ldr	r3, [r3, #0]
 80010ac:	61bb      	str	r3, [r7, #24]
 80010ae:	69fb      	ldr	r3, [r7, #28]
 80010b0:	005b      	lsls	r3, r3, #1
 80010b2:	2203      	movs	r2, #3
 80010b4:	fa02 f303 	lsl.w	r3, r2, r3
 80010b8:	43db      	mvns	r3, r3
 80010ba:	69ba      	ldr	r2, [r7, #24]
 80010bc:	4013      	ands	r3, r2
 80010be:	61bb      	str	r3, [r7, #24]
 80010c0:	683b      	ldr	r3, [r7, #0]
 80010c2:	685b      	ldr	r3, [r3, #4]
 80010c4:	f003 0203 	and.w	r2, r3, #3
 80010c8:	69fb      	ldr	r3, [r7, #28]
 80010ca:	005b      	lsls	r3, r3, #1
 80010cc:	fa02 f303 	lsl.w	r3, r2, r3
 80010d0:	69ba      	ldr	r2, [r7, #24]
 80010d2:	4313      	orrs	r3, r2
 80010d4:	61bb      	str	r3, [r7, #24]
 80010d6:	687b      	ldr	r3, [r7, #4]
 80010d8:	69ba      	ldr	r2, [r7, #24]
 80010da:	601a      	str	r2, [r3, #0]
 80010dc:	683b      	ldr	r3, [r7, #0]
 80010de:	685b      	ldr	r3, [r3, #4]
 80010e0:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 80010e4:	2b00      	cmp	r3, #0
 80010e6:	f000 80a2 	beq.w	800122e <HAL_GPIO_Init+0x2ca>
 80010ea:	2300      	movs	r3, #0
 80010ec:	60fb      	str	r3, [r7, #12]
 80010ee:	4b57      	ldr	r3, [pc, #348]	; (800124c <HAL_GPIO_Init+0x2e8>)
 80010f0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80010f2:	4a56      	ldr	r2, [pc, #344]	; (800124c <HAL_GPIO_Init+0x2e8>)
 80010f4:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80010f8:	6453      	str	r3, [r2, #68]	; 0x44
 80010fa:	4b54      	ldr	r3, [pc, #336]	; (800124c <HAL_GPIO_Init+0x2e8>)
 80010fc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80010fe:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001102:	60fb      	str	r3, [r7, #12]
 8001104:	68fb      	ldr	r3, [r7, #12]
 8001106:	4a52      	ldr	r2, [pc, #328]	; (8001250 <HAL_GPIO_Init+0x2ec>)
 8001108:	69fb      	ldr	r3, [r7, #28]
 800110a:	089b      	lsrs	r3, r3, #2
 800110c:	3302      	adds	r3, #2
 800110e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001112:	61bb      	str	r3, [r7, #24]
 8001114:	69fb      	ldr	r3, [r7, #28]
 8001116:	f003 0303 	and.w	r3, r3, #3
 800111a:	009b      	lsls	r3, r3, #2
 800111c:	220f      	movs	r2, #15
 800111e:	fa02 f303 	lsl.w	r3, r2, r3
 8001122:	43db      	mvns	r3, r3
 8001124:	69ba      	ldr	r2, [r7, #24]
 8001126:	4013      	ands	r3, r2
 8001128:	61bb      	str	r3, [r7, #24]
 800112a:	687b      	ldr	r3, [r7, #4]
 800112c:	4a49      	ldr	r2, [pc, #292]	; (8001254 <HAL_GPIO_Init+0x2f0>)
 800112e:	4293      	cmp	r3, r2
 8001130:	d019      	beq.n	8001166 <HAL_GPIO_Init+0x202>
 8001132:	687b      	ldr	r3, [r7, #4]
 8001134:	4a48      	ldr	r2, [pc, #288]	; (8001258 <HAL_GPIO_Init+0x2f4>)
 8001136:	4293      	cmp	r3, r2
 8001138:	d013      	beq.n	8001162 <HAL_GPIO_Init+0x1fe>
 800113a:	687b      	ldr	r3, [r7, #4]
 800113c:	4a47      	ldr	r2, [pc, #284]	; (800125c <HAL_GPIO_Init+0x2f8>)
 800113e:	4293      	cmp	r3, r2
 8001140:	d00d      	beq.n	800115e <HAL_GPIO_Init+0x1fa>
 8001142:	687b      	ldr	r3, [r7, #4]
 8001144:	4a46      	ldr	r2, [pc, #280]	; (8001260 <HAL_GPIO_Init+0x2fc>)
 8001146:	4293      	cmp	r3, r2
 8001148:	d007      	beq.n	800115a <HAL_GPIO_Init+0x1f6>
 800114a:	687b      	ldr	r3, [r7, #4]
 800114c:	4a45      	ldr	r2, [pc, #276]	; (8001264 <HAL_GPIO_Init+0x300>)
 800114e:	4293      	cmp	r3, r2
 8001150:	d101      	bne.n	8001156 <HAL_GPIO_Init+0x1f2>
 8001152:	2304      	movs	r3, #4
 8001154:	e008      	b.n	8001168 <HAL_GPIO_Init+0x204>
 8001156:	2307      	movs	r3, #7
 8001158:	e006      	b.n	8001168 <HAL_GPIO_Init+0x204>
 800115a:	2303      	movs	r3, #3
 800115c:	e004      	b.n	8001168 <HAL_GPIO_Init+0x204>
 800115e:	2302      	movs	r3, #2
 8001160:	e002      	b.n	8001168 <HAL_GPIO_Init+0x204>
 8001162:	2301      	movs	r3, #1
 8001164:	e000      	b.n	8001168 <HAL_GPIO_Init+0x204>
 8001166:	2300      	movs	r3, #0
 8001168:	69fa      	ldr	r2, [r7, #28]
 800116a:	f002 0203 	and.w	r2, r2, #3
 800116e:	0092      	lsls	r2, r2, #2
 8001170:	4093      	lsls	r3, r2
 8001172:	69ba      	ldr	r2, [r7, #24]
 8001174:	4313      	orrs	r3, r2
 8001176:	61bb      	str	r3, [r7, #24]
 8001178:	4935      	ldr	r1, [pc, #212]	; (8001250 <HAL_GPIO_Init+0x2ec>)
 800117a:	69fb      	ldr	r3, [r7, #28]
 800117c:	089b      	lsrs	r3, r3, #2
 800117e:	3302      	adds	r3, #2
 8001180:	69ba      	ldr	r2, [r7, #24]
 8001182:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001186:	4b38      	ldr	r3, [pc, #224]	; (8001268 <HAL_GPIO_Init+0x304>)
 8001188:	681b      	ldr	r3, [r3, #0]
 800118a:	61bb      	str	r3, [r7, #24]
 800118c:	693b      	ldr	r3, [r7, #16]
 800118e:	43db      	mvns	r3, r3
 8001190:	69ba      	ldr	r2, [r7, #24]
 8001192:	4013      	ands	r3, r2
 8001194:	61bb      	str	r3, [r7, #24]
 8001196:	683b      	ldr	r3, [r7, #0]
 8001198:	685b      	ldr	r3, [r3, #4]
 800119a:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800119e:	2b00      	cmp	r3, #0
 80011a0:	d003      	beq.n	80011aa <HAL_GPIO_Init+0x246>
 80011a2:	69ba      	ldr	r2, [r7, #24]
 80011a4:	693b      	ldr	r3, [r7, #16]
 80011a6:	4313      	orrs	r3, r2
 80011a8:	61bb      	str	r3, [r7, #24]
 80011aa:	4a2f      	ldr	r2, [pc, #188]	; (8001268 <HAL_GPIO_Init+0x304>)
 80011ac:	69bb      	ldr	r3, [r7, #24]
 80011ae:	6013      	str	r3, [r2, #0]
 80011b0:	4b2d      	ldr	r3, [pc, #180]	; (8001268 <HAL_GPIO_Init+0x304>)
 80011b2:	685b      	ldr	r3, [r3, #4]
 80011b4:	61bb      	str	r3, [r7, #24]
 80011b6:	693b      	ldr	r3, [r7, #16]
 80011b8:	43db      	mvns	r3, r3
 80011ba:	69ba      	ldr	r2, [r7, #24]
 80011bc:	4013      	ands	r3, r2
 80011be:	61bb      	str	r3, [r7, #24]
 80011c0:	683b      	ldr	r3, [r7, #0]
 80011c2:	685b      	ldr	r3, [r3, #4]
 80011c4:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80011c8:	2b00      	cmp	r3, #0
 80011ca:	d003      	beq.n	80011d4 <HAL_GPIO_Init+0x270>
 80011cc:	69ba      	ldr	r2, [r7, #24]
 80011ce:	693b      	ldr	r3, [r7, #16]
 80011d0:	4313      	orrs	r3, r2
 80011d2:	61bb      	str	r3, [r7, #24]
 80011d4:	4a24      	ldr	r2, [pc, #144]	; (8001268 <HAL_GPIO_Init+0x304>)
 80011d6:	69bb      	ldr	r3, [r7, #24]
 80011d8:	6053      	str	r3, [r2, #4]
 80011da:	4b23      	ldr	r3, [pc, #140]	; (8001268 <HAL_GPIO_Init+0x304>)
 80011dc:	689b      	ldr	r3, [r3, #8]
 80011de:	61bb      	str	r3, [r7, #24]
 80011e0:	693b      	ldr	r3, [r7, #16]
 80011e2:	43db      	mvns	r3, r3
 80011e4:	69ba      	ldr	r2, [r7, #24]
 80011e6:	4013      	ands	r3, r2
 80011e8:	61bb      	str	r3, [r7, #24]
 80011ea:	683b      	ldr	r3, [r7, #0]
 80011ec:	685b      	ldr	r3, [r3, #4]
 80011ee:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80011f2:	2b00      	cmp	r3, #0
 80011f4:	d003      	beq.n	80011fe <HAL_GPIO_Init+0x29a>
 80011f6:	69ba      	ldr	r2, [r7, #24]
 80011f8:	693b      	ldr	r3, [r7, #16]
 80011fa:	4313      	orrs	r3, r2
 80011fc:	61bb      	str	r3, [r7, #24]
 80011fe:	4a1a      	ldr	r2, [pc, #104]	; (8001268 <HAL_GPIO_Init+0x304>)
 8001200:	69bb      	ldr	r3, [r7, #24]
 8001202:	6093      	str	r3, [r2, #8]
 8001204:	4b18      	ldr	r3, [pc, #96]	; (8001268 <HAL_GPIO_Init+0x304>)
 8001206:	68db      	ldr	r3, [r3, #12]
 8001208:	61bb      	str	r3, [r7, #24]
 800120a:	693b      	ldr	r3, [r7, #16]
 800120c:	43db      	mvns	r3, r3
 800120e:	69ba      	ldr	r2, [r7, #24]
 8001210:	4013      	ands	r3, r2
 8001212:	61bb      	str	r3, [r7, #24]
 8001214:	683b      	ldr	r3, [r7, #0]
 8001216:	685b      	ldr	r3, [r3, #4]
 8001218:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800121c:	2b00      	cmp	r3, #0
 800121e:	d003      	beq.n	8001228 <HAL_GPIO_Init+0x2c4>
 8001220:	69ba      	ldr	r2, [r7, #24]
 8001222:	693b      	ldr	r3, [r7, #16]
 8001224:	4313      	orrs	r3, r2
 8001226:	61bb      	str	r3, [r7, #24]
 8001228:	4a0f      	ldr	r2, [pc, #60]	; (8001268 <HAL_GPIO_Init+0x304>)
 800122a:	69bb      	ldr	r3, [r7, #24]
 800122c:	60d3      	str	r3, [r2, #12]
 800122e:	69fb      	ldr	r3, [r7, #28]
 8001230:	3301      	adds	r3, #1
 8001232:	61fb      	str	r3, [r7, #28]
 8001234:	69fb      	ldr	r3, [r7, #28]
 8001236:	2b0f      	cmp	r3, #15
 8001238:	f67f aea2 	bls.w	8000f80 <HAL_GPIO_Init+0x1c>
 800123c:	bf00      	nop
 800123e:	bf00      	nop
 8001240:	3724      	adds	r7, #36	; 0x24
 8001242:	46bd      	mov	sp, r7
 8001244:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001248:	4770      	bx	lr
 800124a:	bf00      	nop
 800124c:	40023800 	.word	0x40023800
 8001250:	40013800 	.word	0x40013800
 8001254:	40020000 	.word	0x40020000
 8001258:	40020400 	.word	0x40020400
 800125c:	40020800 	.word	0x40020800
 8001260:	40020c00 	.word	0x40020c00
 8001264:	40021000 	.word	0x40021000
 8001268:	40013c00 	.word	0x40013c00

0800126c <HAL_HCD_Init>:
 800126c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800126e:	b08f      	sub	sp, #60	; 0x3c
 8001270:	af0a      	add	r7, sp, #40	; 0x28
 8001272:	6078      	str	r0, [r7, #4]
 8001274:	687b      	ldr	r3, [r7, #4]
 8001276:	2b00      	cmp	r3, #0
 8001278:	d101      	bne.n	800127e <HAL_HCD_Init+0x12>
 800127a:	2301      	movs	r3, #1
 800127c:	e054      	b.n	8001328 <HAL_HCD_Init+0xbc>
 800127e:	687b      	ldr	r3, [r7, #4]
 8001280:	681b      	ldr	r3, [r3, #0]
 8001282:	60fb      	str	r3, [r7, #12]
 8001284:	687b      	ldr	r3, [r7, #4]
 8001286:	f893 32f9 	ldrb.w	r3, [r3, #761]	; 0x2f9
 800128a:	b2db      	uxtb	r3, r3
 800128c:	2b00      	cmp	r3, #0
 800128e:	d106      	bne.n	800129e <HAL_HCD_Init+0x32>
 8001290:	687b      	ldr	r3, [r7, #4]
 8001292:	2200      	movs	r2, #0
 8001294:	f883 22f8 	strb.w	r2, [r3, #760]	; 0x2f8
 8001298:	6878      	ldr	r0, [r7, #4]
 800129a:	f006 f86b 	bl	8007374 <HAL_HCD_MspInit>
 800129e:	687b      	ldr	r3, [r7, #4]
 80012a0:	2203      	movs	r2, #3
 80012a2:	f883 22f9 	strb.w	r2, [r3, #761]	; 0x2f9
 80012a6:	68fb      	ldr	r3, [r7, #12]
 80012a8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80012aa:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80012ae:	2b00      	cmp	r3, #0
 80012b0:	d102      	bne.n	80012b8 <HAL_HCD_Init+0x4c>
 80012b2:	687b      	ldr	r3, [r7, #4]
 80012b4:	2200      	movs	r2, #0
 80012b6:	611a      	str	r2, [r3, #16]
 80012b8:	687b      	ldr	r3, [r7, #4]
 80012ba:	681b      	ldr	r3, [r3, #0]
 80012bc:	4618      	mov	r0, r3
 80012be:	f002 fd15 	bl	8003cec <USB_DisableGlobalInt>
 80012c2:	687b      	ldr	r3, [r7, #4]
 80012c4:	681b      	ldr	r3, [r3, #0]
 80012c6:	603b      	str	r3, [r7, #0]
 80012c8:	687e      	ldr	r6, [r7, #4]
 80012ca:	466d      	mov	r5, sp
 80012cc:	f106 0410 	add.w	r4, r6, #16
 80012d0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80012d2:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80012d4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80012d6:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80012d8:	e894 0003 	ldmia.w	r4, {r0, r1}
 80012dc:	e885 0003 	stmia.w	r5, {r0, r1}
 80012e0:	1d33      	adds	r3, r6, #4
 80012e2:	cb0e      	ldmia	r3, {r1, r2, r3}
 80012e4:	6838      	ldr	r0, [r7, #0]
 80012e6:	f002 fc8f 	bl	8003c08 <USB_CoreInit>
 80012ea:	687b      	ldr	r3, [r7, #4]
 80012ec:	681b      	ldr	r3, [r3, #0]
 80012ee:	2101      	movs	r1, #1
 80012f0:	4618      	mov	r0, r3
 80012f2:	f002 fd0c 	bl	8003d0e <USB_SetCurrentMode>
 80012f6:	687b      	ldr	r3, [r7, #4]
 80012f8:	681b      	ldr	r3, [r3, #0]
 80012fa:	603b      	str	r3, [r7, #0]
 80012fc:	687e      	ldr	r6, [r7, #4]
 80012fe:	466d      	mov	r5, sp
 8001300:	f106 0410 	add.w	r4, r6, #16
 8001304:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001306:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8001308:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800130a:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800130c:	e894 0003 	ldmia.w	r4, {r0, r1}
 8001310:	e885 0003 	stmia.w	r5, {r0, r1}
 8001314:	1d33      	adds	r3, r6, #4
 8001316:	cb0e      	ldmia	r3, {r1, r2, r3}
 8001318:	6838      	ldr	r0, [r7, #0]
 800131a:	f002 fe73 	bl	8004004 <USB_HostInit>
 800131e:	687b      	ldr	r3, [r7, #4]
 8001320:	2201      	movs	r2, #1
 8001322:	f883 22f9 	strb.w	r2, [r3, #761]	; 0x2f9
 8001326:	2300      	movs	r3, #0
 8001328:	4618      	mov	r0, r3
 800132a:	3714      	adds	r7, #20
 800132c:	46bd      	mov	sp, r7
 800132e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08001330 <HAL_HCD_HC_Init>:
 8001330:	b590      	push	{r4, r7, lr}
 8001332:	b089      	sub	sp, #36	; 0x24
 8001334:	af04      	add	r7, sp, #16
 8001336:	6078      	str	r0, [r7, #4]
 8001338:	4608      	mov	r0, r1
 800133a:	4611      	mov	r1, r2
 800133c:	461a      	mov	r2, r3
 800133e:	4603      	mov	r3, r0
 8001340:	70fb      	strb	r3, [r7, #3]
 8001342:	460b      	mov	r3, r1
 8001344:	70bb      	strb	r3, [r7, #2]
 8001346:	4613      	mov	r3, r2
 8001348:	707b      	strb	r3, [r7, #1]
 800134a:	687b      	ldr	r3, [r7, #4]
 800134c:	f893 32f8 	ldrb.w	r3, [r3, #760]	; 0x2f8
 8001350:	2b01      	cmp	r3, #1
 8001352:	d101      	bne.n	8001358 <HAL_HCD_HC_Init+0x28>
 8001354:	2302      	movs	r3, #2
 8001356:	e076      	b.n	8001446 <HAL_HCD_HC_Init+0x116>
 8001358:	687b      	ldr	r3, [r7, #4]
 800135a:	2201      	movs	r2, #1
 800135c:	f883 22f8 	strb.w	r2, [r3, #760]	; 0x2f8
 8001360:	78fb      	ldrb	r3, [r7, #3]
 8001362:	687a      	ldr	r2, [r7, #4]
 8001364:	212c      	movs	r1, #44	; 0x2c
 8001366:	fb01 f303 	mul.w	r3, r1, r3
 800136a:	4413      	add	r3, r2
 800136c:	333d      	adds	r3, #61	; 0x3d
 800136e:	2200      	movs	r2, #0
 8001370:	701a      	strb	r2, [r3, #0]
 8001372:	78fb      	ldrb	r3, [r7, #3]
 8001374:	687a      	ldr	r2, [r7, #4]
 8001376:	212c      	movs	r1, #44	; 0x2c
 8001378:	fb01 f303 	mul.w	r3, r1, r3
 800137c:	4413      	add	r3, r2
 800137e:	3338      	adds	r3, #56	; 0x38
 8001380:	787a      	ldrb	r2, [r7, #1]
 8001382:	701a      	strb	r2, [r3, #0]
 8001384:	78fb      	ldrb	r3, [r7, #3]
 8001386:	687a      	ldr	r2, [r7, #4]
 8001388:	212c      	movs	r1, #44	; 0x2c
 800138a:	fb01 f303 	mul.w	r3, r1, r3
 800138e:	4413      	add	r3, r2
 8001390:	3340      	adds	r3, #64	; 0x40
 8001392:	8d3a      	ldrh	r2, [r7, #40]	; 0x28
 8001394:	801a      	strh	r2, [r3, #0]
 8001396:	78fb      	ldrb	r3, [r7, #3]
 8001398:	687a      	ldr	r2, [r7, #4]
 800139a:	212c      	movs	r1, #44	; 0x2c
 800139c:	fb01 f303 	mul.w	r3, r1, r3
 80013a0:	4413      	add	r3, r2
 80013a2:	3339      	adds	r3, #57	; 0x39
 80013a4:	78fa      	ldrb	r2, [r7, #3]
 80013a6:	701a      	strb	r2, [r3, #0]
 80013a8:	78fb      	ldrb	r3, [r7, #3]
 80013aa:	687a      	ldr	r2, [r7, #4]
 80013ac:	212c      	movs	r1, #44	; 0x2c
 80013ae:	fb01 f303 	mul.w	r3, r1, r3
 80013b2:	4413      	add	r3, r2
 80013b4:	333f      	adds	r3, #63	; 0x3f
 80013b6:	f897 2024 	ldrb.w	r2, [r7, #36]	; 0x24
 80013ba:	701a      	strb	r2, [r3, #0]
 80013bc:	78fb      	ldrb	r3, [r7, #3]
 80013be:	78ba      	ldrb	r2, [r7, #2]
 80013c0:	f002 027f 	and.w	r2, r2, #127	; 0x7f
 80013c4:	b2d0      	uxtb	r0, r2
 80013c6:	687a      	ldr	r2, [r7, #4]
 80013c8:	212c      	movs	r1, #44	; 0x2c
 80013ca:	fb01 f303 	mul.w	r3, r1, r3
 80013ce:	4413      	add	r3, r2
 80013d0:	333a      	adds	r3, #58	; 0x3a
 80013d2:	4602      	mov	r2, r0
 80013d4:	701a      	strb	r2, [r3, #0]
 80013d6:	f997 3002 	ldrsb.w	r3, [r7, #2]
 80013da:	2b00      	cmp	r3, #0
 80013dc:	da09      	bge.n	80013f2 <HAL_HCD_HC_Init+0xc2>
 80013de:	78fb      	ldrb	r3, [r7, #3]
 80013e0:	687a      	ldr	r2, [r7, #4]
 80013e2:	212c      	movs	r1, #44	; 0x2c
 80013e4:	fb01 f303 	mul.w	r3, r1, r3
 80013e8:	4413      	add	r3, r2
 80013ea:	333b      	adds	r3, #59	; 0x3b
 80013ec:	2201      	movs	r2, #1
 80013ee:	701a      	strb	r2, [r3, #0]
 80013f0:	e008      	b.n	8001404 <HAL_HCD_HC_Init+0xd4>
 80013f2:	78fb      	ldrb	r3, [r7, #3]
 80013f4:	687a      	ldr	r2, [r7, #4]
 80013f6:	212c      	movs	r1, #44	; 0x2c
 80013f8:	fb01 f303 	mul.w	r3, r1, r3
 80013fc:	4413      	add	r3, r2
 80013fe:	333b      	adds	r3, #59	; 0x3b
 8001400:	2200      	movs	r2, #0
 8001402:	701a      	strb	r2, [r3, #0]
 8001404:	78fb      	ldrb	r3, [r7, #3]
 8001406:	687a      	ldr	r2, [r7, #4]
 8001408:	212c      	movs	r1, #44	; 0x2c
 800140a:	fb01 f303 	mul.w	r3, r1, r3
 800140e:	4413      	add	r3, r2
 8001410:	333c      	adds	r3, #60	; 0x3c
 8001412:	f897 2020 	ldrb.w	r2, [r7, #32]
 8001416:	701a      	strb	r2, [r3, #0]
 8001418:	687b      	ldr	r3, [r7, #4]
 800141a:	6818      	ldr	r0, [r3, #0]
 800141c:	787c      	ldrb	r4, [r7, #1]
 800141e:	78ba      	ldrb	r2, [r7, #2]
 8001420:	78f9      	ldrb	r1, [r7, #3]
 8001422:	8d3b      	ldrh	r3, [r7, #40]	; 0x28
 8001424:	9302      	str	r3, [sp, #8]
 8001426:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 800142a:	9301      	str	r3, [sp, #4]
 800142c:	f897 3020 	ldrb.w	r3, [r7, #32]
 8001430:	9300      	str	r3, [sp, #0]
 8001432:	4623      	mov	r3, r4
 8001434:	f002 ff60 	bl	80042f8 <USB_HC_Init>
 8001438:	4603      	mov	r3, r0
 800143a:	73fb      	strb	r3, [r7, #15]
 800143c:	687b      	ldr	r3, [r7, #4]
 800143e:	2200      	movs	r2, #0
 8001440:	f883 22f8 	strb.w	r2, [r3, #760]	; 0x2f8
 8001444:	7bfb      	ldrb	r3, [r7, #15]
 8001446:	4618      	mov	r0, r3
 8001448:	3714      	adds	r7, #20
 800144a:	46bd      	mov	sp, r7
 800144c:	bd90      	pop	{r4, r7, pc}

0800144e <HAL_HCD_HC_Halt>:
 800144e:	b580      	push	{r7, lr}
 8001450:	b084      	sub	sp, #16
 8001452:	af00      	add	r7, sp, #0
 8001454:	6078      	str	r0, [r7, #4]
 8001456:	460b      	mov	r3, r1
 8001458:	70fb      	strb	r3, [r7, #3]
 800145a:	2300      	movs	r3, #0
 800145c:	73fb      	strb	r3, [r7, #15]
 800145e:	687b      	ldr	r3, [r7, #4]
 8001460:	f893 32f8 	ldrb.w	r3, [r3, #760]	; 0x2f8
 8001464:	2b01      	cmp	r3, #1
 8001466:	d101      	bne.n	800146c <HAL_HCD_HC_Halt+0x1e>
 8001468:	2302      	movs	r3, #2
 800146a:	e00f      	b.n	800148c <HAL_HCD_HC_Halt+0x3e>
 800146c:	687b      	ldr	r3, [r7, #4]
 800146e:	2201      	movs	r2, #1
 8001470:	f883 22f8 	strb.w	r2, [r3, #760]	; 0x2f8
 8001474:	687b      	ldr	r3, [r7, #4]
 8001476:	681b      	ldr	r3, [r3, #0]
 8001478:	78fa      	ldrb	r2, [r7, #3]
 800147a:	4611      	mov	r1, r2
 800147c:	4618      	mov	r0, r3
 800147e:	f003 f99c 	bl	80047ba <USB_HC_Halt>
 8001482:	687b      	ldr	r3, [r7, #4]
 8001484:	2200      	movs	r2, #0
 8001486:	f883 22f8 	strb.w	r2, [r3, #760]	; 0x2f8
 800148a:	7bfb      	ldrb	r3, [r7, #15]
 800148c:	4618      	mov	r0, r3
 800148e:	3710      	adds	r7, #16
 8001490:	46bd      	mov	sp, r7
 8001492:	bd80      	pop	{r7, pc}

08001494 <HAL_HCD_HC_SubmitRequest>:
 8001494:	b580      	push	{r7, lr}
 8001496:	b082      	sub	sp, #8
 8001498:	af00      	add	r7, sp, #0
 800149a:	6078      	str	r0, [r7, #4]
 800149c:	4608      	mov	r0, r1
 800149e:	4611      	mov	r1, r2
 80014a0:	461a      	mov	r2, r3
 80014a2:	4603      	mov	r3, r0
 80014a4:	70fb      	strb	r3, [r7, #3]
 80014a6:	460b      	mov	r3, r1
 80014a8:	70bb      	strb	r3, [r7, #2]
 80014aa:	4613      	mov	r3, r2
 80014ac:	707b      	strb	r3, [r7, #1]
 80014ae:	78fb      	ldrb	r3, [r7, #3]
 80014b0:	687a      	ldr	r2, [r7, #4]
 80014b2:	212c      	movs	r1, #44	; 0x2c
 80014b4:	fb01 f303 	mul.w	r3, r1, r3
 80014b8:	4413      	add	r3, r2
 80014ba:	333b      	adds	r3, #59	; 0x3b
 80014bc:	78ba      	ldrb	r2, [r7, #2]
 80014be:	701a      	strb	r2, [r3, #0]
 80014c0:	78fb      	ldrb	r3, [r7, #3]
 80014c2:	687a      	ldr	r2, [r7, #4]
 80014c4:	212c      	movs	r1, #44	; 0x2c
 80014c6:	fb01 f303 	mul.w	r3, r1, r3
 80014ca:	4413      	add	r3, r2
 80014cc:	333f      	adds	r3, #63	; 0x3f
 80014ce:	787a      	ldrb	r2, [r7, #1]
 80014d0:	701a      	strb	r2, [r3, #0]
 80014d2:	7c3b      	ldrb	r3, [r7, #16]
 80014d4:	2b00      	cmp	r3, #0
 80014d6:	d112      	bne.n	80014fe <HAL_HCD_HC_SubmitRequest+0x6a>
 80014d8:	78fb      	ldrb	r3, [r7, #3]
 80014da:	687a      	ldr	r2, [r7, #4]
 80014dc:	212c      	movs	r1, #44	; 0x2c
 80014de:	fb01 f303 	mul.w	r3, r1, r3
 80014e2:	4413      	add	r3, r2
 80014e4:	3342      	adds	r3, #66	; 0x42
 80014e6:	2203      	movs	r2, #3
 80014e8:	701a      	strb	r2, [r3, #0]
 80014ea:	78fb      	ldrb	r3, [r7, #3]
 80014ec:	687a      	ldr	r2, [r7, #4]
 80014ee:	212c      	movs	r1, #44	; 0x2c
 80014f0:	fb01 f303 	mul.w	r3, r1, r3
 80014f4:	4413      	add	r3, r2
 80014f6:	333d      	adds	r3, #61	; 0x3d
 80014f8:	7f3a      	ldrb	r2, [r7, #28]
 80014fa:	701a      	strb	r2, [r3, #0]
 80014fc:	e008      	b.n	8001510 <HAL_HCD_HC_SubmitRequest+0x7c>
 80014fe:	78fb      	ldrb	r3, [r7, #3]
 8001500:	687a      	ldr	r2, [r7, #4]
 8001502:	212c      	movs	r1, #44	; 0x2c
 8001504:	fb01 f303 	mul.w	r3, r1, r3
 8001508:	4413      	add	r3, r2
 800150a:	3342      	adds	r3, #66	; 0x42
 800150c:	2202      	movs	r2, #2
 800150e:	701a      	strb	r2, [r3, #0]
 8001510:	787b      	ldrb	r3, [r7, #1]
 8001512:	2b03      	cmp	r3, #3
 8001514:	f200 80c6 	bhi.w	80016a4 <HAL_HCD_HC_SubmitRequest+0x210>
 8001518:	a201      	add	r2, pc, #4	; (adr r2, 8001520 <HAL_HCD_HC_SubmitRequest+0x8c>)
 800151a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800151e:	bf00      	nop
 8001520:	08001531 	.word	0x08001531
 8001524:	08001691 	.word	0x08001691
 8001528:	08001595 	.word	0x08001595
 800152c:	08001613 	.word	0x08001613
 8001530:	7c3b      	ldrb	r3, [r7, #16]
 8001532:	2b01      	cmp	r3, #1
 8001534:	f040 80b8 	bne.w	80016a8 <HAL_HCD_HC_SubmitRequest+0x214>
 8001538:	78bb      	ldrb	r3, [r7, #2]
 800153a:	2b00      	cmp	r3, #0
 800153c:	f040 80b4 	bne.w	80016a8 <HAL_HCD_HC_SubmitRequest+0x214>
 8001540:	8b3b      	ldrh	r3, [r7, #24]
 8001542:	2b00      	cmp	r3, #0
 8001544:	d108      	bne.n	8001558 <HAL_HCD_HC_SubmitRequest+0xc4>
 8001546:	78fb      	ldrb	r3, [r7, #3]
 8001548:	687a      	ldr	r2, [r7, #4]
 800154a:	212c      	movs	r1, #44	; 0x2c
 800154c:	fb01 f303 	mul.w	r3, r1, r3
 8001550:	4413      	add	r3, r2
 8001552:	3355      	adds	r3, #85	; 0x55
 8001554:	2201      	movs	r2, #1
 8001556:	701a      	strb	r2, [r3, #0]
 8001558:	78fb      	ldrb	r3, [r7, #3]
 800155a:	687a      	ldr	r2, [r7, #4]
 800155c:	212c      	movs	r1, #44	; 0x2c
 800155e:	fb01 f303 	mul.w	r3, r1, r3
 8001562:	4413      	add	r3, r2
 8001564:	3355      	adds	r3, #85	; 0x55
 8001566:	781b      	ldrb	r3, [r3, #0]
 8001568:	2b00      	cmp	r3, #0
 800156a:	d109      	bne.n	8001580 <HAL_HCD_HC_SubmitRequest+0xec>
 800156c:	78fb      	ldrb	r3, [r7, #3]
 800156e:	687a      	ldr	r2, [r7, #4]
 8001570:	212c      	movs	r1, #44	; 0x2c
 8001572:	fb01 f303 	mul.w	r3, r1, r3
 8001576:	4413      	add	r3, r2
 8001578:	3342      	adds	r3, #66	; 0x42
 800157a:	2200      	movs	r2, #0
 800157c:	701a      	strb	r2, [r3, #0]
 800157e:	e093      	b.n	80016a8 <HAL_HCD_HC_SubmitRequest+0x214>
 8001580:	78fb      	ldrb	r3, [r7, #3]
 8001582:	687a      	ldr	r2, [r7, #4]
 8001584:	212c      	movs	r1, #44	; 0x2c
 8001586:	fb01 f303 	mul.w	r3, r1, r3
 800158a:	4413      	add	r3, r2
 800158c:	3342      	adds	r3, #66	; 0x42
 800158e:	2202      	movs	r2, #2
 8001590:	701a      	strb	r2, [r3, #0]
 8001592:	e089      	b.n	80016a8 <HAL_HCD_HC_SubmitRequest+0x214>
 8001594:	78bb      	ldrb	r3, [r7, #2]
 8001596:	2b00      	cmp	r3, #0
 8001598:	d11d      	bne.n	80015d6 <HAL_HCD_HC_SubmitRequest+0x142>
 800159a:	78fb      	ldrb	r3, [r7, #3]
 800159c:	687a      	ldr	r2, [r7, #4]
 800159e:	212c      	movs	r1, #44	; 0x2c
 80015a0:	fb01 f303 	mul.w	r3, r1, r3
 80015a4:	4413      	add	r3, r2
 80015a6:	3355      	adds	r3, #85	; 0x55
 80015a8:	781b      	ldrb	r3, [r3, #0]
 80015aa:	2b00      	cmp	r3, #0
 80015ac:	d109      	bne.n	80015c2 <HAL_HCD_HC_SubmitRequest+0x12e>
 80015ae:	78fb      	ldrb	r3, [r7, #3]
 80015b0:	687a      	ldr	r2, [r7, #4]
 80015b2:	212c      	movs	r1, #44	; 0x2c
 80015b4:	fb01 f303 	mul.w	r3, r1, r3
 80015b8:	4413      	add	r3, r2
 80015ba:	3342      	adds	r3, #66	; 0x42
 80015bc:	2200      	movs	r2, #0
 80015be:	701a      	strb	r2, [r3, #0]
 80015c0:	e073      	b.n	80016aa <HAL_HCD_HC_SubmitRequest+0x216>
 80015c2:	78fb      	ldrb	r3, [r7, #3]
 80015c4:	687a      	ldr	r2, [r7, #4]
 80015c6:	212c      	movs	r1, #44	; 0x2c
 80015c8:	fb01 f303 	mul.w	r3, r1, r3
 80015cc:	4413      	add	r3, r2
 80015ce:	3342      	adds	r3, #66	; 0x42
 80015d0:	2202      	movs	r2, #2
 80015d2:	701a      	strb	r2, [r3, #0]
 80015d4:	e069      	b.n	80016aa <HAL_HCD_HC_SubmitRequest+0x216>
 80015d6:	78fb      	ldrb	r3, [r7, #3]
 80015d8:	687a      	ldr	r2, [r7, #4]
 80015da:	212c      	movs	r1, #44	; 0x2c
 80015dc:	fb01 f303 	mul.w	r3, r1, r3
 80015e0:	4413      	add	r3, r2
 80015e2:	3354      	adds	r3, #84	; 0x54
 80015e4:	781b      	ldrb	r3, [r3, #0]
 80015e6:	2b00      	cmp	r3, #0
 80015e8:	d109      	bne.n	80015fe <HAL_HCD_HC_SubmitRequest+0x16a>
 80015ea:	78fb      	ldrb	r3, [r7, #3]
 80015ec:	687a      	ldr	r2, [r7, #4]
 80015ee:	212c      	movs	r1, #44	; 0x2c
 80015f0:	fb01 f303 	mul.w	r3, r1, r3
 80015f4:	4413      	add	r3, r2
 80015f6:	3342      	adds	r3, #66	; 0x42
 80015f8:	2200      	movs	r2, #0
 80015fa:	701a      	strb	r2, [r3, #0]
 80015fc:	e055      	b.n	80016aa <HAL_HCD_HC_SubmitRequest+0x216>
 80015fe:	78fb      	ldrb	r3, [r7, #3]
 8001600:	687a      	ldr	r2, [r7, #4]
 8001602:	212c      	movs	r1, #44	; 0x2c
 8001604:	fb01 f303 	mul.w	r3, r1, r3
 8001608:	4413      	add	r3, r2
 800160a:	3342      	adds	r3, #66	; 0x42
 800160c:	2202      	movs	r2, #2
 800160e:	701a      	strb	r2, [r3, #0]
 8001610:	e04b      	b.n	80016aa <HAL_HCD_HC_SubmitRequest+0x216>
 8001612:	78bb      	ldrb	r3, [r7, #2]
 8001614:	2b00      	cmp	r3, #0
 8001616:	d11d      	bne.n	8001654 <HAL_HCD_HC_SubmitRequest+0x1c0>
 8001618:	78fb      	ldrb	r3, [r7, #3]
 800161a:	687a      	ldr	r2, [r7, #4]
 800161c:	212c      	movs	r1, #44	; 0x2c
 800161e:	fb01 f303 	mul.w	r3, r1, r3
 8001622:	4413      	add	r3, r2
 8001624:	3355      	adds	r3, #85	; 0x55
 8001626:	781b      	ldrb	r3, [r3, #0]
 8001628:	2b00      	cmp	r3, #0
 800162a:	d109      	bne.n	8001640 <HAL_HCD_HC_SubmitRequest+0x1ac>
 800162c:	78fb      	ldrb	r3, [r7, #3]
 800162e:	687a      	ldr	r2, [r7, #4]
 8001630:	212c      	movs	r1, #44	; 0x2c
 8001632:	fb01 f303 	mul.w	r3, r1, r3
 8001636:	4413      	add	r3, r2
 8001638:	3342      	adds	r3, #66	; 0x42
 800163a:	2200      	movs	r2, #0
 800163c:	701a      	strb	r2, [r3, #0]
 800163e:	e034      	b.n	80016aa <HAL_HCD_HC_SubmitRequest+0x216>
 8001640:	78fb      	ldrb	r3, [r7, #3]
 8001642:	687a      	ldr	r2, [r7, #4]
 8001644:	212c      	movs	r1, #44	; 0x2c
 8001646:	fb01 f303 	mul.w	r3, r1, r3
 800164a:	4413      	add	r3, r2
 800164c:	3342      	adds	r3, #66	; 0x42
 800164e:	2202      	movs	r2, #2
 8001650:	701a      	strb	r2, [r3, #0]
 8001652:	e02a      	b.n	80016aa <HAL_HCD_HC_SubmitRequest+0x216>
 8001654:	78fb      	ldrb	r3, [r7, #3]
 8001656:	687a      	ldr	r2, [r7, #4]
 8001658:	212c      	movs	r1, #44	; 0x2c
 800165a:	fb01 f303 	mul.w	r3, r1, r3
 800165e:	4413      	add	r3, r2
 8001660:	3354      	adds	r3, #84	; 0x54
 8001662:	781b      	ldrb	r3, [r3, #0]
 8001664:	2b00      	cmp	r3, #0
 8001666:	d109      	bne.n	800167c <HAL_HCD_HC_SubmitRequest+0x1e8>
 8001668:	78fb      	ldrb	r3, [r7, #3]
 800166a:	687a      	ldr	r2, [r7, #4]
 800166c:	212c      	movs	r1, #44	; 0x2c
 800166e:	fb01 f303 	mul.w	r3, r1, r3
 8001672:	4413      	add	r3, r2
 8001674:	3342      	adds	r3, #66	; 0x42
 8001676:	2200      	movs	r2, #0
 8001678:	701a      	strb	r2, [r3, #0]
 800167a:	e016      	b.n	80016aa <HAL_HCD_HC_SubmitRequest+0x216>
 800167c:	78fb      	ldrb	r3, [r7, #3]
 800167e:	687a      	ldr	r2, [r7, #4]
 8001680:	212c      	movs	r1, #44	; 0x2c
 8001682:	fb01 f303 	mul.w	r3, r1, r3
 8001686:	4413      	add	r3, r2
 8001688:	3342      	adds	r3, #66	; 0x42
 800168a:	2202      	movs	r2, #2
 800168c:	701a      	strb	r2, [r3, #0]
 800168e:	e00c      	b.n	80016aa <HAL_HCD_HC_SubmitRequest+0x216>
 8001690:	78fb      	ldrb	r3, [r7, #3]
 8001692:	687a      	ldr	r2, [r7, #4]
 8001694:	212c      	movs	r1, #44	; 0x2c
 8001696:	fb01 f303 	mul.w	r3, r1, r3
 800169a:	4413      	add	r3, r2
 800169c:	3342      	adds	r3, #66	; 0x42
 800169e:	2200      	movs	r2, #0
 80016a0:	701a      	strb	r2, [r3, #0]
 80016a2:	e002      	b.n	80016aa <HAL_HCD_HC_SubmitRequest+0x216>
 80016a4:	bf00      	nop
 80016a6:	e000      	b.n	80016aa <HAL_HCD_HC_SubmitRequest+0x216>
 80016a8:	bf00      	nop
 80016aa:	78fb      	ldrb	r3, [r7, #3]
 80016ac:	687a      	ldr	r2, [r7, #4]
 80016ae:	212c      	movs	r1, #44	; 0x2c
 80016b0:	fb01 f303 	mul.w	r3, r1, r3
 80016b4:	4413      	add	r3, r2
 80016b6:	3344      	adds	r3, #68	; 0x44
 80016b8:	697a      	ldr	r2, [r7, #20]
 80016ba:	601a      	str	r2, [r3, #0]
 80016bc:	78fb      	ldrb	r3, [r7, #3]
 80016be:	8b3a      	ldrh	r2, [r7, #24]
 80016c0:	6879      	ldr	r1, [r7, #4]
 80016c2:	202c      	movs	r0, #44	; 0x2c
 80016c4:	fb00 f303 	mul.w	r3, r0, r3
 80016c8:	440b      	add	r3, r1
 80016ca:	334c      	adds	r3, #76	; 0x4c
 80016cc:	601a      	str	r2, [r3, #0]
 80016ce:	78fb      	ldrb	r3, [r7, #3]
 80016d0:	687a      	ldr	r2, [r7, #4]
 80016d2:	212c      	movs	r1, #44	; 0x2c
 80016d4:	fb01 f303 	mul.w	r3, r1, r3
 80016d8:	4413      	add	r3, r2
 80016da:	3360      	adds	r3, #96	; 0x60
 80016dc:	2200      	movs	r2, #0
 80016de:	701a      	strb	r2, [r3, #0]
 80016e0:	78fb      	ldrb	r3, [r7, #3]
 80016e2:	687a      	ldr	r2, [r7, #4]
 80016e4:	212c      	movs	r1, #44	; 0x2c
 80016e6:	fb01 f303 	mul.w	r3, r1, r3
 80016ea:	4413      	add	r3, r2
 80016ec:	3350      	adds	r3, #80	; 0x50
 80016ee:	2200      	movs	r2, #0
 80016f0:	601a      	str	r2, [r3, #0]
 80016f2:	78fb      	ldrb	r3, [r7, #3]
 80016f4:	687a      	ldr	r2, [r7, #4]
 80016f6:	212c      	movs	r1, #44	; 0x2c
 80016f8:	fb01 f303 	mul.w	r3, r1, r3
 80016fc:	4413      	add	r3, r2
 80016fe:	3339      	adds	r3, #57	; 0x39
 8001700:	78fa      	ldrb	r2, [r7, #3]
 8001702:	701a      	strb	r2, [r3, #0]
 8001704:	78fb      	ldrb	r3, [r7, #3]
 8001706:	687a      	ldr	r2, [r7, #4]
 8001708:	212c      	movs	r1, #44	; 0x2c
 800170a:	fb01 f303 	mul.w	r3, r1, r3
 800170e:	4413      	add	r3, r2
 8001710:	3361      	adds	r3, #97	; 0x61
 8001712:	2200      	movs	r2, #0
 8001714:	701a      	strb	r2, [r3, #0]
 8001716:	687b      	ldr	r3, [r7, #4]
 8001718:	6818      	ldr	r0, [r3, #0]
 800171a:	78fb      	ldrb	r3, [r7, #3]
 800171c:	222c      	movs	r2, #44	; 0x2c
 800171e:	fb02 f303 	mul.w	r3, r2, r3
 8001722:	3338      	adds	r3, #56	; 0x38
 8001724:	687a      	ldr	r2, [r7, #4]
 8001726:	18d1      	adds	r1, r2, r3
 8001728:	687b      	ldr	r3, [r7, #4]
 800172a:	691b      	ldr	r3, [r3, #16]
 800172c:	b2db      	uxtb	r3, r3
 800172e:	461a      	mov	r2, r3
 8001730:	f002 fef0 	bl	8004514 <USB_HC_StartXfer>
 8001734:	4603      	mov	r3, r0
 8001736:	4618      	mov	r0, r3
 8001738:	3708      	adds	r7, #8
 800173a:	46bd      	mov	sp, r7
 800173c:	bd80      	pop	{r7, pc}
 800173e:	bf00      	nop

08001740 <HAL_HCD_IRQHandler>:
 8001740:	b580      	push	{r7, lr}
 8001742:	b086      	sub	sp, #24
 8001744:	af00      	add	r7, sp, #0
 8001746:	6078      	str	r0, [r7, #4]
 8001748:	687b      	ldr	r3, [r7, #4]
 800174a:	681b      	ldr	r3, [r3, #0]
 800174c:	613b      	str	r3, [r7, #16]
 800174e:	693b      	ldr	r3, [r7, #16]
 8001750:	60fb      	str	r3, [r7, #12]
 8001752:	687b      	ldr	r3, [r7, #4]
 8001754:	681b      	ldr	r3, [r3, #0]
 8001756:	4618      	mov	r0, r3
 8001758:	f002 fc13 	bl	8003f82 <USB_GetMode>
 800175c:	4603      	mov	r3, r0
 800175e:	2b01      	cmp	r3, #1
 8001760:	f040 80f6 	bne.w	8001950 <HAL_HCD_IRQHandler+0x210>
 8001764:	687b      	ldr	r3, [r7, #4]
 8001766:	681b      	ldr	r3, [r3, #0]
 8001768:	4618      	mov	r0, r3
 800176a:	f002 fbf7 	bl	8003f5c <USB_ReadInterrupts>
 800176e:	4603      	mov	r3, r0
 8001770:	2b00      	cmp	r3, #0
 8001772:	f000 80ec 	beq.w	800194e <HAL_HCD_IRQHandler+0x20e>
 8001776:	687b      	ldr	r3, [r7, #4]
 8001778:	681b      	ldr	r3, [r3, #0]
 800177a:	4618      	mov	r0, r3
 800177c:	f002 fbee 	bl	8003f5c <USB_ReadInterrupts>
 8001780:	4603      	mov	r3, r0
 8001782:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001786:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 800178a:	d104      	bne.n	8001796 <HAL_HCD_IRQHandler+0x56>
 800178c:	687b      	ldr	r3, [r7, #4]
 800178e:	681b      	ldr	r3, [r3, #0]
 8001790:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
 8001794:	615a      	str	r2, [r3, #20]
 8001796:	687b      	ldr	r3, [r7, #4]
 8001798:	681b      	ldr	r3, [r3, #0]
 800179a:	4618      	mov	r0, r3
 800179c:	f002 fbde 	bl	8003f5c <USB_ReadInterrupts>
 80017a0:	4603      	mov	r3, r0
 80017a2:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80017a6:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 80017aa:	d104      	bne.n	80017b6 <HAL_HCD_IRQHandler+0x76>
 80017ac:	687b      	ldr	r3, [r7, #4]
 80017ae:	681b      	ldr	r3, [r3, #0]
 80017b0:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
 80017b4:	615a      	str	r2, [r3, #20]
 80017b6:	687b      	ldr	r3, [r7, #4]
 80017b8:	681b      	ldr	r3, [r3, #0]
 80017ba:	4618      	mov	r0, r3
 80017bc:	f002 fbce 	bl	8003f5c <USB_ReadInterrupts>
 80017c0:	4603      	mov	r3, r0
 80017c2:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 80017c6:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 80017ca:	d104      	bne.n	80017d6 <HAL_HCD_IRQHandler+0x96>
 80017cc:	687b      	ldr	r3, [r7, #4]
 80017ce:	681b      	ldr	r3, [r3, #0]
 80017d0:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80017d4:	615a      	str	r2, [r3, #20]
 80017d6:	687b      	ldr	r3, [r7, #4]
 80017d8:	681b      	ldr	r3, [r3, #0]
 80017da:	4618      	mov	r0, r3
 80017dc:	f002 fbbe 	bl	8003f5c <USB_ReadInterrupts>
 80017e0:	4603      	mov	r3, r0
 80017e2:	f003 0302 	and.w	r3, r3, #2
 80017e6:	2b02      	cmp	r3, #2
 80017e8:	d103      	bne.n	80017f2 <HAL_HCD_IRQHandler+0xb2>
 80017ea:	687b      	ldr	r3, [r7, #4]
 80017ec:	681b      	ldr	r3, [r3, #0]
 80017ee:	2202      	movs	r2, #2
 80017f0:	615a      	str	r2, [r3, #20]
 80017f2:	687b      	ldr	r3, [r7, #4]
 80017f4:	681b      	ldr	r3, [r3, #0]
 80017f6:	4618      	mov	r0, r3
 80017f8:	f002 fbb0 	bl	8003f5c <USB_ReadInterrupts>
 80017fc:	4603      	mov	r3, r0
 80017fe:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8001802:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8001806:	d11c      	bne.n	8001842 <HAL_HCD_IRQHandler+0x102>
 8001808:	687b      	ldr	r3, [r7, #4]
 800180a:	681b      	ldr	r3, [r3, #0]
 800180c:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
 8001810:	615a      	str	r2, [r3, #20]
 8001812:	68fb      	ldr	r3, [r7, #12]
 8001814:	f503 6388 	add.w	r3, r3, #1088	; 0x440
 8001818:	681b      	ldr	r3, [r3, #0]
 800181a:	f003 0301 	and.w	r3, r3, #1
 800181e:	2b00      	cmp	r3, #0
 8001820:	d10f      	bne.n	8001842 <HAL_HCD_IRQHandler+0x102>
 8001822:	2110      	movs	r1, #16
 8001824:	6938      	ldr	r0, [r7, #16]
 8001826:	f002 fabf 	bl	8003da8 <USB_FlushTxFifo>
 800182a:	6938      	ldr	r0, [r7, #16]
 800182c:	f002 fae0 	bl	8003df0 <USB_FlushRxFifo>
 8001830:	687b      	ldr	r3, [r7, #4]
 8001832:	681b      	ldr	r3, [r3, #0]
 8001834:	2101      	movs	r1, #1
 8001836:	4618      	mov	r0, r3
 8001838:	f002 fc98 	bl	800416c <USB_InitFSLSPClkSel>
 800183c:	6878      	ldr	r0, [r7, #4]
 800183e:	f005 fe09 	bl	8007454 <HAL_HCD_Disconnect_Callback>
 8001842:	687b      	ldr	r3, [r7, #4]
 8001844:	681b      	ldr	r3, [r3, #0]
 8001846:	4618      	mov	r0, r3
 8001848:	f002 fb88 	bl	8003f5c <USB_ReadInterrupts>
 800184c:	4603      	mov	r3, r0
 800184e:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8001852:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8001856:	d102      	bne.n	800185e <HAL_HCD_IRQHandler+0x11e>
 8001858:	6878      	ldr	r0, [r7, #4]
 800185a:	f001 fa03 	bl	8002c64 <HCD_Port_IRQHandler>
 800185e:	687b      	ldr	r3, [r7, #4]
 8001860:	681b      	ldr	r3, [r3, #0]
 8001862:	4618      	mov	r0, r3
 8001864:	f002 fb7a 	bl	8003f5c <USB_ReadInterrupts>
 8001868:	4603      	mov	r3, r0
 800186a:	f003 0308 	and.w	r3, r3, #8
 800186e:	2b08      	cmp	r3, #8
 8001870:	d106      	bne.n	8001880 <HAL_HCD_IRQHandler+0x140>
 8001872:	6878      	ldr	r0, [r7, #4]
 8001874:	f005 fdd2 	bl	800741c <HAL_HCD_SOF_Callback>
 8001878:	687b      	ldr	r3, [r7, #4]
 800187a:	681b      	ldr	r3, [r3, #0]
 800187c:	2208      	movs	r2, #8
 800187e:	615a      	str	r2, [r3, #20]
 8001880:	687b      	ldr	r3, [r7, #4]
 8001882:	681b      	ldr	r3, [r3, #0]
 8001884:	4618      	mov	r0, r3
 8001886:	f002 fb69 	bl	8003f5c <USB_ReadInterrupts>
 800188a:	4603      	mov	r3, r0
 800188c:	f003 0310 	and.w	r3, r3, #16
 8001890:	2b10      	cmp	r3, #16
 8001892:	d101      	bne.n	8001898 <HAL_HCD_IRQHandler+0x158>
 8001894:	2301      	movs	r3, #1
 8001896:	e000      	b.n	800189a <HAL_HCD_IRQHandler+0x15a>
 8001898:	2300      	movs	r3, #0
 800189a:	2b00      	cmp	r3, #0
 800189c:	d012      	beq.n	80018c4 <HAL_HCD_IRQHandler+0x184>
 800189e:	687b      	ldr	r3, [r7, #4]
 80018a0:	681b      	ldr	r3, [r3, #0]
 80018a2:	699a      	ldr	r2, [r3, #24]
 80018a4:	687b      	ldr	r3, [r7, #4]
 80018a6:	681b      	ldr	r3, [r3, #0]
 80018a8:	f022 0210 	bic.w	r2, r2, #16
 80018ac:	619a      	str	r2, [r3, #24]
 80018ae:	6878      	ldr	r0, [r7, #4]
 80018b0:	f001 f906 	bl	8002ac0 <HCD_RXQLVL_IRQHandler>
 80018b4:	687b      	ldr	r3, [r7, #4]
 80018b6:	681b      	ldr	r3, [r3, #0]
 80018b8:	699a      	ldr	r2, [r3, #24]
 80018ba:	687b      	ldr	r3, [r7, #4]
 80018bc:	681b      	ldr	r3, [r3, #0]
 80018be:	f042 0210 	orr.w	r2, r2, #16
 80018c2:	619a      	str	r2, [r3, #24]
 80018c4:	687b      	ldr	r3, [r7, #4]
 80018c6:	681b      	ldr	r3, [r3, #0]
 80018c8:	4618      	mov	r0, r3
 80018ca:	f002 fb47 	bl	8003f5c <USB_ReadInterrupts>
 80018ce:	4603      	mov	r3, r0
 80018d0:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80018d4:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 80018d8:	d13a      	bne.n	8001950 <HAL_HCD_IRQHandler+0x210>
 80018da:	687b      	ldr	r3, [r7, #4]
 80018dc:	681b      	ldr	r3, [r3, #0]
 80018de:	4618      	mov	r0, r3
 80018e0:	f002 ff5a 	bl	8004798 <USB_HC_ReadInterrupt>
 80018e4:	60b8      	str	r0, [r7, #8]
 80018e6:	2300      	movs	r3, #0
 80018e8:	617b      	str	r3, [r7, #20]
 80018ea:	e025      	b.n	8001938 <HAL_HCD_IRQHandler+0x1f8>
 80018ec:	697b      	ldr	r3, [r7, #20]
 80018ee:	f003 030f 	and.w	r3, r3, #15
 80018f2:	68ba      	ldr	r2, [r7, #8]
 80018f4:	fa22 f303 	lsr.w	r3, r2, r3
 80018f8:	f003 0301 	and.w	r3, r3, #1
 80018fc:	2b00      	cmp	r3, #0
 80018fe:	d018      	beq.n	8001932 <HAL_HCD_IRQHandler+0x1f2>
 8001900:	697b      	ldr	r3, [r7, #20]
 8001902:	015a      	lsls	r2, r3, #5
 8001904:	68fb      	ldr	r3, [r7, #12]
 8001906:	4413      	add	r3, r2
 8001908:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 800190c:	681b      	ldr	r3, [r3, #0]
 800190e:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8001912:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8001916:	d106      	bne.n	8001926 <HAL_HCD_IRQHandler+0x1e6>
 8001918:	697b      	ldr	r3, [r7, #20]
 800191a:	b2db      	uxtb	r3, r3
 800191c:	4619      	mov	r1, r3
 800191e:	6878      	ldr	r0, [r7, #4]
 8001920:	f000 f8ab 	bl	8001a7a <HCD_HC_IN_IRQHandler>
 8001924:	e005      	b.n	8001932 <HAL_HCD_IRQHandler+0x1f2>
 8001926:	697b      	ldr	r3, [r7, #20]
 8001928:	b2db      	uxtb	r3, r3
 800192a:	4619      	mov	r1, r3
 800192c:	6878      	ldr	r0, [r7, #4]
 800192e:	f000 fcc6 	bl	80022be <HCD_HC_OUT_IRQHandler>
 8001932:	697b      	ldr	r3, [r7, #20]
 8001934:	3301      	adds	r3, #1
 8001936:	617b      	str	r3, [r7, #20]
 8001938:	687b      	ldr	r3, [r7, #4]
 800193a:	689b      	ldr	r3, [r3, #8]
 800193c:	697a      	ldr	r2, [r7, #20]
 800193e:	429a      	cmp	r2, r3
 8001940:	d3d4      	bcc.n	80018ec <HAL_HCD_IRQHandler+0x1ac>
 8001942:	687b      	ldr	r3, [r7, #4]
 8001944:	681b      	ldr	r3, [r3, #0]
 8001946:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 800194a:	615a      	str	r2, [r3, #20]
 800194c:	e000      	b.n	8001950 <HAL_HCD_IRQHandler+0x210>
 800194e:	bf00      	nop
 8001950:	3718      	adds	r7, #24
 8001952:	46bd      	mov	sp, r7
 8001954:	bd80      	pop	{r7, pc}

08001956 <HAL_HCD_Start>:
 8001956:	b580      	push	{r7, lr}
 8001958:	b082      	sub	sp, #8
 800195a:	af00      	add	r7, sp, #0
 800195c:	6078      	str	r0, [r7, #4]
 800195e:	687b      	ldr	r3, [r7, #4]
 8001960:	f893 32f8 	ldrb.w	r3, [r3, #760]	; 0x2f8
 8001964:	2b01      	cmp	r3, #1
 8001966:	d101      	bne.n	800196c <HAL_HCD_Start+0x16>
 8001968:	2302      	movs	r3, #2
 800196a:	e013      	b.n	8001994 <HAL_HCD_Start+0x3e>
 800196c:	687b      	ldr	r3, [r7, #4]
 800196e:	2201      	movs	r2, #1
 8001970:	f883 22f8 	strb.w	r2, [r3, #760]	; 0x2f8
 8001974:	687b      	ldr	r3, [r7, #4]
 8001976:	681b      	ldr	r3, [r3, #0]
 8001978:	2101      	movs	r1, #1
 800197a:	4618      	mov	r0, r3
 800197c:	f002 fc5a 	bl	8004234 <USB_DriveVbus>
 8001980:	687b      	ldr	r3, [r7, #4]
 8001982:	681b      	ldr	r3, [r3, #0]
 8001984:	4618      	mov	r0, r3
 8001986:	f002 f9a0 	bl	8003cca <USB_EnableGlobalInt>
 800198a:	687b      	ldr	r3, [r7, #4]
 800198c:	2200      	movs	r2, #0
 800198e:	f883 22f8 	strb.w	r2, [r3, #760]	; 0x2f8
 8001992:	2300      	movs	r3, #0
 8001994:	4618      	mov	r0, r3
 8001996:	3708      	adds	r7, #8
 8001998:	46bd      	mov	sp, r7
 800199a:	bd80      	pop	{r7, pc}

0800199c <HAL_HCD_Stop>:
 800199c:	b580      	push	{r7, lr}
 800199e:	b082      	sub	sp, #8
 80019a0:	af00      	add	r7, sp, #0
 80019a2:	6078      	str	r0, [r7, #4]
 80019a4:	687b      	ldr	r3, [r7, #4]
 80019a6:	f893 32f8 	ldrb.w	r3, [r3, #760]	; 0x2f8
 80019aa:	2b01      	cmp	r3, #1
 80019ac:	d101      	bne.n	80019b2 <HAL_HCD_Stop+0x16>
 80019ae:	2302      	movs	r3, #2
 80019b0:	e00d      	b.n	80019ce <HAL_HCD_Stop+0x32>
 80019b2:	687b      	ldr	r3, [r7, #4]
 80019b4:	2201      	movs	r2, #1
 80019b6:	f883 22f8 	strb.w	r2, [r3, #760]	; 0x2f8
 80019ba:	687b      	ldr	r3, [r7, #4]
 80019bc:	681b      	ldr	r3, [r3, #0]
 80019be:	4618      	mov	r0, r3
 80019c0:	f003 f854 	bl	8004a6c <USB_StopHost>
 80019c4:	687b      	ldr	r3, [r7, #4]
 80019c6:	2200      	movs	r2, #0
 80019c8:	f883 22f8 	strb.w	r2, [r3, #760]	; 0x2f8
 80019cc:	2300      	movs	r3, #0
 80019ce:	4618      	mov	r0, r3
 80019d0:	3708      	adds	r7, #8
 80019d2:	46bd      	mov	sp, r7
 80019d4:	bd80      	pop	{r7, pc}

080019d6 <HAL_HCD_ResetPort>:
 80019d6:	b580      	push	{r7, lr}
 80019d8:	b082      	sub	sp, #8
 80019da:	af00      	add	r7, sp, #0
 80019dc:	6078      	str	r0, [r7, #4]
 80019de:	687b      	ldr	r3, [r7, #4]
 80019e0:	681b      	ldr	r3, [r3, #0]
 80019e2:	4618      	mov	r0, r3
 80019e4:	f002 fbfc 	bl	80041e0 <USB_ResetPort>
 80019e8:	4603      	mov	r3, r0
 80019ea:	4618      	mov	r0, r3
 80019ec:	3708      	adds	r7, #8
 80019ee:	46bd      	mov	sp, r7
 80019f0:	bd80      	pop	{r7, pc}

080019f2 <HAL_HCD_HC_GetURBState>:
 80019f2:	b480      	push	{r7}
 80019f4:	b083      	sub	sp, #12
 80019f6:	af00      	add	r7, sp, #0
 80019f8:	6078      	str	r0, [r7, #4]
 80019fa:	460b      	mov	r3, r1
 80019fc:	70fb      	strb	r3, [r7, #3]
 80019fe:	78fb      	ldrb	r3, [r7, #3]
 8001a00:	687a      	ldr	r2, [r7, #4]
 8001a02:	212c      	movs	r1, #44	; 0x2c
 8001a04:	fb01 f303 	mul.w	r3, r1, r3
 8001a08:	4413      	add	r3, r2
 8001a0a:	3360      	adds	r3, #96	; 0x60
 8001a0c:	781b      	ldrb	r3, [r3, #0]
 8001a0e:	4618      	mov	r0, r3
 8001a10:	370c      	adds	r7, #12
 8001a12:	46bd      	mov	sp, r7
 8001a14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a18:	4770      	bx	lr

08001a1a <HAL_HCD_HC_GetXferCount>:
 8001a1a:	b480      	push	{r7}
 8001a1c:	b083      	sub	sp, #12
 8001a1e:	af00      	add	r7, sp, #0
 8001a20:	6078      	str	r0, [r7, #4]
 8001a22:	460b      	mov	r3, r1
 8001a24:	70fb      	strb	r3, [r7, #3]
 8001a26:	78fb      	ldrb	r3, [r7, #3]
 8001a28:	687a      	ldr	r2, [r7, #4]
 8001a2a:	212c      	movs	r1, #44	; 0x2c
 8001a2c:	fb01 f303 	mul.w	r3, r1, r3
 8001a30:	4413      	add	r3, r2
 8001a32:	3350      	adds	r3, #80	; 0x50
 8001a34:	681b      	ldr	r3, [r3, #0]
 8001a36:	4618      	mov	r0, r3
 8001a38:	370c      	adds	r7, #12
 8001a3a:	46bd      	mov	sp, r7
 8001a3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a40:	4770      	bx	lr

08001a42 <HAL_HCD_GetCurrentFrame>:
 8001a42:	b580      	push	{r7, lr}
 8001a44:	b082      	sub	sp, #8
 8001a46:	af00      	add	r7, sp, #0
 8001a48:	6078      	str	r0, [r7, #4]
 8001a4a:	687b      	ldr	r3, [r7, #4]
 8001a4c:	681b      	ldr	r3, [r3, #0]
 8001a4e:	4618      	mov	r0, r3
 8001a50:	f002 fc40 	bl	80042d4 <USB_GetCurrentFrame>
 8001a54:	4603      	mov	r3, r0
 8001a56:	4618      	mov	r0, r3
 8001a58:	3708      	adds	r7, #8
 8001a5a:	46bd      	mov	sp, r7
 8001a5c:	bd80      	pop	{r7, pc}

08001a5e <HAL_HCD_GetCurrentSpeed>:
 8001a5e:	b580      	push	{r7, lr}
 8001a60:	b082      	sub	sp, #8
 8001a62:	af00      	add	r7, sp, #0
 8001a64:	6078      	str	r0, [r7, #4]
 8001a66:	687b      	ldr	r3, [r7, #4]
 8001a68:	681b      	ldr	r3, [r3, #0]
 8001a6a:	4618      	mov	r0, r3
 8001a6c:	f002 fc1b 	bl	80042a6 <USB_GetHostSpeed>
 8001a70:	4603      	mov	r3, r0
 8001a72:	4618      	mov	r0, r3
 8001a74:	3708      	adds	r7, #8
 8001a76:	46bd      	mov	sp, r7
 8001a78:	bd80      	pop	{r7, pc}

08001a7a <HCD_HC_IN_IRQHandler>:
 8001a7a:	b580      	push	{r7, lr}
 8001a7c:	b086      	sub	sp, #24
 8001a7e:	af00      	add	r7, sp, #0
 8001a80:	6078      	str	r0, [r7, #4]
 8001a82:	460b      	mov	r3, r1
 8001a84:	70fb      	strb	r3, [r7, #3]
 8001a86:	687b      	ldr	r3, [r7, #4]
 8001a88:	681b      	ldr	r3, [r3, #0]
 8001a8a:	617b      	str	r3, [r7, #20]
 8001a8c:	697b      	ldr	r3, [r7, #20]
 8001a8e:	613b      	str	r3, [r7, #16]
 8001a90:	78fb      	ldrb	r3, [r7, #3]
 8001a92:	60fb      	str	r3, [r7, #12]
 8001a94:	68fb      	ldr	r3, [r7, #12]
 8001a96:	015a      	lsls	r2, r3, #5
 8001a98:	693b      	ldr	r3, [r7, #16]
 8001a9a:	4413      	add	r3, r2
 8001a9c:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8001aa0:	689b      	ldr	r3, [r3, #8]
 8001aa2:	f003 0304 	and.w	r3, r3, #4
 8001aa6:	2b04      	cmp	r3, #4
 8001aa8:	d119      	bne.n	8001ade <HCD_HC_IN_IRQHandler+0x64>
 8001aaa:	68fb      	ldr	r3, [r7, #12]
 8001aac:	015a      	lsls	r2, r3, #5
 8001aae:	693b      	ldr	r3, [r7, #16]
 8001ab0:	4413      	add	r3, r2
 8001ab2:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8001ab6:	461a      	mov	r2, r3
 8001ab8:	2304      	movs	r3, #4
 8001aba:	6093      	str	r3, [r2, #8]
 8001abc:	68fb      	ldr	r3, [r7, #12]
 8001abe:	015a      	lsls	r2, r3, #5
 8001ac0:	693b      	ldr	r3, [r7, #16]
 8001ac2:	4413      	add	r3, r2
 8001ac4:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8001ac8:	68db      	ldr	r3, [r3, #12]
 8001aca:	68fa      	ldr	r2, [r7, #12]
 8001acc:	0151      	lsls	r1, r2, #5
 8001ace:	693a      	ldr	r2, [r7, #16]
 8001ad0:	440a      	add	r2, r1
 8001ad2:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
 8001ad6:	f043 0302 	orr.w	r3, r3, #2
 8001ada:	60d3      	str	r3, [r2, #12]
 8001adc:	e101      	b.n	8001ce2 <HCD_HC_IN_IRQHandler+0x268>
 8001ade:	68fb      	ldr	r3, [r7, #12]
 8001ae0:	015a      	lsls	r2, r3, #5
 8001ae2:	693b      	ldr	r3, [r7, #16]
 8001ae4:	4413      	add	r3, r2
 8001ae6:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8001aea:	689b      	ldr	r3, [r3, #8]
 8001aec:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001af0:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8001af4:	d12b      	bne.n	8001b4e <HCD_HC_IN_IRQHandler+0xd4>
 8001af6:	68fb      	ldr	r3, [r7, #12]
 8001af8:	015a      	lsls	r2, r3, #5
 8001afa:	693b      	ldr	r3, [r7, #16]
 8001afc:	4413      	add	r3, r2
 8001afe:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8001b02:	461a      	mov	r2, r3
 8001b04:	f44f 7380 	mov.w	r3, #256	; 0x100
 8001b08:	6093      	str	r3, [r2, #8]
 8001b0a:	687a      	ldr	r2, [r7, #4]
 8001b0c:	68fb      	ldr	r3, [r7, #12]
 8001b0e:	212c      	movs	r1, #44	; 0x2c
 8001b10:	fb01 f303 	mul.w	r3, r1, r3
 8001b14:	4413      	add	r3, r2
 8001b16:	3361      	adds	r3, #97	; 0x61
 8001b18:	2207      	movs	r2, #7
 8001b1a:	701a      	strb	r2, [r3, #0]
 8001b1c:	68fb      	ldr	r3, [r7, #12]
 8001b1e:	015a      	lsls	r2, r3, #5
 8001b20:	693b      	ldr	r3, [r7, #16]
 8001b22:	4413      	add	r3, r2
 8001b24:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8001b28:	68db      	ldr	r3, [r3, #12]
 8001b2a:	68fa      	ldr	r2, [r7, #12]
 8001b2c:	0151      	lsls	r1, r2, #5
 8001b2e:	693a      	ldr	r2, [r7, #16]
 8001b30:	440a      	add	r2, r1
 8001b32:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
 8001b36:	f043 0302 	orr.w	r3, r3, #2
 8001b3a:	60d3      	str	r3, [r2, #12]
 8001b3c:	687b      	ldr	r3, [r7, #4]
 8001b3e:	681b      	ldr	r3, [r3, #0]
 8001b40:	68fa      	ldr	r2, [r7, #12]
 8001b42:	b2d2      	uxtb	r2, r2
 8001b44:	4611      	mov	r1, r2
 8001b46:	4618      	mov	r0, r3
 8001b48:	f002 fe37 	bl	80047ba <USB_HC_Halt>
 8001b4c:	e0c9      	b.n	8001ce2 <HCD_HC_IN_IRQHandler+0x268>
 8001b4e:	68fb      	ldr	r3, [r7, #12]
 8001b50:	015a      	lsls	r2, r3, #5
 8001b52:	693b      	ldr	r3, [r7, #16]
 8001b54:	4413      	add	r3, r2
 8001b56:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8001b5a:	689b      	ldr	r3, [r3, #8]
 8001b5c:	f003 0320 	and.w	r3, r3, #32
 8001b60:	2b20      	cmp	r3, #32
 8001b62:	d109      	bne.n	8001b78 <HCD_HC_IN_IRQHandler+0xfe>
 8001b64:	68fb      	ldr	r3, [r7, #12]
 8001b66:	015a      	lsls	r2, r3, #5
 8001b68:	693b      	ldr	r3, [r7, #16]
 8001b6a:	4413      	add	r3, r2
 8001b6c:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8001b70:	461a      	mov	r2, r3
 8001b72:	2320      	movs	r3, #32
 8001b74:	6093      	str	r3, [r2, #8]
 8001b76:	e0b4      	b.n	8001ce2 <HCD_HC_IN_IRQHandler+0x268>
 8001b78:	68fb      	ldr	r3, [r7, #12]
 8001b7a:	015a      	lsls	r2, r3, #5
 8001b7c:	693b      	ldr	r3, [r7, #16]
 8001b7e:	4413      	add	r3, r2
 8001b80:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8001b84:	689b      	ldr	r3, [r3, #8]
 8001b86:	f003 0308 	and.w	r3, r3, #8
 8001b8a:	2b08      	cmp	r3, #8
 8001b8c:	d133      	bne.n	8001bf6 <HCD_HC_IN_IRQHandler+0x17c>
 8001b8e:	68fb      	ldr	r3, [r7, #12]
 8001b90:	015a      	lsls	r2, r3, #5
 8001b92:	693b      	ldr	r3, [r7, #16]
 8001b94:	4413      	add	r3, r2
 8001b96:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8001b9a:	68db      	ldr	r3, [r3, #12]
 8001b9c:	68fa      	ldr	r2, [r7, #12]
 8001b9e:	0151      	lsls	r1, r2, #5
 8001ba0:	693a      	ldr	r2, [r7, #16]
 8001ba2:	440a      	add	r2, r1
 8001ba4:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
 8001ba8:	f043 0302 	orr.w	r3, r3, #2
 8001bac:	60d3      	str	r3, [r2, #12]
 8001bae:	687a      	ldr	r2, [r7, #4]
 8001bb0:	68fb      	ldr	r3, [r7, #12]
 8001bb2:	212c      	movs	r1, #44	; 0x2c
 8001bb4:	fb01 f303 	mul.w	r3, r1, r3
 8001bb8:	4413      	add	r3, r2
 8001bba:	3361      	adds	r3, #97	; 0x61
 8001bbc:	2205      	movs	r2, #5
 8001bbe:	701a      	strb	r2, [r3, #0]
 8001bc0:	68fb      	ldr	r3, [r7, #12]
 8001bc2:	015a      	lsls	r2, r3, #5
 8001bc4:	693b      	ldr	r3, [r7, #16]
 8001bc6:	4413      	add	r3, r2
 8001bc8:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8001bcc:	461a      	mov	r2, r3
 8001bce:	2310      	movs	r3, #16
 8001bd0:	6093      	str	r3, [r2, #8]
 8001bd2:	68fb      	ldr	r3, [r7, #12]
 8001bd4:	015a      	lsls	r2, r3, #5
 8001bd6:	693b      	ldr	r3, [r7, #16]
 8001bd8:	4413      	add	r3, r2
 8001bda:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8001bde:	461a      	mov	r2, r3
 8001be0:	2308      	movs	r3, #8
 8001be2:	6093      	str	r3, [r2, #8]
 8001be4:	687b      	ldr	r3, [r7, #4]
 8001be6:	681b      	ldr	r3, [r3, #0]
 8001be8:	68fa      	ldr	r2, [r7, #12]
 8001bea:	b2d2      	uxtb	r2, r2
 8001bec:	4611      	mov	r1, r2
 8001bee:	4618      	mov	r0, r3
 8001bf0:	f002 fde3 	bl	80047ba <USB_HC_Halt>
 8001bf4:	e075      	b.n	8001ce2 <HCD_HC_IN_IRQHandler+0x268>
 8001bf6:	68fb      	ldr	r3, [r7, #12]
 8001bf8:	015a      	lsls	r2, r3, #5
 8001bfa:	693b      	ldr	r3, [r7, #16]
 8001bfc:	4413      	add	r3, r2
 8001bfe:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8001c02:	689b      	ldr	r3, [r3, #8]
 8001c04:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8001c08:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8001c0c:	d134      	bne.n	8001c78 <HCD_HC_IN_IRQHandler+0x1fe>
 8001c0e:	68fb      	ldr	r3, [r7, #12]
 8001c10:	015a      	lsls	r2, r3, #5
 8001c12:	693b      	ldr	r3, [r7, #16]
 8001c14:	4413      	add	r3, r2
 8001c16:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8001c1a:	68db      	ldr	r3, [r3, #12]
 8001c1c:	68fa      	ldr	r2, [r7, #12]
 8001c1e:	0151      	lsls	r1, r2, #5
 8001c20:	693a      	ldr	r2, [r7, #16]
 8001c22:	440a      	add	r2, r1
 8001c24:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
 8001c28:	f043 0302 	orr.w	r3, r3, #2
 8001c2c:	60d3      	str	r3, [r2, #12]
 8001c2e:	687a      	ldr	r2, [r7, #4]
 8001c30:	68fb      	ldr	r3, [r7, #12]
 8001c32:	212c      	movs	r1, #44	; 0x2c
 8001c34:	fb01 f303 	mul.w	r3, r1, r3
 8001c38:	4413      	add	r3, r2
 8001c3a:	3361      	adds	r3, #97	; 0x61
 8001c3c:	2208      	movs	r2, #8
 8001c3e:	701a      	strb	r2, [r3, #0]
 8001c40:	68fb      	ldr	r3, [r7, #12]
 8001c42:	015a      	lsls	r2, r3, #5
 8001c44:	693b      	ldr	r3, [r7, #16]
 8001c46:	4413      	add	r3, r2
 8001c48:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8001c4c:	461a      	mov	r2, r3
 8001c4e:	2310      	movs	r3, #16
 8001c50:	6093      	str	r3, [r2, #8]
 8001c52:	68fb      	ldr	r3, [r7, #12]
 8001c54:	015a      	lsls	r2, r3, #5
 8001c56:	693b      	ldr	r3, [r7, #16]
 8001c58:	4413      	add	r3, r2
 8001c5a:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8001c5e:	461a      	mov	r2, r3
 8001c60:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001c64:	6093      	str	r3, [r2, #8]
 8001c66:	687b      	ldr	r3, [r7, #4]
 8001c68:	681b      	ldr	r3, [r3, #0]
 8001c6a:	68fa      	ldr	r2, [r7, #12]
 8001c6c:	b2d2      	uxtb	r2, r2
 8001c6e:	4611      	mov	r1, r2
 8001c70:	4618      	mov	r0, r3
 8001c72:	f002 fda2 	bl	80047ba <USB_HC_Halt>
 8001c76:	e034      	b.n	8001ce2 <HCD_HC_IN_IRQHandler+0x268>
 8001c78:	68fb      	ldr	r3, [r7, #12]
 8001c7a:	015a      	lsls	r2, r3, #5
 8001c7c:	693b      	ldr	r3, [r7, #16]
 8001c7e:	4413      	add	r3, r2
 8001c80:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8001c84:	689b      	ldr	r3, [r3, #8]
 8001c86:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001c8a:	2b80      	cmp	r3, #128	; 0x80
 8001c8c:	d129      	bne.n	8001ce2 <HCD_HC_IN_IRQHandler+0x268>
 8001c8e:	68fb      	ldr	r3, [r7, #12]
 8001c90:	015a      	lsls	r2, r3, #5
 8001c92:	693b      	ldr	r3, [r7, #16]
 8001c94:	4413      	add	r3, r2
 8001c96:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8001c9a:	68db      	ldr	r3, [r3, #12]
 8001c9c:	68fa      	ldr	r2, [r7, #12]
 8001c9e:	0151      	lsls	r1, r2, #5
 8001ca0:	693a      	ldr	r2, [r7, #16]
 8001ca2:	440a      	add	r2, r1
 8001ca4:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
 8001ca8:	f043 0302 	orr.w	r3, r3, #2
 8001cac:	60d3      	str	r3, [r2, #12]
 8001cae:	687a      	ldr	r2, [r7, #4]
 8001cb0:	68fb      	ldr	r3, [r7, #12]
 8001cb2:	212c      	movs	r1, #44	; 0x2c
 8001cb4:	fb01 f303 	mul.w	r3, r1, r3
 8001cb8:	4413      	add	r3, r2
 8001cba:	3361      	adds	r3, #97	; 0x61
 8001cbc:	2206      	movs	r2, #6
 8001cbe:	701a      	strb	r2, [r3, #0]
 8001cc0:	687b      	ldr	r3, [r7, #4]
 8001cc2:	681b      	ldr	r3, [r3, #0]
 8001cc4:	68fa      	ldr	r2, [r7, #12]
 8001cc6:	b2d2      	uxtb	r2, r2
 8001cc8:	4611      	mov	r1, r2
 8001cca:	4618      	mov	r0, r3
 8001ccc:	f002 fd75 	bl	80047ba <USB_HC_Halt>
 8001cd0:	68fb      	ldr	r3, [r7, #12]
 8001cd2:	015a      	lsls	r2, r3, #5
 8001cd4:	693b      	ldr	r3, [r7, #16]
 8001cd6:	4413      	add	r3, r2
 8001cd8:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8001cdc:	461a      	mov	r2, r3
 8001cde:	2380      	movs	r3, #128	; 0x80
 8001ce0:	6093      	str	r3, [r2, #8]
 8001ce2:	68fb      	ldr	r3, [r7, #12]
 8001ce4:	015a      	lsls	r2, r3, #5
 8001ce6:	693b      	ldr	r3, [r7, #16]
 8001ce8:	4413      	add	r3, r2
 8001cea:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8001cee:	689b      	ldr	r3, [r3, #8]
 8001cf0:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8001cf4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8001cf8:	d122      	bne.n	8001d40 <HCD_HC_IN_IRQHandler+0x2c6>
 8001cfa:	68fb      	ldr	r3, [r7, #12]
 8001cfc:	015a      	lsls	r2, r3, #5
 8001cfe:	693b      	ldr	r3, [r7, #16]
 8001d00:	4413      	add	r3, r2
 8001d02:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8001d06:	68db      	ldr	r3, [r3, #12]
 8001d08:	68fa      	ldr	r2, [r7, #12]
 8001d0a:	0151      	lsls	r1, r2, #5
 8001d0c:	693a      	ldr	r2, [r7, #16]
 8001d0e:	440a      	add	r2, r1
 8001d10:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
 8001d14:	f043 0302 	orr.w	r3, r3, #2
 8001d18:	60d3      	str	r3, [r2, #12]
 8001d1a:	687b      	ldr	r3, [r7, #4]
 8001d1c:	681b      	ldr	r3, [r3, #0]
 8001d1e:	68fa      	ldr	r2, [r7, #12]
 8001d20:	b2d2      	uxtb	r2, r2
 8001d22:	4611      	mov	r1, r2
 8001d24:	4618      	mov	r0, r3
 8001d26:	f002 fd48 	bl	80047ba <USB_HC_Halt>
 8001d2a:	68fb      	ldr	r3, [r7, #12]
 8001d2c:	015a      	lsls	r2, r3, #5
 8001d2e:	693b      	ldr	r3, [r7, #16]
 8001d30:	4413      	add	r3, r2
 8001d32:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8001d36:	461a      	mov	r2, r3
 8001d38:	f44f 7300 	mov.w	r3, #512	; 0x200
 8001d3c:	6093      	str	r3, [r2, #8]
 8001d3e:	e2ba      	b.n	80022b6 <HCD_HC_IN_IRQHandler+0x83c>
 8001d40:	68fb      	ldr	r3, [r7, #12]
 8001d42:	015a      	lsls	r2, r3, #5
 8001d44:	693b      	ldr	r3, [r7, #16]
 8001d46:	4413      	add	r3, r2
 8001d48:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8001d4c:	689b      	ldr	r3, [r3, #8]
 8001d4e:	f003 0301 	and.w	r3, r3, #1
 8001d52:	2b01      	cmp	r3, #1
 8001d54:	f040 811b 	bne.w	8001f8e <HCD_HC_IN_IRQHandler+0x514>
 8001d58:	687b      	ldr	r3, [r7, #4]
 8001d5a:	691b      	ldr	r3, [r3, #16]
 8001d5c:	2b00      	cmp	r3, #0
 8001d5e:	d019      	beq.n	8001d94 <HCD_HC_IN_IRQHandler+0x31a>
 8001d60:	687a      	ldr	r2, [r7, #4]
 8001d62:	68fb      	ldr	r3, [r7, #12]
 8001d64:	212c      	movs	r1, #44	; 0x2c
 8001d66:	fb01 f303 	mul.w	r3, r1, r3
 8001d6a:	4413      	add	r3, r2
 8001d6c:	3348      	adds	r3, #72	; 0x48
 8001d6e:	681a      	ldr	r2, [r3, #0]
 8001d70:	68fb      	ldr	r3, [r7, #12]
 8001d72:	0159      	lsls	r1, r3, #5
 8001d74:	693b      	ldr	r3, [r7, #16]
 8001d76:	440b      	add	r3, r1
 8001d78:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8001d7c:	691b      	ldr	r3, [r3, #16]
 8001d7e:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8001d82:	1ad2      	subs	r2, r2, r3
 8001d84:	6879      	ldr	r1, [r7, #4]
 8001d86:	68fb      	ldr	r3, [r7, #12]
 8001d88:	202c      	movs	r0, #44	; 0x2c
 8001d8a:	fb00 f303 	mul.w	r3, r0, r3
 8001d8e:	440b      	add	r3, r1
 8001d90:	3350      	adds	r3, #80	; 0x50
 8001d92:	601a      	str	r2, [r3, #0]
 8001d94:	687a      	ldr	r2, [r7, #4]
 8001d96:	68fb      	ldr	r3, [r7, #12]
 8001d98:	212c      	movs	r1, #44	; 0x2c
 8001d9a:	fb01 f303 	mul.w	r3, r1, r3
 8001d9e:	4413      	add	r3, r2
 8001da0:	3361      	adds	r3, #97	; 0x61
 8001da2:	2201      	movs	r2, #1
 8001da4:	701a      	strb	r2, [r3, #0]
 8001da6:	687a      	ldr	r2, [r7, #4]
 8001da8:	68fb      	ldr	r3, [r7, #12]
 8001daa:	212c      	movs	r1, #44	; 0x2c
 8001dac:	fb01 f303 	mul.w	r3, r1, r3
 8001db0:	4413      	add	r3, r2
 8001db2:	335c      	adds	r3, #92	; 0x5c
 8001db4:	2200      	movs	r2, #0
 8001db6:	601a      	str	r2, [r3, #0]
 8001db8:	68fb      	ldr	r3, [r7, #12]
 8001dba:	015a      	lsls	r2, r3, #5
 8001dbc:	693b      	ldr	r3, [r7, #16]
 8001dbe:	4413      	add	r3, r2
 8001dc0:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8001dc4:	461a      	mov	r2, r3
 8001dc6:	2301      	movs	r3, #1
 8001dc8:	6093      	str	r3, [r2, #8]
 8001dca:	687a      	ldr	r2, [r7, #4]
 8001dcc:	68fb      	ldr	r3, [r7, #12]
 8001dce:	212c      	movs	r1, #44	; 0x2c
 8001dd0:	fb01 f303 	mul.w	r3, r1, r3
 8001dd4:	4413      	add	r3, r2
 8001dd6:	333f      	adds	r3, #63	; 0x3f
 8001dd8:	781b      	ldrb	r3, [r3, #0]
 8001dda:	2b00      	cmp	r3, #0
 8001ddc:	d009      	beq.n	8001df2 <HCD_HC_IN_IRQHandler+0x378>
 8001dde:	687a      	ldr	r2, [r7, #4]
 8001de0:	68fb      	ldr	r3, [r7, #12]
 8001de2:	212c      	movs	r1, #44	; 0x2c
 8001de4:	fb01 f303 	mul.w	r3, r1, r3
 8001de8:	4413      	add	r3, r2
 8001dea:	333f      	adds	r3, #63	; 0x3f
 8001dec:	781b      	ldrb	r3, [r3, #0]
 8001dee:	2b02      	cmp	r3, #2
 8001df0:	d121      	bne.n	8001e36 <HCD_HC_IN_IRQHandler+0x3bc>
 8001df2:	68fb      	ldr	r3, [r7, #12]
 8001df4:	015a      	lsls	r2, r3, #5
 8001df6:	693b      	ldr	r3, [r7, #16]
 8001df8:	4413      	add	r3, r2
 8001dfa:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8001dfe:	68db      	ldr	r3, [r3, #12]
 8001e00:	68fa      	ldr	r2, [r7, #12]
 8001e02:	0151      	lsls	r1, r2, #5
 8001e04:	693a      	ldr	r2, [r7, #16]
 8001e06:	440a      	add	r2, r1
 8001e08:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
 8001e0c:	f043 0302 	orr.w	r3, r3, #2
 8001e10:	60d3      	str	r3, [r2, #12]
 8001e12:	687b      	ldr	r3, [r7, #4]
 8001e14:	681b      	ldr	r3, [r3, #0]
 8001e16:	68fa      	ldr	r2, [r7, #12]
 8001e18:	b2d2      	uxtb	r2, r2
 8001e1a:	4611      	mov	r1, r2
 8001e1c:	4618      	mov	r0, r3
 8001e1e:	f002 fccc 	bl	80047ba <USB_HC_Halt>
 8001e22:	68fb      	ldr	r3, [r7, #12]
 8001e24:	015a      	lsls	r2, r3, #5
 8001e26:	693b      	ldr	r3, [r7, #16]
 8001e28:	4413      	add	r3, r2
 8001e2a:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8001e2e:	461a      	mov	r2, r3
 8001e30:	2310      	movs	r3, #16
 8001e32:	6093      	str	r3, [r2, #8]
 8001e34:	e066      	b.n	8001f04 <HCD_HC_IN_IRQHandler+0x48a>
 8001e36:	687a      	ldr	r2, [r7, #4]
 8001e38:	68fb      	ldr	r3, [r7, #12]
 8001e3a:	212c      	movs	r1, #44	; 0x2c
 8001e3c:	fb01 f303 	mul.w	r3, r1, r3
 8001e40:	4413      	add	r3, r2
 8001e42:	333f      	adds	r3, #63	; 0x3f
 8001e44:	781b      	ldrb	r3, [r3, #0]
 8001e46:	2b03      	cmp	r3, #3
 8001e48:	d127      	bne.n	8001e9a <HCD_HC_IN_IRQHandler+0x420>
 8001e4a:	68fb      	ldr	r3, [r7, #12]
 8001e4c:	015a      	lsls	r2, r3, #5
 8001e4e:	693b      	ldr	r3, [r7, #16]
 8001e50:	4413      	add	r3, r2
 8001e52:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8001e56:	681b      	ldr	r3, [r3, #0]
 8001e58:	68fa      	ldr	r2, [r7, #12]
 8001e5a:	0151      	lsls	r1, r2, #5
 8001e5c:	693a      	ldr	r2, [r7, #16]
 8001e5e:	440a      	add	r2, r1
 8001e60:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
 8001e64:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 8001e68:	6013      	str	r3, [r2, #0]
 8001e6a:	687a      	ldr	r2, [r7, #4]
 8001e6c:	68fb      	ldr	r3, [r7, #12]
 8001e6e:	212c      	movs	r1, #44	; 0x2c
 8001e70:	fb01 f303 	mul.w	r3, r1, r3
 8001e74:	4413      	add	r3, r2
 8001e76:	3360      	adds	r3, #96	; 0x60
 8001e78:	2201      	movs	r2, #1
 8001e7a:	701a      	strb	r2, [r3, #0]
 8001e7c:	68fb      	ldr	r3, [r7, #12]
 8001e7e:	b2d9      	uxtb	r1, r3
 8001e80:	687a      	ldr	r2, [r7, #4]
 8001e82:	68fb      	ldr	r3, [r7, #12]
 8001e84:	202c      	movs	r0, #44	; 0x2c
 8001e86:	fb00 f303 	mul.w	r3, r0, r3
 8001e8a:	4413      	add	r3, r2
 8001e8c:	3360      	adds	r3, #96	; 0x60
 8001e8e:	781b      	ldrb	r3, [r3, #0]
 8001e90:	461a      	mov	r2, r3
 8001e92:	6878      	ldr	r0, [r7, #4]
 8001e94:	f005 faec 	bl	8007470 <HAL_HCD_HC_NotifyURBChange_Callback>
 8001e98:	e034      	b.n	8001f04 <HCD_HC_IN_IRQHandler+0x48a>
 8001e9a:	687a      	ldr	r2, [r7, #4]
 8001e9c:	68fb      	ldr	r3, [r7, #12]
 8001e9e:	212c      	movs	r1, #44	; 0x2c
 8001ea0:	fb01 f303 	mul.w	r3, r1, r3
 8001ea4:	4413      	add	r3, r2
 8001ea6:	333f      	adds	r3, #63	; 0x3f
 8001ea8:	781b      	ldrb	r3, [r3, #0]
 8001eaa:	2b01      	cmp	r3, #1
 8001eac:	d12a      	bne.n	8001f04 <HCD_HC_IN_IRQHandler+0x48a>
 8001eae:	687a      	ldr	r2, [r7, #4]
 8001eb0:	68fb      	ldr	r3, [r7, #12]
 8001eb2:	212c      	movs	r1, #44	; 0x2c
 8001eb4:	fb01 f303 	mul.w	r3, r1, r3
 8001eb8:	4413      	add	r3, r2
 8001eba:	3360      	adds	r3, #96	; 0x60
 8001ebc:	2201      	movs	r2, #1
 8001ebe:	701a      	strb	r2, [r3, #0]
 8001ec0:	687a      	ldr	r2, [r7, #4]
 8001ec2:	68fb      	ldr	r3, [r7, #12]
 8001ec4:	212c      	movs	r1, #44	; 0x2c
 8001ec6:	fb01 f303 	mul.w	r3, r1, r3
 8001eca:	4413      	add	r3, r2
 8001ecc:	3354      	adds	r3, #84	; 0x54
 8001ece:	781b      	ldrb	r3, [r3, #0]
 8001ed0:	f083 0301 	eor.w	r3, r3, #1
 8001ed4:	b2d8      	uxtb	r0, r3
 8001ed6:	687a      	ldr	r2, [r7, #4]
 8001ed8:	68fb      	ldr	r3, [r7, #12]
 8001eda:	212c      	movs	r1, #44	; 0x2c
 8001edc:	fb01 f303 	mul.w	r3, r1, r3
 8001ee0:	4413      	add	r3, r2
 8001ee2:	3354      	adds	r3, #84	; 0x54
 8001ee4:	4602      	mov	r2, r0
 8001ee6:	701a      	strb	r2, [r3, #0]
 8001ee8:	68fb      	ldr	r3, [r7, #12]
 8001eea:	b2d9      	uxtb	r1, r3
 8001eec:	687a      	ldr	r2, [r7, #4]
 8001eee:	68fb      	ldr	r3, [r7, #12]
 8001ef0:	202c      	movs	r0, #44	; 0x2c
 8001ef2:	fb00 f303 	mul.w	r3, r0, r3
 8001ef6:	4413      	add	r3, r2
 8001ef8:	3360      	adds	r3, #96	; 0x60
 8001efa:	781b      	ldrb	r3, [r3, #0]
 8001efc:	461a      	mov	r2, r3
 8001efe:	6878      	ldr	r0, [r7, #4]
 8001f00:	f005 fab6 	bl	8007470 <HAL_HCD_HC_NotifyURBChange_Callback>
 8001f04:	687b      	ldr	r3, [r7, #4]
 8001f06:	691b      	ldr	r3, [r3, #16]
 8001f08:	2b01      	cmp	r3, #1
 8001f0a:	d12b      	bne.n	8001f64 <HCD_HC_IN_IRQHandler+0x4ea>
 8001f0c:	687a      	ldr	r2, [r7, #4]
 8001f0e:	68fb      	ldr	r3, [r7, #12]
 8001f10:	212c      	movs	r1, #44	; 0x2c
 8001f12:	fb01 f303 	mul.w	r3, r1, r3
 8001f16:	4413      	add	r3, r2
 8001f18:	3348      	adds	r3, #72	; 0x48
 8001f1a:	681b      	ldr	r3, [r3, #0]
 8001f1c:	6879      	ldr	r1, [r7, #4]
 8001f1e:	68fa      	ldr	r2, [r7, #12]
 8001f20:	202c      	movs	r0, #44	; 0x2c
 8001f22:	fb00 f202 	mul.w	r2, r0, r2
 8001f26:	440a      	add	r2, r1
 8001f28:	3240      	adds	r2, #64	; 0x40
 8001f2a:	8812      	ldrh	r2, [r2, #0]
 8001f2c:	fbb3 f3f2 	udiv	r3, r3, r2
 8001f30:	f003 0301 	and.w	r3, r3, #1
 8001f34:	2b00      	cmp	r3, #0
 8001f36:	f000 81be 	beq.w	80022b6 <HCD_HC_IN_IRQHandler+0x83c>
 8001f3a:	687a      	ldr	r2, [r7, #4]
 8001f3c:	68fb      	ldr	r3, [r7, #12]
 8001f3e:	212c      	movs	r1, #44	; 0x2c
 8001f40:	fb01 f303 	mul.w	r3, r1, r3
 8001f44:	4413      	add	r3, r2
 8001f46:	3354      	adds	r3, #84	; 0x54
 8001f48:	781b      	ldrb	r3, [r3, #0]
 8001f4a:	f083 0301 	eor.w	r3, r3, #1
 8001f4e:	b2d8      	uxtb	r0, r3
 8001f50:	687a      	ldr	r2, [r7, #4]
 8001f52:	68fb      	ldr	r3, [r7, #12]
 8001f54:	212c      	movs	r1, #44	; 0x2c
 8001f56:	fb01 f303 	mul.w	r3, r1, r3
 8001f5a:	4413      	add	r3, r2
 8001f5c:	3354      	adds	r3, #84	; 0x54
 8001f5e:	4602      	mov	r2, r0
 8001f60:	701a      	strb	r2, [r3, #0]
 8001f62:	e1a8      	b.n	80022b6 <HCD_HC_IN_IRQHandler+0x83c>
 8001f64:	687a      	ldr	r2, [r7, #4]
 8001f66:	68fb      	ldr	r3, [r7, #12]
 8001f68:	212c      	movs	r1, #44	; 0x2c
 8001f6a:	fb01 f303 	mul.w	r3, r1, r3
 8001f6e:	4413      	add	r3, r2
 8001f70:	3354      	adds	r3, #84	; 0x54
 8001f72:	781b      	ldrb	r3, [r3, #0]
 8001f74:	f083 0301 	eor.w	r3, r3, #1
 8001f78:	b2d8      	uxtb	r0, r3
 8001f7a:	687a      	ldr	r2, [r7, #4]
 8001f7c:	68fb      	ldr	r3, [r7, #12]
 8001f7e:	212c      	movs	r1, #44	; 0x2c
 8001f80:	fb01 f303 	mul.w	r3, r1, r3
 8001f84:	4413      	add	r3, r2
 8001f86:	3354      	adds	r3, #84	; 0x54
 8001f88:	4602      	mov	r2, r0
 8001f8a:	701a      	strb	r2, [r3, #0]
 8001f8c:	e193      	b.n	80022b6 <HCD_HC_IN_IRQHandler+0x83c>
 8001f8e:	68fb      	ldr	r3, [r7, #12]
 8001f90:	015a      	lsls	r2, r3, #5
 8001f92:	693b      	ldr	r3, [r7, #16]
 8001f94:	4413      	add	r3, r2
 8001f96:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8001f9a:	689b      	ldr	r3, [r3, #8]
 8001f9c:	f003 0302 	and.w	r3, r3, #2
 8001fa0:	2b02      	cmp	r3, #2
 8001fa2:	f040 8106 	bne.w	80021b2 <HCD_HC_IN_IRQHandler+0x738>
 8001fa6:	68fb      	ldr	r3, [r7, #12]
 8001fa8:	015a      	lsls	r2, r3, #5
 8001faa:	693b      	ldr	r3, [r7, #16]
 8001fac:	4413      	add	r3, r2
 8001fae:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8001fb2:	68db      	ldr	r3, [r3, #12]
 8001fb4:	68fa      	ldr	r2, [r7, #12]
 8001fb6:	0151      	lsls	r1, r2, #5
 8001fb8:	693a      	ldr	r2, [r7, #16]
 8001fba:	440a      	add	r2, r1
 8001fbc:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
 8001fc0:	f023 0302 	bic.w	r3, r3, #2
 8001fc4:	60d3      	str	r3, [r2, #12]
 8001fc6:	687a      	ldr	r2, [r7, #4]
 8001fc8:	68fb      	ldr	r3, [r7, #12]
 8001fca:	212c      	movs	r1, #44	; 0x2c
 8001fcc:	fb01 f303 	mul.w	r3, r1, r3
 8001fd0:	4413      	add	r3, r2
 8001fd2:	3361      	adds	r3, #97	; 0x61
 8001fd4:	781b      	ldrb	r3, [r3, #0]
 8001fd6:	2b01      	cmp	r3, #1
 8001fd8:	d109      	bne.n	8001fee <HCD_HC_IN_IRQHandler+0x574>
 8001fda:	687a      	ldr	r2, [r7, #4]
 8001fdc:	68fb      	ldr	r3, [r7, #12]
 8001fde:	212c      	movs	r1, #44	; 0x2c
 8001fe0:	fb01 f303 	mul.w	r3, r1, r3
 8001fe4:	4413      	add	r3, r2
 8001fe6:	3360      	adds	r3, #96	; 0x60
 8001fe8:	2201      	movs	r2, #1
 8001fea:	701a      	strb	r2, [r3, #0]
 8001fec:	e0c9      	b.n	8002182 <HCD_HC_IN_IRQHandler+0x708>
 8001fee:	687a      	ldr	r2, [r7, #4]
 8001ff0:	68fb      	ldr	r3, [r7, #12]
 8001ff2:	212c      	movs	r1, #44	; 0x2c
 8001ff4:	fb01 f303 	mul.w	r3, r1, r3
 8001ff8:	4413      	add	r3, r2
 8001ffa:	3361      	adds	r3, #97	; 0x61
 8001ffc:	781b      	ldrb	r3, [r3, #0]
 8001ffe:	2b05      	cmp	r3, #5
 8002000:	d109      	bne.n	8002016 <HCD_HC_IN_IRQHandler+0x59c>
 8002002:	687a      	ldr	r2, [r7, #4]
 8002004:	68fb      	ldr	r3, [r7, #12]
 8002006:	212c      	movs	r1, #44	; 0x2c
 8002008:	fb01 f303 	mul.w	r3, r1, r3
 800200c:	4413      	add	r3, r2
 800200e:	3360      	adds	r3, #96	; 0x60
 8002010:	2205      	movs	r2, #5
 8002012:	701a      	strb	r2, [r3, #0]
 8002014:	e0b5      	b.n	8002182 <HCD_HC_IN_IRQHandler+0x708>
 8002016:	687a      	ldr	r2, [r7, #4]
 8002018:	68fb      	ldr	r3, [r7, #12]
 800201a:	212c      	movs	r1, #44	; 0x2c
 800201c:	fb01 f303 	mul.w	r3, r1, r3
 8002020:	4413      	add	r3, r2
 8002022:	3361      	adds	r3, #97	; 0x61
 8002024:	781b      	ldrb	r3, [r3, #0]
 8002026:	2b06      	cmp	r3, #6
 8002028:	d009      	beq.n	800203e <HCD_HC_IN_IRQHandler+0x5c4>
 800202a:	687a      	ldr	r2, [r7, #4]
 800202c:	68fb      	ldr	r3, [r7, #12]
 800202e:	212c      	movs	r1, #44	; 0x2c
 8002030:	fb01 f303 	mul.w	r3, r1, r3
 8002034:	4413      	add	r3, r2
 8002036:	3361      	adds	r3, #97	; 0x61
 8002038:	781b      	ldrb	r3, [r3, #0]
 800203a:	2b08      	cmp	r3, #8
 800203c:	d150      	bne.n	80020e0 <HCD_HC_IN_IRQHandler+0x666>
 800203e:	687a      	ldr	r2, [r7, #4]
 8002040:	68fb      	ldr	r3, [r7, #12]
 8002042:	212c      	movs	r1, #44	; 0x2c
 8002044:	fb01 f303 	mul.w	r3, r1, r3
 8002048:	4413      	add	r3, r2
 800204a:	335c      	adds	r3, #92	; 0x5c
 800204c:	681b      	ldr	r3, [r3, #0]
 800204e:	1c5a      	adds	r2, r3, #1
 8002050:	6879      	ldr	r1, [r7, #4]
 8002052:	68fb      	ldr	r3, [r7, #12]
 8002054:	202c      	movs	r0, #44	; 0x2c
 8002056:	fb00 f303 	mul.w	r3, r0, r3
 800205a:	440b      	add	r3, r1
 800205c:	335c      	adds	r3, #92	; 0x5c
 800205e:	601a      	str	r2, [r3, #0]
 8002060:	687a      	ldr	r2, [r7, #4]
 8002062:	68fb      	ldr	r3, [r7, #12]
 8002064:	212c      	movs	r1, #44	; 0x2c
 8002066:	fb01 f303 	mul.w	r3, r1, r3
 800206a:	4413      	add	r3, r2
 800206c:	335c      	adds	r3, #92	; 0x5c
 800206e:	681b      	ldr	r3, [r3, #0]
 8002070:	2b02      	cmp	r3, #2
 8002072:	d912      	bls.n	800209a <HCD_HC_IN_IRQHandler+0x620>
 8002074:	687a      	ldr	r2, [r7, #4]
 8002076:	68fb      	ldr	r3, [r7, #12]
 8002078:	212c      	movs	r1, #44	; 0x2c
 800207a:	fb01 f303 	mul.w	r3, r1, r3
 800207e:	4413      	add	r3, r2
 8002080:	335c      	adds	r3, #92	; 0x5c
 8002082:	2200      	movs	r2, #0
 8002084:	601a      	str	r2, [r3, #0]
 8002086:	687a      	ldr	r2, [r7, #4]
 8002088:	68fb      	ldr	r3, [r7, #12]
 800208a:	212c      	movs	r1, #44	; 0x2c
 800208c:	fb01 f303 	mul.w	r3, r1, r3
 8002090:	4413      	add	r3, r2
 8002092:	3360      	adds	r3, #96	; 0x60
 8002094:	2204      	movs	r2, #4
 8002096:	701a      	strb	r2, [r3, #0]
 8002098:	e073      	b.n	8002182 <HCD_HC_IN_IRQHandler+0x708>
 800209a:	687a      	ldr	r2, [r7, #4]
 800209c:	68fb      	ldr	r3, [r7, #12]
 800209e:	212c      	movs	r1, #44	; 0x2c
 80020a0:	fb01 f303 	mul.w	r3, r1, r3
 80020a4:	4413      	add	r3, r2
 80020a6:	3360      	adds	r3, #96	; 0x60
 80020a8:	2202      	movs	r2, #2
 80020aa:	701a      	strb	r2, [r3, #0]
 80020ac:	68fb      	ldr	r3, [r7, #12]
 80020ae:	015a      	lsls	r2, r3, #5
 80020b0:	693b      	ldr	r3, [r7, #16]
 80020b2:	4413      	add	r3, r2
 80020b4:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 80020b8:	681b      	ldr	r3, [r3, #0]
 80020ba:	60bb      	str	r3, [r7, #8]
 80020bc:	68bb      	ldr	r3, [r7, #8]
 80020be:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 80020c2:	60bb      	str	r3, [r7, #8]
 80020c4:	68bb      	ldr	r3, [r7, #8]
 80020c6:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 80020ca:	60bb      	str	r3, [r7, #8]
 80020cc:	68fb      	ldr	r3, [r7, #12]
 80020ce:	015a      	lsls	r2, r3, #5
 80020d0:	693b      	ldr	r3, [r7, #16]
 80020d2:	4413      	add	r3, r2
 80020d4:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 80020d8:	461a      	mov	r2, r3
 80020da:	68bb      	ldr	r3, [r7, #8]
 80020dc:	6013      	str	r3, [r2, #0]
 80020de:	e050      	b.n	8002182 <HCD_HC_IN_IRQHandler+0x708>
 80020e0:	687a      	ldr	r2, [r7, #4]
 80020e2:	68fb      	ldr	r3, [r7, #12]
 80020e4:	212c      	movs	r1, #44	; 0x2c
 80020e6:	fb01 f303 	mul.w	r3, r1, r3
 80020ea:	4413      	add	r3, r2
 80020ec:	3361      	adds	r3, #97	; 0x61
 80020ee:	781b      	ldrb	r3, [r3, #0]
 80020f0:	2b03      	cmp	r3, #3
 80020f2:	d122      	bne.n	800213a <HCD_HC_IN_IRQHandler+0x6c0>
 80020f4:	687a      	ldr	r2, [r7, #4]
 80020f6:	68fb      	ldr	r3, [r7, #12]
 80020f8:	212c      	movs	r1, #44	; 0x2c
 80020fa:	fb01 f303 	mul.w	r3, r1, r3
 80020fe:	4413      	add	r3, r2
 8002100:	3360      	adds	r3, #96	; 0x60
 8002102:	2202      	movs	r2, #2
 8002104:	701a      	strb	r2, [r3, #0]
 8002106:	68fb      	ldr	r3, [r7, #12]
 8002108:	015a      	lsls	r2, r3, #5
 800210a:	693b      	ldr	r3, [r7, #16]
 800210c:	4413      	add	r3, r2
 800210e:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8002112:	681b      	ldr	r3, [r3, #0]
 8002114:	60bb      	str	r3, [r7, #8]
 8002116:	68bb      	ldr	r3, [r7, #8]
 8002118:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 800211c:	60bb      	str	r3, [r7, #8]
 800211e:	68bb      	ldr	r3, [r7, #8]
 8002120:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8002124:	60bb      	str	r3, [r7, #8]
 8002126:	68fb      	ldr	r3, [r7, #12]
 8002128:	015a      	lsls	r2, r3, #5
 800212a:	693b      	ldr	r3, [r7, #16]
 800212c:	4413      	add	r3, r2
 800212e:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8002132:	461a      	mov	r2, r3
 8002134:	68bb      	ldr	r3, [r7, #8]
 8002136:	6013      	str	r3, [r2, #0]
 8002138:	e023      	b.n	8002182 <HCD_HC_IN_IRQHandler+0x708>
 800213a:	687a      	ldr	r2, [r7, #4]
 800213c:	68fb      	ldr	r3, [r7, #12]
 800213e:	212c      	movs	r1, #44	; 0x2c
 8002140:	fb01 f303 	mul.w	r3, r1, r3
 8002144:	4413      	add	r3, r2
 8002146:	3361      	adds	r3, #97	; 0x61
 8002148:	781b      	ldrb	r3, [r3, #0]
 800214a:	2b07      	cmp	r3, #7
 800214c:	d119      	bne.n	8002182 <HCD_HC_IN_IRQHandler+0x708>
 800214e:	687a      	ldr	r2, [r7, #4]
 8002150:	68fb      	ldr	r3, [r7, #12]
 8002152:	212c      	movs	r1, #44	; 0x2c
 8002154:	fb01 f303 	mul.w	r3, r1, r3
 8002158:	4413      	add	r3, r2
 800215a:	335c      	adds	r3, #92	; 0x5c
 800215c:	681b      	ldr	r3, [r3, #0]
 800215e:	1c5a      	adds	r2, r3, #1
 8002160:	6879      	ldr	r1, [r7, #4]
 8002162:	68fb      	ldr	r3, [r7, #12]
 8002164:	202c      	movs	r0, #44	; 0x2c
 8002166:	fb00 f303 	mul.w	r3, r0, r3
 800216a:	440b      	add	r3, r1
 800216c:	335c      	adds	r3, #92	; 0x5c
 800216e:	601a      	str	r2, [r3, #0]
 8002170:	687a      	ldr	r2, [r7, #4]
 8002172:	68fb      	ldr	r3, [r7, #12]
 8002174:	212c      	movs	r1, #44	; 0x2c
 8002176:	fb01 f303 	mul.w	r3, r1, r3
 800217a:	4413      	add	r3, r2
 800217c:	3360      	adds	r3, #96	; 0x60
 800217e:	2204      	movs	r2, #4
 8002180:	701a      	strb	r2, [r3, #0]
 8002182:	68fb      	ldr	r3, [r7, #12]
 8002184:	015a      	lsls	r2, r3, #5
 8002186:	693b      	ldr	r3, [r7, #16]
 8002188:	4413      	add	r3, r2
 800218a:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 800218e:	461a      	mov	r2, r3
 8002190:	2302      	movs	r3, #2
 8002192:	6093      	str	r3, [r2, #8]
 8002194:	68fb      	ldr	r3, [r7, #12]
 8002196:	b2d9      	uxtb	r1, r3
 8002198:	687a      	ldr	r2, [r7, #4]
 800219a:	68fb      	ldr	r3, [r7, #12]
 800219c:	202c      	movs	r0, #44	; 0x2c
 800219e:	fb00 f303 	mul.w	r3, r0, r3
 80021a2:	4413      	add	r3, r2
 80021a4:	3360      	adds	r3, #96	; 0x60
 80021a6:	781b      	ldrb	r3, [r3, #0]
 80021a8:	461a      	mov	r2, r3
 80021aa:	6878      	ldr	r0, [r7, #4]
 80021ac:	f005 f960 	bl	8007470 <HAL_HCD_HC_NotifyURBChange_Callback>
 80021b0:	e081      	b.n	80022b6 <HCD_HC_IN_IRQHandler+0x83c>
 80021b2:	68fb      	ldr	r3, [r7, #12]
 80021b4:	015a      	lsls	r2, r3, #5
 80021b6:	693b      	ldr	r3, [r7, #16]
 80021b8:	4413      	add	r3, r2
 80021ba:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 80021be:	689b      	ldr	r3, [r3, #8]
 80021c0:	f003 0310 	and.w	r3, r3, #16
 80021c4:	2b10      	cmp	r3, #16
 80021c6:	d176      	bne.n	80022b6 <HCD_HC_IN_IRQHandler+0x83c>
 80021c8:	687a      	ldr	r2, [r7, #4]
 80021ca:	68fb      	ldr	r3, [r7, #12]
 80021cc:	212c      	movs	r1, #44	; 0x2c
 80021ce:	fb01 f303 	mul.w	r3, r1, r3
 80021d2:	4413      	add	r3, r2
 80021d4:	333f      	adds	r3, #63	; 0x3f
 80021d6:	781b      	ldrb	r3, [r3, #0]
 80021d8:	2b03      	cmp	r3, #3
 80021da:	d121      	bne.n	8002220 <HCD_HC_IN_IRQHandler+0x7a6>
 80021dc:	687a      	ldr	r2, [r7, #4]
 80021de:	68fb      	ldr	r3, [r7, #12]
 80021e0:	212c      	movs	r1, #44	; 0x2c
 80021e2:	fb01 f303 	mul.w	r3, r1, r3
 80021e6:	4413      	add	r3, r2
 80021e8:	335c      	adds	r3, #92	; 0x5c
 80021ea:	2200      	movs	r2, #0
 80021ec:	601a      	str	r2, [r3, #0]
 80021ee:	68fb      	ldr	r3, [r7, #12]
 80021f0:	015a      	lsls	r2, r3, #5
 80021f2:	693b      	ldr	r3, [r7, #16]
 80021f4:	4413      	add	r3, r2
 80021f6:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 80021fa:	68db      	ldr	r3, [r3, #12]
 80021fc:	68fa      	ldr	r2, [r7, #12]
 80021fe:	0151      	lsls	r1, r2, #5
 8002200:	693a      	ldr	r2, [r7, #16]
 8002202:	440a      	add	r2, r1
 8002204:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
 8002208:	f043 0302 	orr.w	r3, r3, #2
 800220c:	60d3      	str	r3, [r2, #12]
 800220e:	687b      	ldr	r3, [r7, #4]
 8002210:	681b      	ldr	r3, [r3, #0]
 8002212:	68fa      	ldr	r2, [r7, #12]
 8002214:	b2d2      	uxtb	r2, r2
 8002216:	4611      	mov	r1, r2
 8002218:	4618      	mov	r0, r3
 800221a:	f002 face 	bl	80047ba <USB_HC_Halt>
 800221e:	e041      	b.n	80022a4 <HCD_HC_IN_IRQHandler+0x82a>
 8002220:	687a      	ldr	r2, [r7, #4]
 8002222:	68fb      	ldr	r3, [r7, #12]
 8002224:	212c      	movs	r1, #44	; 0x2c
 8002226:	fb01 f303 	mul.w	r3, r1, r3
 800222a:	4413      	add	r3, r2
 800222c:	333f      	adds	r3, #63	; 0x3f
 800222e:	781b      	ldrb	r3, [r3, #0]
 8002230:	2b00      	cmp	r3, #0
 8002232:	d009      	beq.n	8002248 <HCD_HC_IN_IRQHandler+0x7ce>
 8002234:	687a      	ldr	r2, [r7, #4]
 8002236:	68fb      	ldr	r3, [r7, #12]
 8002238:	212c      	movs	r1, #44	; 0x2c
 800223a:	fb01 f303 	mul.w	r3, r1, r3
 800223e:	4413      	add	r3, r2
 8002240:	333f      	adds	r3, #63	; 0x3f
 8002242:	781b      	ldrb	r3, [r3, #0]
 8002244:	2b02      	cmp	r3, #2
 8002246:	d12d      	bne.n	80022a4 <HCD_HC_IN_IRQHandler+0x82a>
 8002248:	687a      	ldr	r2, [r7, #4]
 800224a:	68fb      	ldr	r3, [r7, #12]
 800224c:	212c      	movs	r1, #44	; 0x2c
 800224e:	fb01 f303 	mul.w	r3, r1, r3
 8002252:	4413      	add	r3, r2
 8002254:	335c      	adds	r3, #92	; 0x5c
 8002256:	2200      	movs	r2, #0
 8002258:	601a      	str	r2, [r3, #0]
 800225a:	687b      	ldr	r3, [r7, #4]
 800225c:	691b      	ldr	r3, [r3, #16]
 800225e:	2b00      	cmp	r3, #0
 8002260:	d120      	bne.n	80022a4 <HCD_HC_IN_IRQHandler+0x82a>
 8002262:	687a      	ldr	r2, [r7, #4]
 8002264:	68fb      	ldr	r3, [r7, #12]
 8002266:	212c      	movs	r1, #44	; 0x2c
 8002268:	fb01 f303 	mul.w	r3, r1, r3
 800226c:	4413      	add	r3, r2
 800226e:	3361      	adds	r3, #97	; 0x61
 8002270:	2203      	movs	r2, #3
 8002272:	701a      	strb	r2, [r3, #0]
 8002274:	68fb      	ldr	r3, [r7, #12]
 8002276:	015a      	lsls	r2, r3, #5
 8002278:	693b      	ldr	r3, [r7, #16]
 800227a:	4413      	add	r3, r2
 800227c:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8002280:	68db      	ldr	r3, [r3, #12]
 8002282:	68fa      	ldr	r2, [r7, #12]
 8002284:	0151      	lsls	r1, r2, #5
 8002286:	693a      	ldr	r2, [r7, #16]
 8002288:	440a      	add	r2, r1
 800228a:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
 800228e:	f043 0302 	orr.w	r3, r3, #2
 8002292:	60d3      	str	r3, [r2, #12]
 8002294:	687b      	ldr	r3, [r7, #4]
 8002296:	681b      	ldr	r3, [r3, #0]
 8002298:	68fa      	ldr	r2, [r7, #12]
 800229a:	b2d2      	uxtb	r2, r2
 800229c:	4611      	mov	r1, r2
 800229e:	4618      	mov	r0, r3
 80022a0:	f002 fa8b 	bl	80047ba <USB_HC_Halt>
 80022a4:	68fb      	ldr	r3, [r7, #12]
 80022a6:	015a      	lsls	r2, r3, #5
 80022a8:	693b      	ldr	r3, [r7, #16]
 80022aa:	4413      	add	r3, r2
 80022ac:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 80022b0:	461a      	mov	r2, r3
 80022b2:	2310      	movs	r3, #16
 80022b4:	6093      	str	r3, [r2, #8]
 80022b6:	bf00      	nop
 80022b8:	3718      	adds	r7, #24
 80022ba:	46bd      	mov	sp, r7
 80022bc:	bd80      	pop	{r7, pc}

080022be <HCD_HC_OUT_IRQHandler>:
 80022be:	b580      	push	{r7, lr}
 80022c0:	b088      	sub	sp, #32
 80022c2:	af00      	add	r7, sp, #0
 80022c4:	6078      	str	r0, [r7, #4]
 80022c6:	460b      	mov	r3, r1
 80022c8:	70fb      	strb	r3, [r7, #3]
 80022ca:	687b      	ldr	r3, [r7, #4]
 80022cc:	681b      	ldr	r3, [r3, #0]
 80022ce:	61fb      	str	r3, [r7, #28]
 80022d0:	69fb      	ldr	r3, [r7, #28]
 80022d2:	61bb      	str	r3, [r7, #24]
 80022d4:	78fb      	ldrb	r3, [r7, #3]
 80022d6:	617b      	str	r3, [r7, #20]
 80022d8:	697b      	ldr	r3, [r7, #20]
 80022da:	015a      	lsls	r2, r3, #5
 80022dc:	69bb      	ldr	r3, [r7, #24]
 80022de:	4413      	add	r3, r2
 80022e0:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 80022e4:	689b      	ldr	r3, [r3, #8]
 80022e6:	f003 0304 	and.w	r3, r3, #4
 80022ea:	2b04      	cmp	r3, #4
 80022ec:	d119      	bne.n	8002322 <HCD_HC_OUT_IRQHandler+0x64>
 80022ee:	697b      	ldr	r3, [r7, #20]
 80022f0:	015a      	lsls	r2, r3, #5
 80022f2:	69bb      	ldr	r3, [r7, #24]
 80022f4:	4413      	add	r3, r2
 80022f6:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 80022fa:	461a      	mov	r2, r3
 80022fc:	2304      	movs	r3, #4
 80022fe:	6093      	str	r3, [r2, #8]
 8002300:	697b      	ldr	r3, [r7, #20]
 8002302:	015a      	lsls	r2, r3, #5
 8002304:	69bb      	ldr	r3, [r7, #24]
 8002306:	4413      	add	r3, r2
 8002308:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 800230c:	68db      	ldr	r3, [r3, #12]
 800230e:	697a      	ldr	r2, [r7, #20]
 8002310:	0151      	lsls	r1, r2, #5
 8002312:	69ba      	ldr	r2, [r7, #24]
 8002314:	440a      	add	r2, r1
 8002316:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
 800231a:	f043 0302 	orr.w	r3, r3, #2
 800231e:	60d3      	str	r3, [r2, #12]
 8002320:	e3ca      	b.n	8002ab8 <HCD_HC_OUT_IRQHandler+0x7fa>
 8002322:	697b      	ldr	r3, [r7, #20]
 8002324:	015a      	lsls	r2, r3, #5
 8002326:	69bb      	ldr	r3, [r7, #24]
 8002328:	4413      	add	r3, r2
 800232a:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 800232e:	689b      	ldr	r3, [r3, #8]
 8002330:	f003 0320 	and.w	r3, r3, #32
 8002334:	2b20      	cmp	r3, #32
 8002336:	d13e      	bne.n	80023b6 <HCD_HC_OUT_IRQHandler+0xf8>
 8002338:	697b      	ldr	r3, [r7, #20]
 800233a:	015a      	lsls	r2, r3, #5
 800233c:	69bb      	ldr	r3, [r7, #24]
 800233e:	4413      	add	r3, r2
 8002340:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8002344:	461a      	mov	r2, r3
 8002346:	2320      	movs	r3, #32
 8002348:	6093      	str	r3, [r2, #8]
 800234a:	687a      	ldr	r2, [r7, #4]
 800234c:	697b      	ldr	r3, [r7, #20]
 800234e:	212c      	movs	r1, #44	; 0x2c
 8002350:	fb01 f303 	mul.w	r3, r1, r3
 8002354:	4413      	add	r3, r2
 8002356:	333d      	adds	r3, #61	; 0x3d
 8002358:	781b      	ldrb	r3, [r3, #0]
 800235a:	2b01      	cmp	r3, #1
 800235c:	f040 83ac 	bne.w	8002ab8 <HCD_HC_OUT_IRQHandler+0x7fa>
 8002360:	687a      	ldr	r2, [r7, #4]
 8002362:	697b      	ldr	r3, [r7, #20]
 8002364:	212c      	movs	r1, #44	; 0x2c
 8002366:	fb01 f303 	mul.w	r3, r1, r3
 800236a:	4413      	add	r3, r2
 800236c:	333d      	adds	r3, #61	; 0x3d
 800236e:	2200      	movs	r2, #0
 8002370:	701a      	strb	r2, [r3, #0]
 8002372:	687a      	ldr	r2, [r7, #4]
 8002374:	697b      	ldr	r3, [r7, #20]
 8002376:	212c      	movs	r1, #44	; 0x2c
 8002378:	fb01 f303 	mul.w	r3, r1, r3
 800237c:	4413      	add	r3, r2
 800237e:	3360      	adds	r3, #96	; 0x60
 8002380:	2202      	movs	r2, #2
 8002382:	701a      	strb	r2, [r3, #0]
 8002384:	697b      	ldr	r3, [r7, #20]
 8002386:	015a      	lsls	r2, r3, #5
 8002388:	69bb      	ldr	r3, [r7, #24]
 800238a:	4413      	add	r3, r2
 800238c:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8002390:	68db      	ldr	r3, [r3, #12]
 8002392:	697a      	ldr	r2, [r7, #20]
 8002394:	0151      	lsls	r1, r2, #5
 8002396:	69ba      	ldr	r2, [r7, #24]
 8002398:	440a      	add	r2, r1
 800239a:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
 800239e:	f043 0302 	orr.w	r3, r3, #2
 80023a2:	60d3      	str	r3, [r2, #12]
 80023a4:	687b      	ldr	r3, [r7, #4]
 80023a6:	681b      	ldr	r3, [r3, #0]
 80023a8:	697a      	ldr	r2, [r7, #20]
 80023aa:	b2d2      	uxtb	r2, r2
 80023ac:	4611      	mov	r1, r2
 80023ae:	4618      	mov	r0, r3
 80023b0:	f002 fa03 	bl	80047ba <USB_HC_Halt>
 80023b4:	e380      	b.n	8002ab8 <HCD_HC_OUT_IRQHandler+0x7fa>
 80023b6:	697b      	ldr	r3, [r7, #20]
 80023b8:	015a      	lsls	r2, r3, #5
 80023ba:	69bb      	ldr	r3, [r7, #24]
 80023bc:	4413      	add	r3, r2
 80023be:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 80023c2:	689b      	ldr	r3, [r3, #8]
 80023c4:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80023c8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80023cc:	d122      	bne.n	8002414 <HCD_HC_OUT_IRQHandler+0x156>
 80023ce:	697b      	ldr	r3, [r7, #20]
 80023d0:	015a      	lsls	r2, r3, #5
 80023d2:	69bb      	ldr	r3, [r7, #24]
 80023d4:	4413      	add	r3, r2
 80023d6:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 80023da:	68db      	ldr	r3, [r3, #12]
 80023dc:	697a      	ldr	r2, [r7, #20]
 80023de:	0151      	lsls	r1, r2, #5
 80023e0:	69ba      	ldr	r2, [r7, #24]
 80023e2:	440a      	add	r2, r1
 80023e4:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
 80023e8:	f043 0302 	orr.w	r3, r3, #2
 80023ec:	60d3      	str	r3, [r2, #12]
 80023ee:	687b      	ldr	r3, [r7, #4]
 80023f0:	681b      	ldr	r3, [r3, #0]
 80023f2:	697a      	ldr	r2, [r7, #20]
 80023f4:	b2d2      	uxtb	r2, r2
 80023f6:	4611      	mov	r1, r2
 80023f8:	4618      	mov	r0, r3
 80023fa:	f002 f9de 	bl	80047ba <USB_HC_Halt>
 80023fe:	697b      	ldr	r3, [r7, #20]
 8002400:	015a      	lsls	r2, r3, #5
 8002402:	69bb      	ldr	r3, [r7, #24]
 8002404:	4413      	add	r3, r2
 8002406:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 800240a:	461a      	mov	r2, r3
 800240c:	f44f 7300 	mov.w	r3, #512	; 0x200
 8002410:	6093      	str	r3, [r2, #8]
 8002412:	e351      	b.n	8002ab8 <HCD_HC_OUT_IRQHandler+0x7fa>
 8002414:	697b      	ldr	r3, [r7, #20]
 8002416:	015a      	lsls	r2, r3, #5
 8002418:	69bb      	ldr	r3, [r7, #24]
 800241a:	4413      	add	r3, r2
 800241c:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8002420:	689b      	ldr	r3, [r3, #8]
 8002422:	f003 0301 	and.w	r3, r3, #1
 8002426:	2b01      	cmp	r3, #1
 8002428:	d150      	bne.n	80024cc <HCD_HC_OUT_IRQHandler+0x20e>
 800242a:	687a      	ldr	r2, [r7, #4]
 800242c:	697b      	ldr	r3, [r7, #20]
 800242e:	212c      	movs	r1, #44	; 0x2c
 8002430:	fb01 f303 	mul.w	r3, r1, r3
 8002434:	4413      	add	r3, r2
 8002436:	335c      	adds	r3, #92	; 0x5c
 8002438:	2200      	movs	r2, #0
 800243a:	601a      	str	r2, [r3, #0]
 800243c:	697b      	ldr	r3, [r7, #20]
 800243e:	015a      	lsls	r2, r3, #5
 8002440:	69bb      	ldr	r3, [r7, #24]
 8002442:	4413      	add	r3, r2
 8002444:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8002448:	689b      	ldr	r3, [r3, #8]
 800244a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800244e:	2b40      	cmp	r3, #64	; 0x40
 8002450:	d111      	bne.n	8002476 <HCD_HC_OUT_IRQHandler+0x1b8>
 8002452:	687a      	ldr	r2, [r7, #4]
 8002454:	697b      	ldr	r3, [r7, #20]
 8002456:	212c      	movs	r1, #44	; 0x2c
 8002458:	fb01 f303 	mul.w	r3, r1, r3
 800245c:	4413      	add	r3, r2
 800245e:	333d      	adds	r3, #61	; 0x3d
 8002460:	2201      	movs	r2, #1
 8002462:	701a      	strb	r2, [r3, #0]
 8002464:	697b      	ldr	r3, [r7, #20]
 8002466:	015a      	lsls	r2, r3, #5
 8002468:	69bb      	ldr	r3, [r7, #24]
 800246a:	4413      	add	r3, r2
 800246c:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8002470:	461a      	mov	r2, r3
 8002472:	2340      	movs	r3, #64	; 0x40
 8002474:	6093      	str	r3, [r2, #8]
 8002476:	697b      	ldr	r3, [r7, #20]
 8002478:	015a      	lsls	r2, r3, #5
 800247a:	69bb      	ldr	r3, [r7, #24]
 800247c:	4413      	add	r3, r2
 800247e:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8002482:	68db      	ldr	r3, [r3, #12]
 8002484:	697a      	ldr	r2, [r7, #20]
 8002486:	0151      	lsls	r1, r2, #5
 8002488:	69ba      	ldr	r2, [r7, #24]
 800248a:	440a      	add	r2, r1
 800248c:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
 8002490:	f043 0302 	orr.w	r3, r3, #2
 8002494:	60d3      	str	r3, [r2, #12]
 8002496:	687b      	ldr	r3, [r7, #4]
 8002498:	681b      	ldr	r3, [r3, #0]
 800249a:	697a      	ldr	r2, [r7, #20]
 800249c:	b2d2      	uxtb	r2, r2
 800249e:	4611      	mov	r1, r2
 80024a0:	4618      	mov	r0, r3
 80024a2:	f002 f98a 	bl	80047ba <USB_HC_Halt>
 80024a6:	697b      	ldr	r3, [r7, #20]
 80024a8:	015a      	lsls	r2, r3, #5
 80024aa:	69bb      	ldr	r3, [r7, #24]
 80024ac:	4413      	add	r3, r2
 80024ae:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 80024b2:	461a      	mov	r2, r3
 80024b4:	2301      	movs	r3, #1
 80024b6:	6093      	str	r3, [r2, #8]
 80024b8:	687a      	ldr	r2, [r7, #4]
 80024ba:	697b      	ldr	r3, [r7, #20]
 80024bc:	212c      	movs	r1, #44	; 0x2c
 80024be:	fb01 f303 	mul.w	r3, r1, r3
 80024c2:	4413      	add	r3, r2
 80024c4:	3361      	adds	r3, #97	; 0x61
 80024c6:	2201      	movs	r2, #1
 80024c8:	701a      	strb	r2, [r3, #0]
 80024ca:	e2f5      	b.n	8002ab8 <HCD_HC_OUT_IRQHandler+0x7fa>
 80024cc:	697b      	ldr	r3, [r7, #20]
 80024ce:	015a      	lsls	r2, r3, #5
 80024d0:	69bb      	ldr	r3, [r7, #24]
 80024d2:	4413      	add	r3, r2
 80024d4:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 80024d8:	689b      	ldr	r3, [r3, #8]
 80024da:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80024de:	2b40      	cmp	r3, #64	; 0x40
 80024e0:	d13c      	bne.n	800255c <HCD_HC_OUT_IRQHandler+0x29e>
 80024e2:	687a      	ldr	r2, [r7, #4]
 80024e4:	697b      	ldr	r3, [r7, #20]
 80024e6:	212c      	movs	r1, #44	; 0x2c
 80024e8:	fb01 f303 	mul.w	r3, r1, r3
 80024ec:	4413      	add	r3, r2
 80024ee:	3361      	adds	r3, #97	; 0x61
 80024f0:	2204      	movs	r2, #4
 80024f2:	701a      	strb	r2, [r3, #0]
 80024f4:	687a      	ldr	r2, [r7, #4]
 80024f6:	697b      	ldr	r3, [r7, #20]
 80024f8:	212c      	movs	r1, #44	; 0x2c
 80024fa:	fb01 f303 	mul.w	r3, r1, r3
 80024fe:	4413      	add	r3, r2
 8002500:	333d      	adds	r3, #61	; 0x3d
 8002502:	2201      	movs	r2, #1
 8002504:	701a      	strb	r2, [r3, #0]
 8002506:	687a      	ldr	r2, [r7, #4]
 8002508:	697b      	ldr	r3, [r7, #20]
 800250a:	212c      	movs	r1, #44	; 0x2c
 800250c:	fb01 f303 	mul.w	r3, r1, r3
 8002510:	4413      	add	r3, r2
 8002512:	335c      	adds	r3, #92	; 0x5c
 8002514:	2200      	movs	r2, #0
 8002516:	601a      	str	r2, [r3, #0]
 8002518:	697b      	ldr	r3, [r7, #20]
 800251a:	015a      	lsls	r2, r3, #5
 800251c:	69bb      	ldr	r3, [r7, #24]
 800251e:	4413      	add	r3, r2
 8002520:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8002524:	68db      	ldr	r3, [r3, #12]
 8002526:	697a      	ldr	r2, [r7, #20]
 8002528:	0151      	lsls	r1, r2, #5
 800252a:	69ba      	ldr	r2, [r7, #24]
 800252c:	440a      	add	r2, r1
 800252e:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
 8002532:	f043 0302 	orr.w	r3, r3, #2
 8002536:	60d3      	str	r3, [r2, #12]
 8002538:	687b      	ldr	r3, [r7, #4]
 800253a:	681b      	ldr	r3, [r3, #0]
 800253c:	697a      	ldr	r2, [r7, #20]
 800253e:	b2d2      	uxtb	r2, r2
 8002540:	4611      	mov	r1, r2
 8002542:	4618      	mov	r0, r3
 8002544:	f002 f939 	bl	80047ba <USB_HC_Halt>
 8002548:	697b      	ldr	r3, [r7, #20]
 800254a:	015a      	lsls	r2, r3, #5
 800254c:	69bb      	ldr	r3, [r7, #24]
 800254e:	4413      	add	r3, r2
 8002550:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8002554:	461a      	mov	r2, r3
 8002556:	2340      	movs	r3, #64	; 0x40
 8002558:	6093      	str	r3, [r2, #8]
 800255a:	e2ad      	b.n	8002ab8 <HCD_HC_OUT_IRQHandler+0x7fa>
 800255c:	697b      	ldr	r3, [r7, #20]
 800255e:	015a      	lsls	r2, r3, #5
 8002560:	69bb      	ldr	r3, [r7, #24]
 8002562:	4413      	add	r3, r2
 8002564:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8002568:	689b      	ldr	r3, [r3, #8]
 800256a:	f003 0308 	and.w	r3, r3, #8
 800256e:	2b08      	cmp	r3, #8
 8002570:	d12a      	bne.n	80025c8 <HCD_HC_OUT_IRQHandler+0x30a>
 8002572:	697b      	ldr	r3, [r7, #20]
 8002574:	015a      	lsls	r2, r3, #5
 8002576:	69bb      	ldr	r3, [r7, #24]
 8002578:	4413      	add	r3, r2
 800257a:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 800257e:	461a      	mov	r2, r3
 8002580:	2308      	movs	r3, #8
 8002582:	6093      	str	r3, [r2, #8]
 8002584:	697b      	ldr	r3, [r7, #20]
 8002586:	015a      	lsls	r2, r3, #5
 8002588:	69bb      	ldr	r3, [r7, #24]
 800258a:	4413      	add	r3, r2
 800258c:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8002590:	68db      	ldr	r3, [r3, #12]
 8002592:	697a      	ldr	r2, [r7, #20]
 8002594:	0151      	lsls	r1, r2, #5
 8002596:	69ba      	ldr	r2, [r7, #24]
 8002598:	440a      	add	r2, r1
 800259a:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
 800259e:	f043 0302 	orr.w	r3, r3, #2
 80025a2:	60d3      	str	r3, [r2, #12]
 80025a4:	687b      	ldr	r3, [r7, #4]
 80025a6:	681b      	ldr	r3, [r3, #0]
 80025a8:	697a      	ldr	r2, [r7, #20]
 80025aa:	b2d2      	uxtb	r2, r2
 80025ac:	4611      	mov	r1, r2
 80025ae:	4618      	mov	r0, r3
 80025b0:	f002 f903 	bl	80047ba <USB_HC_Halt>
 80025b4:	687a      	ldr	r2, [r7, #4]
 80025b6:	697b      	ldr	r3, [r7, #20]
 80025b8:	212c      	movs	r1, #44	; 0x2c
 80025ba:	fb01 f303 	mul.w	r3, r1, r3
 80025be:	4413      	add	r3, r2
 80025c0:	3361      	adds	r3, #97	; 0x61
 80025c2:	2205      	movs	r2, #5
 80025c4:	701a      	strb	r2, [r3, #0]
 80025c6:	e277      	b.n	8002ab8 <HCD_HC_OUT_IRQHandler+0x7fa>
 80025c8:	697b      	ldr	r3, [r7, #20]
 80025ca:	015a      	lsls	r2, r3, #5
 80025cc:	69bb      	ldr	r3, [r7, #24]
 80025ce:	4413      	add	r3, r2
 80025d0:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 80025d4:	689b      	ldr	r3, [r3, #8]
 80025d6:	f003 0310 	and.w	r3, r3, #16
 80025da:	2b10      	cmp	r3, #16
 80025dc:	d150      	bne.n	8002680 <HCD_HC_OUT_IRQHandler+0x3c2>
 80025de:	687a      	ldr	r2, [r7, #4]
 80025e0:	697b      	ldr	r3, [r7, #20]
 80025e2:	212c      	movs	r1, #44	; 0x2c
 80025e4:	fb01 f303 	mul.w	r3, r1, r3
 80025e8:	4413      	add	r3, r2
 80025ea:	335c      	adds	r3, #92	; 0x5c
 80025ec:	2200      	movs	r2, #0
 80025ee:	601a      	str	r2, [r3, #0]
 80025f0:	687a      	ldr	r2, [r7, #4]
 80025f2:	697b      	ldr	r3, [r7, #20]
 80025f4:	212c      	movs	r1, #44	; 0x2c
 80025f6:	fb01 f303 	mul.w	r3, r1, r3
 80025fa:	4413      	add	r3, r2
 80025fc:	3361      	adds	r3, #97	; 0x61
 80025fe:	2203      	movs	r2, #3
 8002600:	701a      	strb	r2, [r3, #0]
 8002602:	687a      	ldr	r2, [r7, #4]
 8002604:	697b      	ldr	r3, [r7, #20]
 8002606:	212c      	movs	r1, #44	; 0x2c
 8002608:	fb01 f303 	mul.w	r3, r1, r3
 800260c:	4413      	add	r3, r2
 800260e:	333d      	adds	r3, #61	; 0x3d
 8002610:	781b      	ldrb	r3, [r3, #0]
 8002612:	2b00      	cmp	r3, #0
 8002614:	d112      	bne.n	800263c <HCD_HC_OUT_IRQHandler+0x37e>
 8002616:	687a      	ldr	r2, [r7, #4]
 8002618:	697b      	ldr	r3, [r7, #20]
 800261a:	212c      	movs	r1, #44	; 0x2c
 800261c:	fb01 f303 	mul.w	r3, r1, r3
 8002620:	4413      	add	r3, r2
 8002622:	333c      	adds	r3, #60	; 0x3c
 8002624:	781b      	ldrb	r3, [r3, #0]
 8002626:	2b00      	cmp	r3, #0
 8002628:	d108      	bne.n	800263c <HCD_HC_OUT_IRQHandler+0x37e>
 800262a:	687a      	ldr	r2, [r7, #4]
 800262c:	697b      	ldr	r3, [r7, #20]
 800262e:	212c      	movs	r1, #44	; 0x2c
 8002630:	fb01 f303 	mul.w	r3, r1, r3
 8002634:	4413      	add	r3, r2
 8002636:	333d      	adds	r3, #61	; 0x3d
 8002638:	2201      	movs	r2, #1
 800263a:	701a      	strb	r2, [r3, #0]
 800263c:	697b      	ldr	r3, [r7, #20]
 800263e:	015a      	lsls	r2, r3, #5
 8002640:	69bb      	ldr	r3, [r7, #24]
 8002642:	4413      	add	r3, r2
 8002644:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8002648:	68db      	ldr	r3, [r3, #12]
 800264a:	697a      	ldr	r2, [r7, #20]
 800264c:	0151      	lsls	r1, r2, #5
 800264e:	69ba      	ldr	r2, [r7, #24]
 8002650:	440a      	add	r2, r1
 8002652:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
 8002656:	f043 0302 	orr.w	r3, r3, #2
 800265a:	60d3      	str	r3, [r2, #12]
 800265c:	687b      	ldr	r3, [r7, #4]
 800265e:	681b      	ldr	r3, [r3, #0]
 8002660:	697a      	ldr	r2, [r7, #20]
 8002662:	b2d2      	uxtb	r2, r2
 8002664:	4611      	mov	r1, r2
 8002666:	4618      	mov	r0, r3
 8002668:	f002 f8a7 	bl	80047ba <USB_HC_Halt>
 800266c:	697b      	ldr	r3, [r7, #20]
 800266e:	015a      	lsls	r2, r3, #5
 8002670:	69bb      	ldr	r3, [r7, #24]
 8002672:	4413      	add	r3, r2
 8002674:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8002678:	461a      	mov	r2, r3
 800267a:	2310      	movs	r3, #16
 800267c:	6093      	str	r3, [r2, #8]
 800267e:	e21b      	b.n	8002ab8 <HCD_HC_OUT_IRQHandler+0x7fa>
 8002680:	697b      	ldr	r3, [r7, #20]
 8002682:	015a      	lsls	r2, r3, #5
 8002684:	69bb      	ldr	r3, [r7, #24]
 8002686:	4413      	add	r3, r2
 8002688:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 800268c:	689b      	ldr	r3, [r3, #8]
 800268e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002692:	2b80      	cmp	r3, #128	; 0x80
 8002694:	d174      	bne.n	8002780 <HCD_HC_OUT_IRQHandler+0x4c2>
 8002696:	687b      	ldr	r3, [r7, #4]
 8002698:	691b      	ldr	r3, [r3, #16]
 800269a:	2b00      	cmp	r3, #0
 800269c:	d121      	bne.n	80026e2 <HCD_HC_OUT_IRQHandler+0x424>
 800269e:	687a      	ldr	r2, [r7, #4]
 80026a0:	697b      	ldr	r3, [r7, #20]
 80026a2:	212c      	movs	r1, #44	; 0x2c
 80026a4:	fb01 f303 	mul.w	r3, r1, r3
 80026a8:	4413      	add	r3, r2
 80026aa:	3361      	adds	r3, #97	; 0x61
 80026ac:	2206      	movs	r2, #6
 80026ae:	701a      	strb	r2, [r3, #0]
 80026b0:	697b      	ldr	r3, [r7, #20]
 80026b2:	015a      	lsls	r2, r3, #5
 80026b4:	69bb      	ldr	r3, [r7, #24]
 80026b6:	4413      	add	r3, r2
 80026b8:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 80026bc:	68db      	ldr	r3, [r3, #12]
 80026be:	697a      	ldr	r2, [r7, #20]
 80026c0:	0151      	lsls	r1, r2, #5
 80026c2:	69ba      	ldr	r2, [r7, #24]
 80026c4:	440a      	add	r2, r1
 80026c6:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
 80026ca:	f043 0302 	orr.w	r3, r3, #2
 80026ce:	60d3      	str	r3, [r2, #12]
 80026d0:	687b      	ldr	r3, [r7, #4]
 80026d2:	681b      	ldr	r3, [r3, #0]
 80026d4:	697a      	ldr	r2, [r7, #20]
 80026d6:	b2d2      	uxtb	r2, r2
 80026d8:	4611      	mov	r1, r2
 80026da:	4618      	mov	r0, r3
 80026dc:	f002 f86d 	bl	80047ba <USB_HC_Halt>
 80026e0:	e044      	b.n	800276c <HCD_HC_OUT_IRQHandler+0x4ae>
 80026e2:	687a      	ldr	r2, [r7, #4]
 80026e4:	697b      	ldr	r3, [r7, #20]
 80026e6:	212c      	movs	r1, #44	; 0x2c
 80026e8:	fb01 f303 	mul.w	r3, r1, r3
 80026ec:	4413      	add	r3, r2
 80026ee:	335c      	adds	r3, #92	; 0x5c
 80026f0:	681b      	ldr	r3, [r3, #0]
 80026f2:	1c5a      	adds	r2, r3, #1
 80026f4:	6879      	ldr	r1, [r7, #4]
 80026f6:	697b      	ldr	r3, [r7, #20]
 80026f8:	202c      	movs	r0, #44	; 0x2c
 80026fa:	fb00 f303 	mul.w	r3, r0, r3
 80026fe:	440b      	add	r3, r1
 8002700:	335c      	adds	r3, #92	; 0x5c
 8002702:	601a      	str	r2, [r3, #0]
 8002704:	687a      	ldr	r2, [r7, #4]
 8002706:	697b      	ldr	r3, [r7, #20]
 8002708:	212c      	movs	r1, #44	; 0x2c
 800270a:	fb01 f303 	mul.w	r3, r1, r3
 800270e:	4413      	add	r3, r2
 8002710:	335c      	adds	r3, #92	; 0x5c
 8002712:	681b      	ldr	r3, [r3, #0]
 8002714:	2b02      	cmp	r3, #2
 8002716:	d920      	bls.n	800275a <HCD_HC_OUT_IRQHandler+0x49c>
 8002718:	687a      	ldr	r2, [r7, #4]
 800271a:	697b      	ldr	r3, [r7, #20]
 800271c:	212c      	movs	r1, #44	; 0x2c
 800271e:	fb01 f303 	mul.w	r3, r1, r3
 8002722:	4413      	add	r3, r2
 8002724:	335c      	adds	r3, #92	; 0x5c
 8002726:	2200      	movs	r2, #0
 8002728:	601a      	str	r2, [r3, #0]
 800272a:	687a      	ldr	r2, [r7, #4]
 800272c:	697b      	ldr	r3, [r7, #20]
 800272e:	212c      	movs	r1, #44	; 0x2c
 8002730:	fb01 f303 	mul.w	r3, r1, r3
 8002734:	4413      	add	r3, r2
 8002736:	3360      	adds	r3, #96	; 0x60
 8002738:	2204      	movs	r2, #4
 800273a:	701a      	strb	r2, [r3, #0]
 800273c:	697b      	ldr	r3, [r7, #20]
 800273e:	b2d9      	uxtb	r1, r3
 8002740:	687a      	ldr	r2, [r7, #4]
 8002742:	697b      	ldr	r3, [r7, #20]
 8002744:	202c      	movs	r0, #44	; 0x2c
 8002746:	fb00 f303 	mul.w	r3, r0, r3
 800274a:	4413      	add	r3, r2
 800274c:	3360      	adds	r3, #96	; 0x60
 800274e:	781b      	ldrb	r3, [r3, #0]
 8002750:	461a      	mov	r2, r3
 8002752:	6878      	ldr	r0, [r7, #4]
 8002754:	f004 fe8c 	bl	8007470 <HAL_HCD_HC_NotifyURBChange_Callback>
 8002758:	e008      	b.n	800276c <HCD_HC_OUT_IRQHandler+0x4ae>
 800275a:	687a      	ldr	r2, [r7, #4]
 800275c:	697b      	ldr	r3, [r7, #20]
 800275e:	212c      	movs	r1, #44	; 0x2c
 8002760:	fb01 f303 	mul.w	r3, r1, r3
 8002764:	4413      	add	r3, r2
 8002766:	3360      	adds	r3, #96	; 0x60
 8002768:	2202      	movs	r2, #2
 800276a:	701a      	strb	r2, [r3, #0]
 800276c:	697b      	ldr	r3, [r7, #20]
 800276e:	015a      	lsls	r2, r3, #5
 8002770:	69bb      	ldr	r3, [r7, #24]
 8002772:	4413      	add	r3, r2
 8002774:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8002778:	461a      	mov	r2, r3
 800277a:	2380      	movs	r3, #128	; 0x80
 800277c:	6093      	str	r3, [r2, #8]
 800277e:	e19b      	b.n	8002ab8 <HCD_HC_OUT_IRQHandler+0x7fa>
 8002780:	697b      	ldr	r3, [r7, #20]
 8002782:	015a      	lsls	r2, r3, #5
 8002784:	69bb      	ldr	r3, [r7, #24]
 8002786:	4413      	add	r3, r2
 8002788:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 800278c:	689b      	ldr	r3, [r3, #8]
 800278e:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8002792:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002796:	d134      	bne.n	8002802 <HCD_HC_OUT_IRQHandler+0x544>
 8002798:	697b      	ldr	r3, [r7, #20]
 800279a:	015a      	lsls	r2, r3, #5
 800279c:	69bb      	ldr	r3, [r7, #24]
 800279e:	4413      	add	r3, r2
 80027a0:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 80027a4:	68db      	ldr	r3, [r3, #12]
 80027a6:	697a      	ldr	r2, [r7, #20]
 80027a8:	0151      	lsls	r1, r2, #5
 80027aa:	69ba      	ldr	r2, [r7, #24]
 80027ac:	440a      	add	r2, r1
 80027ae:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
 80027b2:	f043 0302 	orr.w	r3, r3, #2
 80027b6:	60d3      	str	r3, [r2, #12]
 80027b8:	687b      	ldr	r3, [r7, #4]
 80027ba:	681b      	ldr	r3, [r3, #0]
 80027bc:	697a      	ldr	r2, [r7, #20]
 80027be:	b2d2      	uxtb	r2, r2
 80027c0:	4611      	mov	r1, r2
 80027c2:	4618      	mov	r0, r3
 80027c4:	f001 fff9 	bl	80047ba <USB_HC_Halt>
 80027c8:	697b      	ldr	r3, [r7, #20]
 80027ca:	015a      	lsls	r2, r3, #5
 80027cc:	69bb      	ldr	r3, [r7, #24]
 80027ce:	4413      	add	r3, r2
 80027d0:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 80027d4:	461a      	mov	r2, r3
 80027d6:	2310      	movs	r3, #16
 80027d8:	6093      	str	r3, [r2, #8]
 80027da:	697b      	ldr	r3, [r7, #20]
 80027dc:	015a      	lsls	r2, r3, #5
 80027de:	69bb      	ldr	r3, [r7, #24]
 80027e0:	4413      	add	r3, r2
 80027e2:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 80027e6:	461a      	mov	r2, r3
 80027e8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80027ec:	6093      	str	r3, [r2, #8]
 80027ee:	687a      	ldr	r2, [r7, #4]
 80027f0:	697b      	ldr	r3, [r7, #20]
 80027f2:	212c      	movs	r1, #44	; 0x2c
 80027f4:	fb01 f303 	mul.w	r3, r1, r3
 80027f8:	4413      	add	r3, r2
 80027fa:	3361      	adds	r3, #97	; 0x61
 80027fc:	2208      	movs	r2, #8
 80027fe:	701a      	strb	r2, [r3, #0]
 8002800:	e15a      	b.n	8002ab8 <HCD_HC_OUT_IRQHandler+0x7fa>
 8002802:	697b      	ldr	r3, [r7, #20]
 8002804:	015a      	lsls	r2, r3, #5
 8002806:	69bb      	ldr	r3, [r7, #24]
 8002808:	4413      	add	r3, r2
 800280a:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 800280e:	689b      	ldr	r3, [r3, #8]
 8002810:	f003 0302 	and.w	r3, r3, #2
 8002814:	2b02      	cmp	r3, #2
 8002816:	f040 814f 	bne.w	8002ab8 <HCD_HC_OUT_IRQHandler+0x7fa>
 800281a:	697b      	ldr	r3, [r7, #20]
 800281c:	015a      	lsls	r2, r3, #5
 800281e:	69bb      	ldr	r3, [r7, #24]
 8002820:	4413      	add	r3, r2
 8002822:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8002826:	68db      	ldr	r3, [r3, #12]
 8002828:	697a      	ldr	r2, [r7, #20]
 800282a:	0151      	lsls	r1, r2, #5
 800282c:	69ba      	ldr	r2, [r7, #24]
 800282e:	440a      	add	r2, r1
 8002830:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
 8002834:	f023 0302 	bic.w	r3, r3, #2
 8002838:	60d3      	str	r3, [r2, #12]
 800283a:	687a      	ldr	r2, [r7, #4]
 800283c:	697b      	ldr	r3, [r7, #20]
 800283e:	212c      	movs	r1, #44	; 0x2c
 8002840:	fb01 f303 	mul.w	r3, r1, r3
 8002844:	4413      	add	r3, r2
 8002846:	3361      	adds	r3, #97	; 0x61
 8002848:	781b      	ldrb	r3, [r3, #0]
 800284a:	2b01      	cmp	r3, #1
 800284c:	d17d      	bne.n	800294a <HCD_HC_OUT_IRQHandler+0x68c>
 800284e:	687a      	ldr	r2, [r7, #4]
 8002850:	697b      	ldr	r3, [r7, #20]
 8002852:	212c      	movs	r1, #44	; 0x2c
 8002854:	fb01 f303 	mul.w	r3, r1, r3
 8002858:	4413      	add	r3, r2
 800285a:	3360      	adds	r3, #96	; 0x60
 800285c:	2201      	movs	r2, #1
 800285e:	701a      	strb	r2, [r3, #0]
 8002860:	687a      	ldr	r2, [r7, #4]
 8002862:	697b      	ldr	r3, [r7, #20]
 8002864:	212c      	movs	r1, #44	; 0x2c
 8002866:	fb01 f303 	mul.w	r3, r1, r3
 800286a:	4413      	add	r3, r2
 800286c:	333f      	adds	r3, #63	; 0x3f
 800286e:	781b      	ldrb	r3, [r3, #0]
 8002870:	2b02      	cmp	r3, #2
 8002872:	d00a      	beq.n	800288a <HCD_HC_OUT_IRQHandler+0x5cc>
 8002874:	687a      	ldr	r2, [r7, #4]
 8002876:	697b      	ldr	r3, [r7, #20]
 8002878:	212c      	movs	r1, #44	; 0x2c
 800287a:	fb01 f303 	mul.w	r3, r1, r3
 800287e:	4413      	add	r3, r2
 8002880:	333f      	adds	r3, #63	; 0x3f
 8002882:	781b      	ldrb	r3, [r3, #0]
 8002884:	2b03      	cmp	r3, #3
 8002886:	f040 8100 	bne.w	8002a8a <HCD_HC_OUT_IRQHandler+0x7cc>
 800288a:	687b      	ldr	r3, [r7, #4]
 800288c:	691b      	ldr	r3, [r3, #16]
 800288e:	2b00      	cmp	r3, #0
 8002890:	d113      	bne.n	80028ba <HCD_HC_OUT_IRQHandler+0x5fc>
 8002892:	687a      	ldr	r2, [r7, #4]
 8002894:	697b      	ldr	r3, [r7, #20]
 8002896:	212c      	movs	r1, #44	; 0x2c
 8002898:	fb01 f303 	mul.w	r3, r1, r3
 800289c:	4413      	add	r3, r2
 800289e:	3355      	adds	r3, #85	; 0x55
 80028a0:	781b      	ldrb	r3, [r3, #0]
 80028a2:	f083 0301 	eor.w	r3, r3, #1
 80028a6:	b2d8      	uxtb	r0, r3
 80028a8:	687a      	ldr	r2, [r7, #4]
 80028aa:	697b      	ldr	r3, [r7, #20]
 80028ac:	212c      	movs	r1, #44	; 0x2c
 80028ae:	fb01 f303 	mul.w	r3, r1, r3
 80028b2:	4413      	add	r3, r2
 80028b4:	3355      	adds	r3, #85	; 0x55
 80028b6:	4602      	mov	r2, r0
 80028b8:	701a      	strb	r2, [r3, #0]
 80028ba:	687b      	ldr	r3, [r7, #4]
 80028bc:	691b      	ldr	r3, [r3, #16]
 80028be:	2b01      	cmp	r3, #1
 80028c0:	f040 80e3 	bne.w	8002a8a <HCD_HC_OUT_IRQHandler+0x7cc>
 80028c4:	687a      	ldr	r2, [r7, #4]
 80028c6:	697b      	ldr	r3, [r7, #20]
 80028c8:	212c      	movs	r1, #44	; 0x2c
 80028ca:	fb01 f303 	mul.w	r3, r1, r3
 80028ce:	4413      	add	r3, r2
 80028d0:	334c      	adds	r3, #76	; 0x4c
 80028d2:	681b      	ldr	r3, [r3, #0]
 80028d4:	2b00      	cmp	r3, #0
 80028d6:	f000 80d8 	beq.w	8002a8a <HCD_HC_OUT_IRQHandler+0x7cc>
 80028da:	687a      	ldr	r2, [r7, #4]
 80028dc:	697b      	ldr	r3, [r7, #20]
 80028de:	212c      	movs	r1, #44	; 0x2c
 80028e0:	fb01 f303 	mul.w	r3, r1, r3
 80028e4:	4413      	add	r3, r2
 80028e6:	334c      	adds	r3, #76	; 0x4c
 80028e8:	681b      	ldr	r3, [r3, #0]
 80028ea:	6879      	ldr	r1, [r7, #4]
 80028ec:	697a      	ldr	r2, [r7, #20]
 80028ee:	202c      	movs	r0, #44	; 0x2c
 80028f0:	fb00 f202 	mul.w	r2, r0, r2
 80028f4:	440a      	add	r2, r1
 80028f6:	3240      	adds	r2, #64	; 0x40
 80028f8:	8812      	ldrh	r2, [r2, #0]
 80028fa:	4413      	add	r3, r2
 80028fc:	3b01      	subs	r3, #1
 80028fe:	6879      	ldr	r1, [r7, #4]
 8002900:	697a      	ldr	r2, [r7, #20]
 8002902:	202c      	movs	r0, #44	; 0x2c
 8002904:	fb00 f202 	mul.w	r2, r0, r2
 8002908:	440a      	add	r2, r1
 800290a:	3240      	adds	r2, #64	; 0x40
 800290c:	8812      	ldrh	r2, [r2, #0]
 800290e:	fbb3 f3f2 	udiv	r3, r3, r2
 8002912:	60fb      	str	r3, [r7, #12]
 8002914:	68fb      	ldr	r3, [r7, #12]
 8002916:	f003 0301 	and.w	r3, r3, #1
 800291a:	2b00      	cmp	r3, #0
 800291c:	f000 80b5 	beq.w	8002a8a <HCD_HC_OUT_IRQHandler+0x7cc>
 8002920:	687a      	ldr	r2, [r7, #4]
 8002922:	697b      	ldr	r3, [r7, #20]
 8002924:	212c      	movs	r1, #44	; 0x2c
 8002926:	fb01 f303 	mul.w	r3, r1, r3
 800292a:	4413      	add	r3, r2
 800292c:	3355      	adds	r3, #85	; 0x55
 800292e:	781b      	ldrb	r3, [r3, #0]
 8002930:	f083 0301 	eor.w	r3, r3, #1
 8002934:	b2d8      	uxtb	r0, r3
 8002936:	687a      	ldr	r2, [r7, #4]
 8002938:	697b      	ldr	r3, [r7, #20]
 800293a:	212c      	movs	r1, #44	; 0x2c
 800293c:	fb01 f303 	mul.w	r3, r1, r3
 8002940:	4413      	add	r3, r2
 8002942:	3355      	adds	r3, #85	; 0x55
 8002944:	4602      	mov	r2, r0
 8002946:	701a      	strb	r2, [r3, #0]
 8002948:	e09f      	b.n	8002a8a <HCD_HC_OUT_IRQHandler+0x7cc>
 800294a:	687a      	ldr	r2, [r7, #4]
 800294c:	697b      	ldr	r3, [r7, #20]
 800294e:	212c      	movs	r1, #44	; 0x2c
 8002950:	fb01 f303 	mul.w	r3, r1, r3
 8002954:	4413      	add	r3, r2
 8002956:	3361      	adds	r3, #97	; 0x61
 8002958:	781b      	ldrb	r3, [r3, #0]
 800295a:	2b03      	cmp	r3, #3
 800295c:	d109      	bne.n	8002972 <HCD_HC_OUT_IRQHandler+0x6b4>
 800295e:	687a      	ldr	r2, [r7, #4]
 8002960:	697b      	ldr	r3, [r7, #20]
 8002962:	212c      	movs	r1, #44	; 0x2c
 8002964:	fb01 f303 	mul.w	r3, r1, r3
 8002968:	4413      	add	r3, r2
 800296a:	3360      	adds	r3, #96	; 0x60
 800296c:	2202      	movs	r2, #2
 800296e:	701a      	strb	r2, [r3, #0]
 8002970:	e08b      	b.n	8002a8a <HCD_HC_OUT_IRQHandler+0x7cc>
 8002972:	687a      	ldr	r2, [r7, #4]
 8002974:	697b      	ldr	r3, [r7, #20]
 8002976:	212c      	movs	r1, #44	; 0x2c
 8002978:	fb01 f303 	mul.w	r3, r1, r3
 800297c:	4413      	add	r3, r2
 800297e:	3361      	adds	r3, #97	; 0x61
 8002980:	781b      	ldrb	r3, [r3, #0]
 8002982:	2b04      	cmp	r3, #4
 8002984:	d109      	bne.n	800299a <HCD_HC_OUT_IRQHandler+0x6dc>
 8002986:	687a      	ldr	r2, [r7, #4]
 8002988:	697b      	ldr	r3, [r7, #20]
 800298a:	212c      	movs	r1, #44	; 0x2c
 800298c:	fb01 f303 	mul.w	r3, r1, r3
 8002990:	4413      	add	r3, r2
 8002992:	3360      	adds	r3, #96	; 0x60
 8002994:	2202      	movs	r2, #2
 8002996:	701a      	strb	r2, [r3, #0]
 8002998:	e077      	b.n	8002a8a <HCD_HC_OUT_IRQHandler+0x7cc>
 800299a:	687a      	ldr	r2, [r7, #4]
 800299c:	697b      	ldr	r3, [r7, #20]
 800299e:	212c      	movs	r1, #44	; 0x2c
 80029a0:	fb01 f303 	mul.w	r3, r1, r3
 80029a4:	4413      	add	r3, r2
 80029a6:	3361      	adds	r3, #97	; 0x61
 80029a8:	781b      	ldrb	r3, [r3, #0]
 80029aa:	2b05      	cmp	r3, #5
 80029ac:	d109      	bne.n	80029c2 <HCD_HC_OUT_IRQHandler+0x704>
 80029ae:	687a      	ldr	r2, [r7, #4]
 80029b0:	697b      	ldr	r3, [r7, #20]
 80029b2:	212c      	movs	r1, #44	; 0x2c
 80029b4:	fb01 f303 	mul.w	r3, r1, r3
 80029b8:	4413      	add	r3, r2
 80029ba:	3360      	adds	r3, #96	; 0x60
 80029bc:	2205      	movs	r2, #5
 80029be:	701a      	strb	r2, [r3, #0]
 80029c0:	e063      	b.n	8002a8a <HCD_HC_OUT_IRQHandler+0x7cc>
 80029c2:	687a      	ldr	r2, [r7, #4]
 80029c4:	697b      	ldr	r3, [r7, #20]
 80029c6:	212c      	movs	r1, #44	; 0x2c
 80029c8:	fb01 f303 	mul.w	r3, r1, r3
 80029cc:	4413      	add	r3, r2
 80029ce:	3361      	adds	r3, #97	; 0x61
 80029d0:	781b      	ldrb	r3, [r3, #0]
 80029d2:	2b06      	cmp	r3, #6
 80029d4:	d009      	beq.n	80029ea <HCD_HC_OUT_IRQHandler+0x72c>
 80029d6:	687a      	ldr	r2, [r7, #4]
 80029d8:	697b      	ldr	r3, [r7, #20]
 80029da:	212c      	movs	r1, #44	; 0x2c
 80029dc:	fb01 f303 	mul.w	r3, r1, r3
 80029e0:	4413      	add	r3, r2
 80029e2:	3361      	adds	r3, #97	; 0x61
 80029e4:	781b      	ldrb	r3, [r3, #0]
 80029e6:	2b08      	cmp	r3, #8
 80029e8:	d14f      	bne.n	8002a8a <HCD_HC_OUT_IRQHandler+0x7cc>
 80029ea:	687a      	ldr	r2, [r7, #4]
 80029ec:	697b      	ldr	r3, [r7, #20]
 80029ee:	212c      	movs	r1, #44	; 0x2c
 80029f0:	fb01 f303 	mul.w	r3, r1, r3
 80029f4:	4413      	add	r3, r2
 80029f6:	335c      	adds	r3, #92	; 0x5c
 80029f8:	681b      	ldr	r3, [r3, #0]
 80029fa:	1c5a      	adds	r2, r3, #1
 80029fc:	6879      	ldr	r1, [r7, #4]
 80029fe:	697b      	ldr	r3, [r7, #20]
 8002a00:	202c      	movs	r0, #44	; 0x2c
 8002a02:	fb00 f303 	mul.w	r3, r0, r3
 8002a06:	440b      	add	r3, r1
 8002a08:	335c      	adds	r3, #92	; 0x5c
 8002a0a:	601a      	str	r2, [r3, #0]
 8002a0c:	687a      	ldr	r2, [r7, #4]
 8002a0e:	697b      	ldr	r3, [r7, #20]
 8002a10:	212c      	movs	r1, #44	; 0x2c
 8002a12:	fb01 f303 	mul.w	r3, r1, r3
 8002a16:	4413      	add	r3, r2
 8002a18:	335c      	adds	r3, #92	; 0x5c
 8002a1a:	681b      	ldr	r3, [r3, #0]
 8002a1c:	2b02      	cmp	r3, #2
 8002a1e:	d912      	bls.n	8002a46 <HCD_HC_OUT_IRQHandler+0x788>
 8002a20:	687a      	ldr	r2, [r7, #4]
 8002a22:	697b      	ldr	r3, [r7, #20]
 8002a24:	212c      	movs	r1, #44	; 0x2c
 8002a26:	fb01 f303 	mul.w	r3, r1, r3
 8002a2a:	4413      	add	r3, r2
 8002a2c:	335c      	adds	r3, #92	; 0x5c
 8002a2e:	2200      	movs	r2, #0
 8002a30:	601a      	str	r2, [r3, #0]
 8002a32:	687a      	ldr	r2, [r7, #4]
 8002a34:	697b      	ldr	r3, [r7, #20]
 8002a36:	212c      	movs	r1, #44	; 0x2c
 8002a38:	fb01 f303 	mul.w	r3, r1, r3
 8002a3c:	4413      	add	r3, r2
 8002a3e:	3360      	adds	r3, #96	; 0x60
 8002a40:	2204      	movs	r2, #4
 8002a42:	701a      	strb	r2, [r3, #0]
 8002a44:	e021      	b.n	8002a8a <HCD_HC_OUT_IRQHandler+0x7cc>
 8002a46:	687a      	ldr	r2, [r7, #4]
 8002a48:	697b      	ldr	r3, [r7, #20]
 8002a4a:	212c      	movs	r1, #44	; 0x2c
 8002a4c:	fb01 f303 	mul.w	r3, r1, r3
 8002a50:	4413      	add	r3, r2
 8002a52:	3360      	adds	r3, #96	; 0x60
 8002a54:	2202      	movs	r2, #2
 8002a56:	701a      	strb	r2, [r3, #0]
 8002a58:	697b      	ldr	r3, [r7, #20]
 8002a5a:	015a      	lsls	r2, r3, #5
 8002a5c:	69bb      	ldr	r3, [r7, #24]
 8002a5e:	4413      	add	r3, r2
 8002a60:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8002a64:	681b      	ldr	r3, [r3, #0]
 8002a66:	613b      	str	r3, [r7, #16]
 8002a68:	693b      	ldr	r3, [r7, #16]
 8002a6a:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 8002a6e:	613b      	str	r3, [r7, #16]
 8002a70:	693b      	ldr	r3, [r7, #16]
 8002a72:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8002a76:	613b      	str	r3, [r7, #16]
 8002a78:	697b      	ldr	r3, [r7, #20]
 8002a7a:	015a      	lsls	r2, r3, #5
 8002a7c:	69bb      	ldr	r3, [r7, #24]
 8002a7e:	4413      	add	r3, r2
 8002a80:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8002a84:	461a      	mov	r2, r3
 8002a86:	693b      	ldr	r3, [r7, #16]
 8002a88:	6013      	str	r3, [r2, #0]
 8002a8a:	697b      	ldr	r3, [r7, #20]
 8002a8c:	015a      	lsls	r2, r3, #5
 8002a8e:	69bb      	ldr	r3, [r7, #24]
 8002a90:	4413      	add	r3, r2
 8002a92:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8002a96:	461a      	mov	r2, r3
 8002a98:	2302      	movs	r3, #2
 8002a9a:	6093      	str	r3, [r2, #8]
 8002a9c:	697b      	ldr	r3, [r7, #20]
 8002a9e:	b2d9      	uxtb	r1, r3
 8002aa0:	687a      	ldr	r2, [r7, #4]
 8002aa2:	697b      	ldr	r3, [r7, #20]
 8002aa4:	202c      	movs	r0, #44	; 0x2c
 8002aa6:	fb00 f303 	mul.w	r3, r0, r3
 8002aaa:	4413      	add	r3, r2
 8002aac:	3360      	adds	r3, #96	; 0x60
 8002aae:	781b      	ldrb	r3, [r3, #0]
 8002ab0:	461a      	mov	r2, r3
 8002ab2:	6878      	ldr	r0, [r7, #4]
 8002ab4:	f004 fcdc 	bl	8007470 <HAL_HCD_HC_NotifyURBChange_Callback>
 8002ab8:	bf00      	nop
 8002aba:	3720      	adds	r7, #32
 8002abc:	46bd      	mov	sp, r7
 8002abe:	bd80      	pop	{r7, pc}

08002ac0 <HCD_RXQLVL_IRQHandler>:
 8002ac0:	b580      	push	{r7, lr}
 8002ac2:	b08a      	sub	sp, #40	; 0x28
 8002ac4:	af00      	add	r7, sp, #0
 8002ac6:	6078      	str	r0, [r7, #4]
 8002ac8:	687b      	ldr	r3, [r7, #4]
 8002aca:	681b      	ldr	r3, [r3, #0]
 8002acc:	627b      	str	r3, [r7, #36]	; 0x24
 8002ace:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002ad0:	623b      	str	r3, [r7, #32]
 8002ad2:	687b      	ldr	r3, [r7, #4]
 8002ad4:	681b      	ldr	r3, [r3, #0]
 8002ad6:	6a1b      	ldr	r3, [r3, #32]
 8002ad8:	61fb      	str	r3, [r7, #28]
 8002ada:	69fb      	ldr	r3, [r7, #28]
 8002adc:	f003 030f 	and.w	r3, r3, #15
 8002ae0:	61bb      	str	r3, [r7, #24]
 8002ae2:	69fb      	ldr	r3, [r7, #28]
 8002ae4:	0c5b      	lsrs	r3, r3, #17
 8002ae6:	f003 030f 	and.w	r3, r3, #15
 8002aea:	617b      	str	r3, [r7, #20]
 8002aec:	69fb      	ldr	r3, [r7, #28]
 8002aee:	091b      	lsrs	r3, r3, #4
 8002af0:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8002af4:	613b      	str	r3, [r7, #16]
 8002af6:	697b      	ldr	r3, [r7, #20]
 8002af8:	2b02      	cmp	r3, #2
 8002afa:	d004      	beq.n	8002b06 <HCD_RXQLVL_IRQHandler+0x46>
 8002afc:	697b      	ldr	r3, [r7, #20]
 8002afe:	2b05      	cmp	r3, #5
 8002b00:	f000 80a9 	beq.w	8002c56 <HCD_RXQLVL_IRQHandler+0x196>
 8002b04:	e0aa      	b.n	8002c5c <HCD_RXQLVL_IRQHandler+0x19c>
 8002b06:	693b      	ldr	r3, [r7, #16]
 8002b08:	2b00      	cmp	r3, #0
 8002b0a:	f000 80a6 	beq.w	8002c5a <HCD_RXQLVL_IRQHandler+0x19a>
 8002b0e:	687a      	ldr	r2, [r7, #4]
 8002b10:	69bb      	ldr	r3, [r7, #24]
 8002b12:	212c      	movs	r1, #44	; 0x2c
 8002b14:	fb01 f303 	mul.w	r3, r1, r3
 8002b18:	4413      	add	r3, r2
 8002b1a:	3344      	adds	r3, #68	; 0x44
 8002b1c:	681b      	ldr	r3, [r3, #0]
 8002b1e:	2b00      	cmp	r3, #0
 8002b20:	f000 809b 	beq.w	8002c5a <HCD_RXQLVL_IRQHandler+0x19a>
 8002b24:	687a      	ldr	r2, [r7, #4]
 8002b26:	69bb      	ldr	r3, [r7, #24]
 8002b28:	212c      	movs	r1, #44	; 0x2c
 8002b2a:	fb01 f303 	mul.w	r3, r1, r3
 8002b2e:	4413      	add	r3, r2
 8002b30:	3350      	adds	r3, #80	; 0x50
 8002b32:	681a      	ldr	r2, [r3, #0]
 8002b34:	693b      	ldr	r3, [r7, #16]
 8002b36:	441a      	add	r2, r3
 8002b38:	6879      	ldr	r1, [r7, #4]
 8002b3a:	69bb      	ldr	r3, [r7, #24]
 8002b3c:	202c      	movs	r0, #44	; 0x2c
 8002b3e:	fb00 f303 	mul.w	r3, r0, r3
 8002b42:	440b      	add	r3, r1
 8002b44:	334c      	adds	r3, #76	; 0x4c
 8002b46:	681b      	ldr	r3, [r3, #0]
 8002b48:	429a      	cmp	r2, r3
 8002b4a:	d87a      	bhi.n	8002c42 <HCD_RXQLVL_IRQHandler+0x182>
 8002b4c:	687b      	ldr	r3, [r7, #4]
 8002b4e:	6818      	ldr	r0, [r3, #0]
 8002b50:	687a      	ldr	r2, [r7, #4]
 8002b52:	69bb      	ldr	r3, [r7, #24]
 8002b54:	212c      	movs	r1, #44	; 0x2c
 8002b56:	fb01 f303 	mul.w	r3, r1, r3
 8002b5a:	4413      	add	r3, r2
 8002b5c:	3344      	adds	r3, #68	; 0x44
 8002b5e:	681b      	ldr	r3, [r3, #0]
 8002b60:	693a      	ldr	r2, [r7, #16]
 8002b62:	b292      	uxth	r2, r2
 8002b64:	4619      	mov	r1, r3
 8002b66:	f001 f9a1 	bl	8003eac <USB_ReadPacket>
 8002b6a:	687a      	ldr	r2, [r7, #4]
 8002b6c:	69bb      	ldr	r3, [r7, #24]
 8002b6e:	212c      	movs	r1, #44	; 0x2c
 8002b70:	fb01 f303 	mul.w	r3, r1, r3
 8002b74:	4413      	add	r3, r2
 8002b76:	3344      	adds	r3, #68	; 0x44
 8002b78:	681a      	ldr	r2, [r3, #0]
 8002b7a:	693b      	ldr	r3, [r7, #16]
 8002b7c:	441a      	add	r2, r3
 8002b7e:	6879      	ldr	r1, [r7, #4]
 8002b80:	69bb      	ldr	r3, [r7, #24]
 8002b82:	202c      	movs	r0, #44	; 0x2c
 8002b84:	fb00 f303 	mul.w	r3, r0, r3
 8002b88:	440b      	add	r3, r1
 8002b8a:	3344      	adds	r3, #68	; 0x44
 8002b8c:	601a      	str	r2, [r3, #0]
 8002b8e:	687a      	ldr	r2, [r7, #4]
 8002b90:	69bb      	ldr	r3, [r7, #24]
 8002b92:	212c      	movs	r1, #44	; 0x2c
 8002b94:	fb01 f303 	mul.w	r3, r1, r3
 8002b98:	4413      	add	r3, r2
 8002b9a:	3350      	adds	r3, #80	; 0x50
 8002b9c:	681a      	ldr	r2, [r3, #0]
 8002b9e:	693b      	ldr	r3, [r7, #16]
 8002ba0:	441a      	add	r2, r3
 8002ba2:	6879      	ldr	r1, [r7, #4]
 8002ba4:	69bb      	ldr	r3, [r7, #24]
 8002ba6:	202c      	movs	r0, #44	; 0x2c
 8002ba8:	fb00 f303 	mul.w	r3, r0, r3
 8002bac:	440b      	add	r3, r1
 8002bae:	3350      	adds	r3, #80	; 0x50
 8002bb0:	601a      	str	r2, [r3, #0]
 8002bb2:	69bb      	ldr	r3, [r7, #24]
 8002bb4:	015a      	lsls	r2, r3, #5
 8002bb6:	6a3b      	ldr	r3, [r7, #32]
 8002bb8:	4413      	add	r3, r2
 8002bba:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8002bbe:	691b      	ldr	r3, [r3, #16]
 8002bc0:	0cdb      	lsrs	r3, r3, #19
 8002bc2:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8002bc6:	60fb      	str	r3, [r7, #12]
 8002bc8:	687a      	ldr	r2, [r7, #4]
 8002bca:	69bb      	ldr	r3, [r7, #24]
 8002bcc:	212c      	movs	r1, #44	; 0x2c
 8002bce:	fb01 f303 	mul.w	r3, r1, r3
 8002bd2:	4413      	add	r3, r2
 8002bd4:	3340      	adds	r3, #64	; 0x40
 8002bd6:	881b      	ldrh	r3, [r3, #0]
 8002bd8:	461a      	mov	r2, r3
 8002bda:	693b      	ldr	r3, [r7, #16]
 8002bdc:	4293      	cmp	r3, r2
 8002bde:	d13c      	bne.n	8002c5a <HCD_RXQLVL_IRQHandler+0x19a>
 8002be0:	68fb      	ldr	r3, [r7, #12]
 8002be2:	2b00      	cmp	r3, #0
 8002be4:	d039      	beq.n	8002c5a <HCD_RXQLVL_IRQHandler+0x19a>
 8002be6:	69bb      	ldr	r3, [r7, #24]
 8002be8:	015a      	lsls	r2, r3, #5
 8002bea:	6a3b      	ldr	r3, [r7, #32]
 8002bec:	4413      	add	r3, r2
 8002bee:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8002bf2:	681b      	ldr	r3, [r3, #0]
 8002bf4:	60bb      	str	r3, [r7, #8]
 8002bf6:	68bb      	ldr	r3, [r7, #8]
 8002bf8:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 8002bfc:	60bb      	str	r3, [r7, #8]
 8002bfe:	68bb      	ldr	r3, [r7, #8]
 8002c00:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8002c04:	60bb      	str	r3, [r7, #8]
 8002c06:	69bb      	ldr	r3, [r7, #24]
 8002c08:	015a      	lsls	r2, r3, #5
 8002c0a:	6a3b      	ldr	r3, [r7, #32]
 8002c0c:	4413      	add	r3, r2
 8002c0e:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8002c12:	461a      	mov	r2, r3
 8002c14:	68bb      	ldr	r3, [r7, #8]
 8002c16:	6013      	str	r3, [r2, #0]
 8002c18:	687a      	ldr	r2, [r7, #4]
 8002c1a:	69bb      	ldr	r3, [r7, #24]
 8002c1c:	212c      	movs	r1, #44	; 0x2c
 8002c1e:	fb01 f303 	mul.w	r3, r1, r3
 8002c22:	4413      	add	r3, r2
 8002c24:	3354      	adds	r3, #84	; 0x54
 8002c26:	781b      	ldrb	r3, [r3, #0]
 8002c28:	f083 0301 	eor.w	r3, r3, #1
 8002c2c:	b2d8      	uxtb	r0, r3
 8002c2e:	687a      	ldr	r2, [r7, #4]
 8002c30:	69bb      	ldr	r3, [r7, #24]
 8002c32:	212c      	movs	r1, #44	; 0x2c
 8002c34:	fb01 f303 	mul.w	r3, r1, r3
 8002c38:	4413      	add	r3, r2
 8002c3a:	3354      	adds	r3, #84	; 0x54
 8002c3c:	4602      	mov	r2, r0
 8002c3e:	701a      	strb	r2, [r3, #0]
 8002c40:	e00b      	b.n	8002c5a <HCD_RXQLVL_IRQHandler+0x19a>
 8002c42:	687a      	ldr	r2, [r7, #4]
 8002c44:	69bb      	ldr	r3, [r7, #24]
 8002c46:	212c      	movs	r1, #44	; 0x2c
 8002c48:	fb01 f303 	mul.w	r3, r1, r3
 8002c4c:	4413      	add	r3, r2
 8002c4e:	3360      	adds	r3, #96	; 0x60
 8002c50:	2204      	movs	r2, #4
 8002c52:	701a      	strb	r2, [r3, #0]
 8002c54:	e001      	b.n	8002c5a <HCD_RXQLVL_IRQHandler+0x19a>
 8002c56:	bf00      	nop
 8002c58:	e000      	b.n	8002c5c <HCD_RXQLVL_IRQHandler+0x19c>
 8002c5a:	bf00      	nop
 8002c5c:	bf00      	nop
 8002c5e:	3728      	adds	r7, #40	; 0x28
 8002c60:	46bd      	mov	sp, r7
 8002c62:	bd80      	pop	{r7, pc}

08002c64 <HCD_Port_IRQHandler>:
 8002c64:	b580      	push	{r7, lr}
 8002c66:	b086      	sub	sp, #24
 8002c68:	af00      	add	r7, sp, #0
 8002c6a:	6078      	str	r0, [r7, #4]
 8002c6c:	687b      	ldr	r3, [r7, #4]
 8002c6e:	681b      	ldr	r3, [r3, #0]
 8002c70:	617b      	str	r3, [r7, #20]
 8002c72:	697b      	ldr	r3, [r7, #20]
 8002c74:	613b      	str	r3, [r7, #16]
 8002c76:	693b      	ldr	r3, [r7, #16]
 8002c78:	f503 6388 	add.w	r3, r3, #1088	; 0x440
 8002c7c:	681b      	ldr	r3, [r3, #0]
 8002c7e:	60fb      	str	r3, [r7, #12]
 8002c80:	693b      	ldr	r3, [r7, #16]
 8002c82:	f503 6388 	add.w	r3, r3, #1088	; 0x440
 8002c86:	681b      	ldr	r3, [r3, #0]
 8002c88:	60bb      	str	r3, [r7, #8]
 8002c8a:	68bb      	ldr	r3, [r7, #8]
 8002c8c:	f023 032e 	bic.w	r3, r3, #46	; 0x2e
 8002c90:	60bb      	str	r3, [r7, #8]
 8002c92:	68fb      	ldr	r3, [r7, #12]
 8002c94:	f003 0302 	and.w	r3, r3, #2
 8002c98:	2b02      	cmp	r3, #2
 8002c9a:	d10b      	bne.n	8002cb4 <HCD_Port_IRQHandler+0x50>
 8002c9c:	68fb      	ldr	r3, [r7, #12]
 8002c9e:	f003 0301 	and.w	r3, r3, #1
 8002ca2:	2b01      	cmp	r3, #1
 8002ca4:	d102      	bne.n	8002cac <HCD_Port_IRQHandler+0x48>
 8002ca6:	6878      	ldr	r0, [r7, #4]
 8002ca8:	f004 fbc6 	bl	8007438 <HAL_HCD_Connect_Callback>
 8002cac:	68bb      	ldr	r3, [r7, #8]
 8002cae:	f043 0302 	orr.w	r3, r3, #2
 8002cb2:	60bb      	str	r3, [r7, #8]
 8002cb4:	68fb      	ldr	r3, [r7, #12]
 8002cb6:	f003 0308 	and.w	r3, r3, #8
 8002cba:	2b08      	cmp	r3, #8
 8002cbc:	d132      	bne.n	8002d24 <HCD_Port_IRQHandler+0xc0>
 8002cbe:	68bb      	ldr	r3, [r7, #8]
 8002cc0:	f043 0308 	orr.w	r3, r3, #8
 8002cc4:	60bb      	str	r3, [r7, #8]
 8002cc6:	68fb      	ldr	r3, [r7, #12]
 8002cc8:	f003 0304 	and.w	r3, r3, #4
 8002ccc:	2b04      	cmp	r3, #4
 8002cce:	d126      	bne.n	8002d1e <HCD_Port_IRQHandler+0xba>
 8002cd0:	687b      	ldr	r3, [r7, #4]
 8002cd2:	699b      	ldr	r3, [r3, #24]
 8002cd4:	2b02      	cmp	r3, #2
 8002cd6:	d113      	bne.n	8002d00 <HCD_Port_IRQHandler+0x9c>
 8002cd8:	68fb      	ldr	r3, [r7, #12]
 8002cda:	f403 23c0 	and.w	r3, r3, #393216	; 0x60000
 8002cde:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 8002ce2:	d106      	bne.n	8002cf2 <HCD_Port_IRQHandler+0x8e>
 8002ce4:	687b      	ldr	r3, [r7, #4]
 8002ce6:	681b      	ldr	r3, [r3, #0]
 8002ce8:	2102      	movs	r1, #2
 8002cea:	4618      	mov	r0, r3
 8002cec:	f001 fa3e 	bl	800416c <USB_InitFSLSPClkSel>
 8002cf0:	e011      	b.n	8002d16 <HCD_Port_IRQHandler+0xb2>
 8002cf2:	687b      	ldr	r3, [r7, #4]
 8002cf4:	681b      	ldr	r3, [r3, #0]
 8002cf6:	2101      	movs	r1, #1
 8002cf8:	4618      	mov	r0, r3
 8002cfa:	f001 fa37 	bl	800416c <USB_InitFSLSPClkSel>
 8002cfe:	e00a      	b.n	8002d16 <HCD_Port_IRQHandler+0xb2>
 8002d00:	687b      	ldr	r3, [r7, #4]
 8002d02:	68db      	ldr	r3, [r3, #12]
 8002d04:	2b01      	cmp	r3, #1
 8002d06:	d106      	bne.n	8002d16 <HCD_Port_IRQHandler+0xb2>
 8002d08:	693b      	ldr	r3, [r7, #16]
 8002d0a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8002d0e:	461a      	mov	r2, r3
 8002d10:	f64e 2360 	movw	r3, #60000	; 0xea60
 8002d14:	6053      	str	r3, [r2, #4]
 8002d16:	6878      	ldr	r0, [r7, #4]
 8002d18:	f004 fbb8 	bl	800748c <HAL_HCD_PortEnabled_Callback>
 8002d1c:	e002      	b.n	8002d24 <HCD_Port_IRQHandler+0xc0>
 8002d1e:	6878      	ldr	r0, [r7, #4]
 8002d20:	f004 fbc2 	bl	80074a8 <HAL_HCD_PortDisabled_Callback>
 8002d24:	68fb      	ldr	r3, [r7, #12]
 8002d26:	f003 0320 	and.w	r3, r3, #32
 8002d2a:	2b20      	cmp	r3, #32
 8002d2c:	d103      	bne.n	8002d36 <HCD_Port_IRQHandler+0xd2>
 8002d2e:	68bb      	ldr	r3, [r7, #8]
 8002d30:	f043 0320 	orr.w	r3, r3, #32
 8002d34:	60bb      	str	r3, [r7, #8]
 8002d36:	693b      	ldr	r3, [r7, #16]
 8002d38:	f503 6388 	add.w	r3, r3, #1088	; 0x440
 8002d3c:	461a      	mov	r2, r3
 8002d3e:	68bb      	ldr	r3, [r7, #8]
 8002d40:	6013      	str	r3, [r2, #0]
 8002d42:	bf00      	nop
 8002d44:	3718      	adds	r7, #24
 8002d46:	46bd      	mov	sp, r7
 8002d48:	bd80      	pop	{r7, pc}
	...

08002d4c <HAL_RCC_OscConfig>:
 8002d4c:	b580      	push	{r7, lr}
 8002d4e:	b086      	sub	sp, #24
 8002d50:	af00      	add	r7, sp, #0
 8002d52:	6078      	str	r0, [r7, #4]
 8002d54:	687b      	ldr	r3, [r7, #4]
 8002d56:	2b00      	cmp	r3, #0
 8002d58:	d101      	bne.n	8002d5e <HAL_RCC_OscConfig+0x12>
 8002d5a:	2301      	movs	r3, #1
 8002d5c:	e264      	b.n	8003228 <HAL_RCC_OscConfig+0x4dc>
 8002d5e:	687b      	ldr	r3, [r7, #4]
 8002d60:	681b      	ldr	r3, [r3, #0]
 8002d62:	f003 0301 	and.w	r3, r3, #1
 8002d66:	2b00      	cmp	r3, #0
 8002d68:	d075      	beq.n	8002e56 <HAL_RCC_OscConfig+0x10a>
 8002d6a:	4ba3      	ldr	r3, [pc, #652]	; (8002ff8 <HAL_RCC_OscConfig+0x2ac>)
 8002d6c:	689b      	ldr	r3, [r3, #8]
 8002d6e:	f003 030c 	and.w	r3, r3, #12
 8002d72:	2b04      	cmp	r3, #4
 8002d74:	d00c      	beq.n	8002d90 <HAL_RCC_OscConfig+0x44>
 8002d76:	4ba0      	ldr	r3, [pc, #640]	; (8002ff8 <HAL_RCC_OscConfig+0x2ac>)
 8002d78:	689b      	ldr	r3, [r3, #8]
 8002d7a:	f003 030c 	and.w	r3, r3, #12
 8002d7e:	2b08      	cmp	r3, #8
 8002d80:	d112      	bne.n	8002da8 <HAL_RCC_OscConfig+0x5c>
 8002d82:	4b9d      	ldr	r3, [pc, #628]	; (8002ff8 <HAL_RCC_OscConfig+0x2ac>)
 8002d84:	685b      	ldr	r3, [r3, #4]
 8002d86:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8002d8a:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8002d8e:	d10b      	bne.n	8002da8 <HAL_RCC_OscConfig+0x5c>
 8002d90:	4b99      	ldr	r3, [pc, #612]	; (8002ff8 <HAL_RCC_OscConfig+0x2ac>)
 8002d92:	681b      	ldr	r3, [r3, #0]
 8002d94:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002d98:	2b00      	cmp	r3, #0
 8002d9a:	d05b      	beq.n	8002e54 <HAL_RCC_OscConfig+0x108>
 8002d9c:	687b      	ldr	r3, [r7, #4]
 8002d9e:	685b      	ldr	r3, [r3, #4]
 8002da0:	2b00      	cmp	r3, #0
 8002da2:	d157      	bne.n	8002e54 <HAL_RCC_OscConfig+0x108>
 8002da4:	2301      	movs	r3, #1
 8002da6:	e23f      	b.n	8003228 <HAL_RCC_OscConfig+0x4dc>
 8002da8:	687b      	ldr	r3, [r7, #4]
 8002daa:	685b      	ldr	r3, [r3, #4]
 8002dac:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002db0:	d106      	bne.n	8002dc0 <HAL_RCC_OscConfig+0x74>
 8002db2:	4b91      	ldr	r3, [pc, #580]	; (8002ff8 <HAL_RCC_OscConfig+0x2ac>)
 8002db4:	681b      	ldr	r3, [r3, #0]
 8002db6:	4a90      	ldr	r2, [pc, #576]	; (8002ff8 <HAL_RCC_OscConfig+0x2ac>)
 8002db8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002dbc:	6013      	str	r3, [r2, #0]
 8002dbe:	e01d      	b.n	8002dfc <HAL_RCC_OscConfig+0xb0>
 8002dc0:	687b      	ldr	r3, [r7, #4]
 8002dc2:	685b      	ldr	r3, [r3, #4]
 8002dc4:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8002dc8:	d10c      	bne.n	8002de4 <HAL_RCC_OscConfig+0x98>
 8002dca:	4b8b      	ldr	r3, [pc, #556]	; (8002ff8 <HAL_RCC_OscConfig+0x2ac>)
 8002dcc:	681b      	ldr	r3, [r3, #0]
 8002dce:	4a8a      	ldr	r2, [pc, #552]	; (8002ff8 <HAL_RCC_OscConfig+0x2ac>)
 8002dd0:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8002dd4:	6013      	str	r3, [r2, #0]
 8002dd6:	4b88      	ldr	r3, [pc, #544]	; (8002ff8 <HAL_RCC_OscConfig+0x2ac>)
 8002dd8:	681b      	ldr	r3, [r3, #0]
 8002dda:	4a87      	ldr	r2, [pc, #540]	; (8002ff8 <HAL_RCC_OscConfig+0x2ac>)
 8002ddc:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002de0:	6013      	str	r3, [r2, #0]
 8002de2:	e00b      	b.n	8002dfc <HAL_RCC_OscConfig+0xb0>
 8002de4:	4b84      	ldr	r3, [pc, #528]	; (8002ff8 <HAL_RCC_OscConfig+0x2ac>)
 8002de6:	681b      	ldr	r3, [r3, #0]
 8002de8:	4a83      	ldr	r2, [pc, #524]	; (8002ff8 <HAL_RCC_OscConfig+0x2ac>)
 8002dea:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8002dee:	6013      	str	r3, [r2, #0]
 8002df0:	4b81      	ldr	r3, [pc, #516]	; (8002ff8 <HAL_RCC_OscConfig+0x2ac>)
 8002df2:	681b      	ldr	r3, [r3, #0]
 8002df4:	4a80      	ldr	r2, [pc, #512]	; (8002ff8 <HAL_RCC_OscConfig+0x2ac>)
 8002df6:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8002dfa:	6013      	str	r3, [r2, #0]
 8002dfc:	687b      	ldr	r3, [r7, #4]
 8002dfe:	685b      	ldr	r3, [r3, #4]
 8002e00:	2b00      	cmp	r3, #0
 8002e02:	d013      	beq.n	8002e2c <HAL_RCC_OscConfig+0xe0>
 8002e04:	f7fd ff6c 	bl	8000ce0 <HAL_GetTick>
 8002e08:	6138      	str	r0, [r7, #16]
 8002e0a:	e008      	b.n	8002e1e <HAL_RCC_OscConfig+0xd2>
 8002e0c:	f7fd ff68 	bl	8000ce0 <HAL_GetTick>
 8002e10:	4602      	mov	r2, r0
 8002e12:	693b      	ldr	r3, [r7, #16]
 8002e14:	1ad3      	subs	r3, r2, r3
 8002e16:	2b64      	cmp	r3, #100	; 0x64
 8002e18:	d901      	bls.n	8002e1e <HAL_RCC_OscConfig+0xd2>
 8002e1a:	2303      	movs	r3, #3
 8002e1c:	e204      	b.n	8003228 <HAL_RCC_OscConfig+0x4dc>
 8002e1e:	4b76      	ldr	r3, [pc, #472]	; (8002ff8 <HAL_RCC_OscConfig+0x2ac>)
 8002e20:	681b      	ldr	r3, [r3, #0]
 8002e22:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002e26:	2b00      	cmp	r3, #0
 8002e28:	d0f0      	beq.n	8002e0c <HAL_RCC_OscConfig+0xc0>
 8002e2a:	e014      	b.n	8002e56 <HAL_RCC_OscConfig+0x10a>
 8002e2c:	f7fd ff58 	bl	8000ce0 <HAL_GetTick>
 8002e30:	6138      	str	r0, [r7, #16]
 8002e32:	e008      	b.n	8002e46 <HAL_RCC_OscConfig+0xfa>
 8002e34:	f7fd ff54 	bl	8000ce0 <HAL_GetTick>
 8002e38:	4602      	mov	r2, r0
 8002e3a:	693b      	ldr	r3, [r7, #16]
 8002e3c:	1ad3      	subs	r3, r2, r3
 8002e3e:	2b64      	cmp	r3, #100	; 0x64
 8002e40:	d901      	bls.n	8002e46 <HAL_RCC_OscConfig+0xfa>
 8002e42:	2303      	movs	r3, #3
 8002e44:	e1f0      	b.n	8003228 <HAL_RCC_OscConfig+0x4dc>
 8002e46:	4b6c      	ldr	r3, [pc, #432]	; (8002ff8 <HAL_RCC_OscConfig+0x2ac>)
 8002e48:	681b      	ldr	r3, [r3, #0]
 8002e4a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002e4e:	2b00      	cmp	r3, #0
 8002e50:	d1f0      	bne.n	8002e34 <HAL_RCC_OscConfig+0xe8>
 8002e52:	e000      	b.n	8002e56 <HAL_RCC_OscConfig+0x10a>
 8002e54:	bf00      	nop
 8002e56:	687b      	ldr	r3, [r7, #4]
 8002e58:	681b      	ldr	r3, [r3, #0]
 8002e5a:	f003 0302 	and.w	r3, r3, #2
 8002e5e:	2b00      	cmp	r3, #0
 8002e60:	d063      	beq.n	8002f2a <HAL_RCC_OscConfig+0x1de>
 8002e62:	4b65      	ldr	r3, [pc, #404]	; (8002ff8 <HAL_RCC_OscConfig+0x2ac>)
 8002e64:	689b      	ldr	r3, [r3, #8]
 8002e66:	f003 030c 	and.w	r3, r3, #12
 8002e6a:	2b00      	cmp	r3, #0
 8002e6c:	d00b      	beq.n	8002e86 <HAL_RCC_OscConfig+0x13a>
 8002e6e:	4b62      	ldr	r3, [pc, #392]	; (8002ff8 <HAL_RCC_OscConfig+0x2ac>)
 8002e70:	689b      	ldr	r3, [r3, #8]
 8002e72:	f003 030c 	and.w	r3, r3, #12
 8002e76:	2b08      	cmp	r3, #8
 8002e78:	d11c      	bne.n	8002eb4 <HAL_RCC_OscConfig+0x168>
 8002e7a:	4b5f      	ldr	r3, [pc, #380]	; (8002ff8 <HAL_RCC_OscConfig+0x2ac>)
 8002e7c:	685b      	ldr	r3, [r3, #4]
 8002e7e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8002e82:	2b00      	cmp	r3, #0
 8002e84:	d116      	bne.n	8002eb4 <HAL_RCC_OscConfig+0x168>
 8002e86:	4b5c      	ldr	r3, [pc, #368]	; (8002ff8 <HAL_RCC_OscConfig+0x2ac>)
 8002e88:	681b      	ldr	r3, [r3, #0]
 8002e8a:	f003 0302 	and.w	r3, r3, #2
 8002e8e:	2b00      	cmp	r3, #0
 8002e90:	d005      	beq.n	8002e9e <HAL_RCC_OscConfig+0x152>
 8002e92:	687b      	ldr	r3, [r7, #4]
 8002e94:	68db      	ldr	r3, [r3, #12]
 8002e96:	2b01      	cmp	r3, #1
 8002e98:	d001      	beq.n	8002e9e <HAL_RCC_OscConfig+0x152>
 8002e9a:	2301      	movs	r3, #1
 8002e9c:	e1c4      	b.n	8003228 <HAL_RCC_OscConfig+0x4dc>
 8002e9e:	4b56      	ldr	r3, [pc, #344]	; (8002ff8 <HAL_RCC_OscConfig+0x2ac>)
 8002ea0:	681b      	ldr	r3, [r3, #0]
 8002ea2:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8002ea6:	687b      	ldr	r3, [r7, #4]
 8002ea8:	691b      	ldr	r3, [r3, #16]
 8002eaa:	00db      	lsls	r3, r3, #3
 8002eac:	4952      	ldr	r1, [pc, #328]	; (8002ff8 <HAL_RCC_OscConfig+0x2ac>)
 8002eae:	4313      	orrs	r3, r2
 8002eb0:	600b      	str	r3, [r1, #0]
 8002eb2:	e03a      	b.n	8002f2a <HAL_RCC_OscConfig+0x1de>
 8002eb4:	687b      	ldr	r3, [r7, #4]
 8002eb6:	68db      	ldr	r3, [r3, #12]
 8002eb8:	2b00      	cmp	r3, #0
 8002eba:	d020      	beq.n	8002efe <HAL_RCC_OscConfig+0x1b2>
 8002ebc:	4b4f      	ldr	r3, [pc, #316]	; (8002ffc <HAL_RCC_OscConfig+0x2b0>)
 8002ebe:	2201      	movs	r2, #1
 8002ec0:	601a      	str	r2, [r3, #0]
 8002ec2:	f7fd ff0d 	bl	8000ce0 <HAL_GetTick>
 8002ec6:	6138      	str	r0, [r7, #16]
 8002ec8:	e008      	b.n	8002edc <HAL_RCC_OscConfig+0x190>
 8002eca:	f7fd ff09 	bl	8000ce0 <HAL_GetTick>
 8002ece:	4602      	mov	r2, r0
 8002ed0:	693b      	ldr	r3, [r7, #16]
 8002ed2:	1ad3      	subs	r3, r2, r3
 8002ed4:	2b02      	cmp	r3, #2
 8002ed6:	d901      	bls.n	8002edc <HAL_RCC_OscConfig+0x190>
 8002ed8:	2303      	movs	r3, #3
 8002eda:	e1a5      	b.n	8003228 <HAL_RCC_OscConfig+0x4dc>
 8002edc:	4b46      	ldr	r3, [pc, #280]	; (8002ff8 <HAL_RCC_OscConfig+0x2ac>)
 8002ede:	681b      	ldr	r3, [r3, #0]
 8002ee0:	f003 0302 	and.w	r3, r3, #2
 8002ee4:	2b00      	cmp	r3, #0
 8002ee6:	d0f0      	beq.n	8002eca <HAL_RCC_OscConfig+0x17e>
 8002ee8:	4b43      	ldr	r3, [pc, #268]	; (8002ff8 <HAL_RCC_OscConfig+0x2ac>)
 8002eea:	681b      	ldr	r3, [r3, #0]
 8002eec:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8002ef0:	687b      	ldr	r3, [r7, #4]
 8002ef2:	691b      	ldr	r3, [r3, #16]
 8002ef4:	00db      	lsls	r3, r3, #3
 8002ef6:	4940      	ldr	r1, [pc, #256]	; (8002ff8 <HAL_RCC_OscConfig+0x2ac>)
 8002ef8:	4313      	orrs	r3, r2
 8002efa:	600b      	str	r3, [r1, #0]
 8002efc:	e015      	b.n	8002f2a <HAL_RCC_OscConfig+0x1de>
 8002efe:	4b3f      	ldr	r3, [pc, #252]	; (8002ffc <HAL_RCC_OscConfig+0x2b0>)
 8002f00:	2200      	movs	r2, #0
 8002f02:	601a      	str	r2, [r3, #0]
 8002f04:	f7fd feec 	bl	8000ce0 <HAL_GetTick>
 8002f08:	6138      	str	r0, [r7, #16]
 8002f0a:	e008      	b.n	8002f1e <HAL_RCC_OscConfig+0x1d2>
 8002f0c:	f7fd fee8 	bl	8000ce0 <HAL_GetTick>
 8002f10:	4602      	mov	r2, r0
 8002f12:	693b      	ldr	r3, [r7, #16]
 8002f14:	1ad3      	subs	r3, r2, r3
 8002f16:	2b02      	cmp	r3, #2
 8002f18:	d901      	bls.n	8002f1e <HAL_RCC_OscConfig+0x1d2>
 8002f1a:	2303      	movs	r3, #3
 8002f1c:	e184      	b.n	8003228 <HAL_RCC_OscConfig+0x4dc>
 8002f1e:	4b36      	ldr	r3, [pc, #216]	; (8002ff8 <HAL_RCC_OscConfig+0x2ac>)
 8002f20:	681b      	ldr	r3, [r3, #0]
 8002f22:	f003 0302 	and.w	r3, r3, #2
 8002f26:	2b00      	cmp	r3, #0
 8002f28:	d1f0      	bne.n	8002f0c <HAL_RCC_OscConfig+0x1c0>
 8002f2a:	687b      	ldr	r3, [r7, #4]
 8002f2c:	681b      	ldr	r3, [r3, #0]
 8002f2e:	f003 0308 	and.w	r3, r3, #8
 8002f32:	2b00      	cmp	r3, #0
 8002f34:	d030      	beq.n	8002f98 <HAL_RCC_OscConfig+0x24c>
 8002f36:	687b      	ldr	r3, [r7, #4]
 8002f38:	695b      	ldr	r3, [r3, #20]
 8002f3a:	2b00      	cmp	r3, #0
 8002f3c:	d016      	beq.n	8002f6c <HAL_RCC_OscConfig+0x220>
 8002f3e:	4b30      	ldr	r3, [pc, #192]	; (8003000 <HAL_RCC_OscConfig+0x2b4>)
 8002f40:	2201      	movs	r2, #1
 8002f42:	601a      	str	r2, [r3, #0]
 8002f44:	f7fd fecc 	bl	8000ce0 <HAL_GetTick>
 8002f48:	6138      	str	r0, [r7, #16]
 8002f4a:	e008      	b.n	8002f5e <HAL_RCC_OscConfig+0x212>
 8002f4c:	f7fd fec8 	bl	8000ce0 <HAL_GetTick>
 8002f50:	4602      	mov	r2, r0
 8002f52:	693b      	ldr	r3, [r7, #16]
 8002f54:	1ad3      	subs	r3, r2, r3
 8002f56:	2b02      	cmp	r3, #2
 8002f58:	d901      	bls.n	8002f5e <HAL_RCC_OscConfig+0x212>
 8002f5a:	2303      	movs	r3, #3
 8002f5c:	e164      	b.n	8003228 <HAL_RCC_OscConfig+0x4dc>
 8002f5e:	4b26      	ldr	r3, [pc, #152]	; (8002ff8 <HAL_RCC_OscConfig+0x2ac>)
 8002f60:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8002f62:	f003 0302 	and.w	r3, r3, #2
 8002f66:	2b00      	cmp	r3, #0
 8002f68:	d0f0      	beq.n	8002f4c <HAL_RCC_OscConfig+0x200>
 8002f6a:	e015      	b.n	8002f98 <HAL_RCC_OscConfig+0x24c>
 8002f6c:	4b24      	ldr	r3, [pc, #144]	; (8003000 <HAL_RCC_OscConfig+0x2b4>)
 8002f6e:	2200      	movs	r2, #0
 8002f70:	601a      	str	r2, [r3, #0]
 8002f72:	f7fd feb5 	bl	8000ce0 <HAL_GetTick>
 8002f76:	6138      	str	r0, [r7, #16]
 8002f78:	e008      	b.n	8002f8c <HAL_RCC_OscConfig+0x240>
 8002f7a:	f7fd feb1 	bl	8000ce0 <HAL_GetTick>
 8002f7e:	4602      	mov	r2, r0
 8002f80:	693b      	ldr	r3, [r7, #16]
 8002f82:	1ad3      	subs	r3, r2, r3
 8002f84:	2b02      	cmp	r3, #2
 8002f86:	d901      	bls.n	8002f8c <HAL_RCC_OscConfig+0x240>
 8002f88:	2303      	movs	r3, #3
 8002f8a:	e14d      	b.n	8003228 <HAL_RCC_OscConfig+0x4dc>
 8002f8c:	4b1a      	ldr	r3, [pc, #104]	; (8002ff8 <HAL_RCC_OscConfig+0x2ac>)
 8002f8e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8002f90:	f003 0302 	and.w	r3, r3, #2
 8002f94:	2b00      	cmp	r3, #0
 8002f96:	d1f0      	bne.n	8002f7a <HAL_RCC_OscConfig+0x22e>
 8002f98:	687b      	ldr	r3, [r7, #4]
 8002f9a:	681b      	ldr	r3, [r3, #0]
 8002f9c:	f003 0304 	and.w	r3, r3, #4
 8002fa0:	2b00      	cmp	r3, #0
 8002fa2:	f000 80a0 	beq.w	80030e6 <HAL_RCC_OscConfig+0x39a>
 8002fa6:	2300      	movs	r3, #0
 8002fa8:	75fb      	strb	r3, [r7, #23]
 8002faa:	4b13      	ldr	r3, [pc, #76]	; (8002ff8 <HAL_RCC_OscConfig+0x2ac>)
 8002fac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002fae:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002fb2:	2b00      	cmp	r3, #0
 8002fb4:	d10f      	bne.n	8002fd6 <HAL_RCC_OscConfig+0x28a>
 8002fb6:	2300      	movs	r3, #0
 8002fb8:	60bb      	str	r3, [r7, #8]
 8002fba:	4b0f      	ldr	r3, [pc, #60]	; (8002ff8 <HAL_RCC_OscConfig+0x2ac>)
 8002fbc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002fbe:	4a0e      	ldr	r2, [pc, #56]	; (8002ff8 <HAL_RCC_OscConfig+0x2ac>)
 8002fc0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002fc4:	6413      	str	r3, [r2, #64]	; 0x40
 8002fc6:	4b0c      	ldr	r3, [pc, #48]	; (8002ff8 <HAL_RCC_OscConfig+0x2ac>)
 8002fc8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002fca:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002fce:	60bb      	str	r3, [r7, #8]
 8002fd0:	68bb      	ldr	r3, [r7, #8]
 8002fd2:	2301      	movs	r3, #1
 8002fd4:	75fb      	strb	r3, [r7, #23]
 8002fd6:	4b0b      	ldr	r3, [pc, #44]	; (8003004 <HAL_RCC_OscConfig+0x2b8>)
 8002fd8:	681b      	ldr	r3, [r3, #0]
 8002fda:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002fde:	2b00      	cmp	r3, #0
 8002fe0:	d121      	bne.n	8003026 <HAL_RCC_OscConfig+0x2da>
 8002fe2:	4b08      	ldr	r3, [pc, #32]	; (8003004 <HAL_RCC_OscConfig+0x2b8>)
 8002fe4:	681b      	ldr	r3, [r3, #0]
 8002fe6:	4a07      	ldr	r2, [pc, #28]	; (8003004 <HAL_RCC_OscConfig+0x2b8>)
 8002fe8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002fec:	6013      	str	r3, [r2, #0]
 8002fee:	f7fd fe77 	bl	8000ce0 <HAL_GetTick>
 8002ff2:	6138      	str	r0, [r7, #16]
 8002ff4:	e011      	b.n	800301a <HAL_RCC_OscConfig+0x2ce>
 8002ff6:	bf00      	nop
 8002ff8:	40023800 	.word	0x40023800
 8002ffc:	42470000 	.word	0x42470000
 8003000:	42470e80 	.word	0x42470e80
 8003004:	40007000 	.word	0x40007000
 8003008:	f7fd fe6a 	bl	8000ce0 <HAL_GetTick>
 800300c:	4602      	mov	r2, r0
 800300e:	693b      	ldr	r3, [r7, #16]
 8003010:	1ad3      	subs	r3, r2, r3
 8003012:	2b02      	cmp	r3, #2
 8003014:	d901      	bls.n	800301a <HAL_RCC_OscConfig+0x2ce>
 8003016:	2303      	movs	r3, #3
 8003018:	e106      	b.n	8003228 <HAL_RCC_OscConfig+0x4dc>
 800301a:	4b85      	ldr	r3, [pc, #532]	; (8003230 <HAL_RCC_OscConfig+0x4e4>)
 800301c:	681b      	ldr	r3, [r3, #0]
 800301e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003022:	2b00      	cmp	r3, #0
 8003024:	d0f0      	beq.n	8003008 <HAL_RCC_OscConfig+0x2bc>
 8003026:	687b      	ldr	r3, [r7, #4]
 8003028:	689b      	ldr	r3, [r3, #8]
 800302a:	2b01      	cmp	r3, #1
 800302c:	d106      	bne.n	800303c <HAL_RCC_OscConfig+0x2f0>
 800302e:	4b81      	ldr	r3, [pc, #516]	; (8003234 <HAL_RCC_OscConfig+0x4e8>)
 8003030:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8003032:	4a80      	ldr	r2, [pc, #512]	; (8003234 <HAL_RCC_OscConfig+0x4e8>)
 8003034:	f043 0301 	orr.w	r3, r3, #1
 8003038:	6713      	str	r3, [r2, #112]	; 0x70
 800303a:	e01c      	b.n	8003076 <HAL_RCC_OscConfig+0x32a>
 800303c:	687b      	ldr	r3, [r7, #4]
 800303e:	689b      	ldr	r3, [r3, #8]
 8003040:	2b05      	cmp	r3, #5
 8003042:	d10c      	bne.n	800305e <HAL_RCC_OscConfig+0x312>
 8003044:	4b7b      	ldr	r3, [pc, #492]	; (8003234 <HAL_RCC_OscConfig+0x4e8>)
 8003046:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8003048:	4a7a      	ldr	r2, [pc, #488]	; (8003234 <HAL_RCC_OscConfig+0x4e8>)
 800304a:	f043 0304 	orr.w	r3, r3, #4
 800304e:	6713      	str	r3, [r2, #112]	; 0x70
 8003050:	4b78      	ldr	r3, [pc, #480]	; (8003234 <HAL_RCC_OscConfig+0x4e8>)
 8003052:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8003054:	4a77      	ldr	r2, [pc, #476]	; (8003234 <HAL_RCC_OscConfig+0x4e8>)
 8003056:	f043 0301 	orr.w	r3, r3, #1
 800305a:	6713      	str	r3, [r2, #112]	; 0x70
 800305c:	e00b      	b.n	8003076 <HAL_RCC_OscConfig+0x32a>
 800305e:	4b75      	ldr	r3, [pc, #468]	; (8003234 <HAL_RCC_OscConfig+0x4e8>)
 8003060:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8003062:	4a74      	ldr	r2, [pc, #464]	; (8003234 <HAL_RCC_OscConfig+0x4e8>)
 8003064:	f023 0301 	bic.w	r3, r3, #1
 8003068:	6713      	str	r3, [r2, #112]	; 0x70
 800306a:	4b72      	ldr	r3, [pc, #456]	; (8003234 <HAL_RCC_OscConfig+0x4e8>)
 800306c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800306e:	4a71      	ldr	r2, [pc, #452]	; (8003234 <HAL_RCC_OscConfig+0x4e8>)
 8003070:	f023 0304 	bic.w	r3, r3, #4
 8003074:	6713      	str	r3, [r2, #112]	; 0x70
 8003076:	687b      	ldr	r3, [r7, #4]
 8003078:	689b      	ldr	r3, [r3, #8]
 800307a:	2b00      	cmp	r3, #0
 800307c:	d015      	beq.n	80030aa <HAL_RCC_OscConfig+0x35e>
 800307e:	f7fd fe2f 	bl	8000ce0 <HAL_GetTick>
 8003082:	6138      	str	r0, [r7, #16]
 8003084:	e00a      	b.n	800309c <HAL_RCC_OscConfig+0x350>
 8003086:	f7fd fe2b 	bl	8000ce0 <HAL_GetTick>
 800308a:	4602      	mov	r2, r0
 800308c:	693b      	ldr	r3, [r7, #16]
 800308e:	1ad3      	subs	r3, r2, r3
 8003090:	f241 3288 	movw	r2, #5000	; 0x1388
 8003094:	4293      	cmp	r3, r2
 8003096:	d901      	bls.n	800309c <HAL_RCC_OscConfig+0x350>
 8003098:	2303      	movs	r3, #3
 800309a:	e0c5      	b.n	8003228 <HAL_RCC_OscConfig+0x4dc>
 800309c:	4b65      	ldr	r3, [pc, #404]	; (8003234 <HAL_RCC_OscConfig+0x4e8>)
 800309e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80030a0:	f003 0302 	and.w	r3, r3, #2
 80030a4:	2b00      	cmp	r3, #0
 80030a6:	d0ee      	beq.n	8003086 <HAL_RCC_OscConfig+0x33a>
 80030a8:	e014      	b.n	80030d4 <HAL_RCC_OscConfig+0x388>
 80030aa:	f7fd fe19 	bl	8000ce0 <HAL_GetTick>
 80030ae:	6138      	str	r0, [r7, #16]
 80030b0:	e00a      	b.n	80030c8 <HAL_RCC_OscConfig+0x37c>
 80030b2:	f7fd fe15 	bl	8000ce0 <HAL_GetTick>
 80030b6:	4602      	mov	r2, r0
 80030b8:	693b      	ldr	r3, [r7, #16]
 80030ba:	1ad3      	subs	r3, r2, r3
 80030bc:	f241 3288 	movw	r2, #5000	; 0x1388
 80030c0:	4293      	cmp	r3, r2
 80030c2:	d901      	bls.n	80030c8 <HAL_RCC_OscConfig+0x37c>
 80030c4:	2303      	movs	r3, #3
 80030c6:	e0af      	b.n	8003228 <HAL_RCC_OscConfig+0x4dc>
 80030c8:	4b5a      	ldr	r3, [pc, #360]	; (8003234 <HAL_RCC_OscConfig+0x4e8>)
 80030ca:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80030cc:	f003 0302 	and.w	r3, r3, #2
 80030d0:	2b00      	cmp	r3, #0
 80030d2:	d1ee      	bne.n	80030b2 <HAL_RCC_OscConfig+0x366>
 80030d4:	7dfb      	ldrb	r3, [r7, #23]
 80030d6:	2b01      	cmp	r3, #1
 80030d8:	d105      	bne.n	80030e6 <HAL_RCC_OscConfig+0x39a>
 80030da:	4b56      	ldr	r3, [pc, #344]	; (8003234 <HAL_RCC_OscConfig+0x4e8>)
 80030dc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80030de:	4a55      	ldr	r2, [pc, #340]	; (8003234 <HAL_RCC_OscConfig+0x4e8>)
 80030e0:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80030e4:	6413      	str	r3, [r2, #64]	; 0x40
 80030e6:	687b      	ldr	r3, [r7, #4]
 80030e8:	699b      	ldr	r3, [r3, #24]
 80030ea:	2b00      	cmp	r3, #0
 80030ec:	f000 809b 	beq.w	8003226 <HAL_RCC_OscConfig+0x4da>
 80030f0:	4b50      	ldr	r3, [pc, #320]	; (8003234 <HAL_RCC_OscConfig+0x4e8>)
 80030f2:	689b      	ldr	r3, [r3, #8]
 80030f4:	f003 030c 	and.w	r3, r3, #12
 80030f8:	2b08      	cmp	r3, #8
 80030fa:	d05c      	beq.n	80031b6 <HAL_RCC_OscConfig+0x46a>
 80030fc:	687b      	ldr	r3, [r7, #4]
 80030fe:	699b      	ldr	r3, [r3, #24]
 8003100:	2b02      	cmp	r3, #2
 8003102:	d141      	bne.n	8003188 <HAL_RCC_OscConfig+0x43c>
 8003104:	4b4c      	ldr	r3, [pc, #304]	; (8003238 <HAL_RCC_OscConfig+0x4ec>)
 8003106:	2200      	movs	r2, #0
 8003108:	601a      	str	r2, [r3, #0]
 800310a:	f7fd fde9 	bl	8000ce0 <HAL_GetTick>
 800310e:	6138      	str	r0, [r7, #16]
 8003110:	e008      	b.n	8003124 <HAL_RCC_OscConfig+0x3d8>
 8003112:	f7fd fde5 	bl	8000ce0 <HAL_GetTick>
 8003116:	4602      	mov	r2, r0
 8003118:	693b      	ldr	r3, [r7, #16]
 800311a:	1ad3      	subs	r3, r2, r3
 800311c:	2b02      	cmp	r3, #2
 800311e:	d901      	bls.n	8003124 <HAL_RCC_OscConfig+0x3d8>
 8003120:	2303      	movs	r3, #3
 8003122:	e081      	b.n	8003228 <HAL_RCC_OscConfig+0x4dc>
 8003124:	4b43      	ldr	r3, [pc, #268]	; (8003234 <HAL_RCC_OscConfig+0x4e8>)
 8003126:	681b      	ldr	r3, [r3, #0]
 8003128:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800312c:	2b00      	cmp	r3, #0
 800312e:	d1f0      	bne.n	8003112 <HAL_RCC_OscConfig+0x3c6>
 8003130:	687b      	ldr	r3, [r7, #4]
 8003132:	69da      	ldr	r2, [r3, #28]
 8003134:	687b      	ldr	r3, [r7, #4]
 8003136:	6a1b      	ldr	r3, [r3, #32]
 8003138:	431a      	orrs	r2, r3
 800313a:	687b      	ldr	r3, [r7, #4]
 800313c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800313e:	019b      	lsls	r3, r3, #6
 8003140:	431a      	orrs	r2, r3
 8003142:	687b      	ldr	r3, [r7, #4]
 8003144:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003146:	085b      	lsrs	r3, r3, #1
 8003148:	3b01      	subs	r3, #1
 800314a:	041b      	lsls	r3, r3, #16
 800314c:	431a      	orrs	r2, r3
 800314e:	687b      	ldr	r3, [r7, #4]
 8003150:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003152:	061b      	lsls	r3, r3, #24
 8003154:	4937      	ldr	r1, [pc, #220]	; (8003234 <HAL_RCC_OscConfig+0x4e8>)
 8003156:	4313      	orrs	r3, r2
 8003158:	604b      	str	r3, [r1, #4]
 800315a:	4b37      	ldr	r3, [pc, #220]	; (8003238 <HAL_RCC_OscConfig+0x4ec>)
 800315c:	2201      	movs	r2, #1
 800315e:	601a      	str	r2, [r3, #0]
 8003160:	f7fd fdbe 	bl	8000ce0 <HAL_GetTick>
 8003164:	6138      	str	r0, [r7, #16]
 8003166:	e008      	b.n	800317a <HAL_RCC_OscConfig+0x42e>
 8003168:	f7fd fdba 	bl	8000ce0 <HAL_GetTick>
 800316c:	4602      	mov	r2, r0
 800316e:	693b      	ldr	r3, [r7, #16]
 8003170:	1ad3      	subs	r3, r2, r3
 8003172:	2b02      	cmp	r3, #2
 8003174:	d901      	bls.n	800317a <HAL_RCC_OscConfig+0x42e>
 8003176:	2303      	movs	r3, #3
 8003178:	e056      	b.n	8003228 <HAL_RCC_OscConfig+0x4dc>
 800317a:	4b2e      	ldr	r3, [pc, #184]	; (8003234 <HAL_RCC_OscConfig+0x4e8>)
 800317c:	681b      	ldr	r3, [r3, #0]
 800317e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003182:	2b00      	cmp	r3, #0
 8003184:	d0f0      	beq.n	8003168 <HAL_RCC_OscConfig+0x41c>
 8003186:	e04e      	b.n	8003226 <HAL_RCC_OscConfig+0x4da>
 8003188:	4b2b      	ldr	r3, [pc, #172]	; (8003238 <HAL_RCC_OscConfig+0x4ec>)
 800318a:	2200      	movs	r2, #0
 800318c:	601a      	str	r2, [r3, #0]
 800318e:	f7fd fda7 	bl	8000ce0 <HAL_GetTick>
 8003192:	6138      	str	r0, [r7, #16]
 8003194:	e008      	b.n	80031a8 <HAL_RCC_OscConfig+0x45c>
 8003196:	f7fd fda3 	bl	8000ce0 <HAL_GetTick>
 800319a:	4602      	mov	r2, r0
 800319c:	693b      	ldr	r3, [r7, #16]
 800319e:	1ad3      	subs	r3, r2, r3
 80031a0:	2b02      	cmp	r3, #2
 80031a2:	d901      	bls.n	80031a8 <HAL_RCC_OscConfig+0x45c>
 80031a4:	2303      	movs	r3, #3
 80031a6:	e03f      	b.n	8003228 <HAL_RCC_OscConfig+0x4dc>
 80031a8:	4b22      	ldr	r3, [pc, #136]	; (8003234 <HAL_RCC_OscConfig+0x4e8>)
 80031aa:	681b      	ldr	r3, [r3, #0]
 80031ac:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80031b0:	2b00      	cmp	r3, #0
 80031b2:	d1f0      	bne.n	8003196 <HAL_RCC_OscConfig+0x44a>
 80031b4:	e037      	b.n	8003226 <HAL_RCC_OscConfig+0x4da>
 80031b6:	687b      	ldr	r3, [r7, #4]
 80031b8:	699b      	ldr	r3, [r3, #24]
 80031ba:	2b01      	cmp	r3, #1
 80031bc:	d101      	bne.n	80031c2 <HAL_RCC_OscConfig+0x476>
 80031be:	2301      	movs	r3, #1
 80031c0:	e032      	b.n	8003228 <HAL_RCC_OscConfig+0x4dc>
 80031c2:	4b1c      	ldr	r3, [pc, #112]	; (8003234 <HAL_RCC_OscConfig+0x4e8>)
 80031c4:	685b      	ldr	r3, [r3, #4]
 80031c6:	60fb      	str	r3, [r7, #12]
 80031c8:	687b      	ldr	r3, [r7, #4]
 80031ca:	699b      	ldr	r3, [r3, #24]
 80031cc:	2b01      	cmp	r3, #1
 80031ce:	d028      	beq.n	8003222 <HAL_RCC_OscConfig+0x4d6>
 80031d0:	68fb      	ldr	r3, [r7, #12]
 80031d2:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 80031d6:	687b      	ldr	r3, [r7, #4]
 80031d8:	69db      	ldr	r3, [r3, #28]
 80031da:	429a      	cmp	r2, r3
 80031dc:	d121      	bne.n	8003222 <HAL_RCC_OscConfig+0x4d6>
 80031de:	68fb      	ldr	r3, [r7, #12]
 80031e0:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 80031e4:	687b      	ldr	r3, [r7, #4]
 80031e6:	6a1b      	ldr	r3, [r3, #32]
 80031e8:	429a      	cmp	r2, r3
 80031ea:	d11a      	bne.n	8003222 <HAL_RCC_OscConfig+0x4d6>
 80031ec:	68fa      	ldr	r2, [r7, #12]
 80031ee:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 80031f2:	4013      	ands	r3, r2
 80031f4:	687a      	ldr	r2, [r7, #4]
 80031f6:	6a52      	ldr	r2, [r2, #36]	; 0x24
 80031f8:	0192      	lsls	r2, r2, #6
 80031fa:	4293      	cmp	r3, r2
 80031fc:	d111      	bne.n	8003222 <HAL_RCC_OscConfig+0x4d6>
 80031fe:	68fb      	ldr	r3, [r7, #12]
 8003200:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8003204:	687b      	ldr	r3, [r7, #4]
 8003206:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003208:	085b      	lsrs	r3, r3, #1
 800320a:	3b01      	subs	r3, #1
 800320c:	041b      	lsls	r3, r3, #16
 800320e:	429a      	cmp	r2, r3
 8003210:	d107      	bne.n	8003222 <HAL_RCC_OscConfig+0x4d6>
 8003212:	68fb      	ldr	r3, [r7, #12]
 8003214:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8003218:	687b      	ldr	r3, [r7, #4]
 800321a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800321c:	061b      	lsls	r3, r3, #24
 800321e:	429a      	cmp	r2, r3
 8003220:	d001      	beq.n	8003226 <HAL_RCC_OscConfig+0x4da>
 8003222:	2301      	movs	r3, #1
 8003224:	e000      	b.n	8003228 <HAL_RCC_OscConfig+0x4dc>
 8003226:	2300      	movs	r3, #0
 8003228:	4618      	mov	r0, r3
 800322a:	3718      	adds	r7, #24
 800322c:	46bd      	mov	sp, r7
 800322e:	bd80      	pop	{r7, pc}
 8003230:	40007000 	.word	0x40007000
 8003234:	40023800 	.word	0x40023800
 8003238:	42470060 	.word	0x42470060

0800323c <HAL_RCC_ClockConfig>:
 800323c:	b580      	push	{r7, lr}
 800323e:	b084      	sub	sp, #16
 8003240:	af00      	add	r7, sp, #0
 8003242:	6078      	str	r0, [r7, #4]
 8003244:	6039      	str	r1, [r7, #0]
 8003246:	687b      	ldr	r3, [r7, #4]
 8003248:	2b00      	cmp	r3, #0
 800324a:	d101      	bne.n	8003250 <HAL_RCC_ClockConfig+0x14>
 800324c:	2301      	movs	r3, #1
 800324e:	e0cc      	b.n	80033ea <HAL_RCC_ClockConfig+0x1ae>
 8003250:	4b68      	ldr	r3, [pc, #416]	; (80033f4 <HAL_RCC_ClockConfig+0x1b8>)
 8003252:	681b      	ldr	r3, [r3, #0]
 8003254:	f003 0307 	and.w	r3, r3, #7
 8003258:	683a      	ldr	r2, [r7, #0]
 800325a:	429a      	cmp	r2, r3
 800325c:	d90c      	bls.n	8003278 <HAL_RCC_ClockConfig+0x3c>
 800325e:	4b65      	ldr	r3, [pc, #404]	; (80033f4 <HAL_RCC_ClockConfig+0x1b8>)
 8003260:	683a      	ldr	r2, [r7, #0]
 8003262:	b2d2      	uxtb	r2, r2
 8003264:	701a      	strb	r2, [r3, #0]
 8003266:	4b63      	ldr	r3, [pc, #396]	; (80033f4 <HAL_RCC_ClockConfig+0x1b8>)
 8003268:	681b      	ldr	r3, [r3, #0]
 800326a:	f003 0307 	and.w	r3, r3, #7
 800326e:	683a      	ldr	r2, [r7, #0]
 8003270:	429a      	cmp	r2, r3
 8003272:	d001      	beq.n	8003278 <HAL_RCC_ClockConfig+0x3c>
 8003274:	2301      	movs	r3, #1
 8003276:	e0b8      	b.n	80033ea <HAL_RCC_ClockConfig+0x1ae>
 8003278:	687b      	ldr	r3, [r7, #4]
 800327a:	681b      	ldr	r3, [r3, #0]
 800327c:	f003 0302 	and.w	r3, r3, #2
 8003280:	2b00      	cmp	r3, #0
 8003282:	d020      	beq.n	80032c6 <HAL_RCC_ClockConfig+0x8a>
 8003284:	687b      	ldr	r3, [r7, #4]
 8003286:	681b      	ldr	r3, [r3, #0]
 8003288:	f003 0304 	and.w	r3, r3, #4
 800328c:	2b00      	cmp	r3, #0
 800328e:	d005      	beq.n	800329c <HAL_RCC_ClockConfig+0x60>
 8003290:	4b59      	ldr	r3, [pc, #356]	; (80033f8 <HAL_RCC_ClockConfig+0x1bc>)
 8003292:	689b      	ldr	r3, [r3, #8]
 8003294:	4a58      	ldr	r2, [pc, #352]	; (80033f8 <HAL_RCC_ClockConfig+0x1bc>)
 8003296:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 800329a:	6093      	str	r3, [r2, #8]
 800329c:	687b      	ldr	r3, [r7, #4]
 800329e:	681b      	ldr	r3, [r3, #0]
 80032a0:	f003 0308 	and.w	r3, r3, #8
 80032a4:	2b00      	cmp	r3, #0
 80032a6:	d005      	beq.n	80032b4 <HAL_RCC_ClockConfig+0x78>
 80032a8:	4b53      	ldr	r3, [pc, #332]	; (80033f8 <HAL_RCC_ClockConfig+0x1bc>)
 80032aa:	689b      	ldr	r3, [r3, #8]
 80032ac:	4a52      	ldr	r2, [pc, #328]	; (80033f8 <HAL_RCC_ClockConfig+0x1bc>)
 80032ae:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 80032b2:	6093      	str	r3, [r2, #8]
 80032b4:	4b50      	ldr	r3, [pc, #320]	; (80033f8 <HAL_RCC_ClockConfig+0x1bc>)
 80032b6:	689b      	ldr	r3, [r3, #8]
 80032b8:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80032bc:	687b      	ldr	r3, [r7, #4]
 80032be:	689b      	ldr	r3, [r3, #8]
 80032c0:	494d      	ldr	r1, [pc, #308]	; (80033f8 <HAL_RCC_ClockConfig+0x1bc>)
 80032c2:	4313      	orrs	r3, r2
 80032c4:	608b      	str	r3, [r1, #8]
 80032c6:	687b      	ldr	r3, [r7, #4]
 80032c8:	681b      	ldr	r3, [r3, #0]
 80032ca:	f003 0301 	and.w	r3, r3, #1
 80032ce:	2b00      	cmp	r3, #0
 80032d0:	d044      	beq.n	800335c <HAL_RCC_ClockConfig+0x120>
 80032d2:	687b      	ldr	r3, [r7, #4]
 80032d4:	685b      	ldr	r3, [r3, #4]
 80032d6:	2b01      	cmp	r3, #1
 80032d8:	d107      	bne.n	80032ea <HAL_RCC_ClockConfig+0xae>
 80032da:	4b47      	ldr	r3, [pc, #284]	; (80033f8 <HAL_RCC_ClockConfig+0x1bc>)
 80032dc:	681b      	ldr	r3, [r3, #0]
 80032de:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80032e2:	2b00      	cmp	r3, #0
 80032e4:	d119      	bne.n	800331a <HAL_RCC_ClockConfig+0xde>
 80032e6:	2301      	movs	r3, #1
 80032e8:	e07f      	b.n	80033ea <HAL_RCC_ClockConfig+0x1ae>
 80032ea:	687b      	ldr	r3, [r7, #4]
 80032ec:	685b      	ldr	r3, [r3, #4]
 80032ee:	2b02      	cmp	r3, #2
 80032f0:	d003      	beq.n	80032fa <HAL_RCC_ClockConfig+0xbe>
 80032f2:	687b      	ldr	r3, [r7, #4]
 80032f4:	685b      	ldr	r3, [r3, #4]
 80032f6:	2b03      	cmp	r3, #3
 80032f8:	d107      	bne.n	800330a <HAL_RCC_ClockConfig+0xce>
 80032fa:	4b3f      	ldr	r3, [pc, #252]	; (80033f8 <HAL_RCC_ClockConfig+0x1bc>)
 80032fc:	681b      	ldr	r3, [r3, #0]
 80032fe:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003302:	2b00      	cmp	r3, #0
 8003304:	d109      	bne.n	800331a <HAL_RCC_ClockConfig+0xde>
 8003306:	2301      	movs	r3, #1
 8003308:	e06f      	b.n	80033ea <HAL_RCC_ClockConfig+0x1ae>
 800330a:	4b3b      	ldr	r3, [pc, #236]	; (80033f8 <HAL_RCC_ClockConfig+0x1bc>)
 800330c:	681b      	ldr	r3, [r3, #0]
 800330e:	f003 0302 	and.w	r3, r3, #2
 8003312:	2b00      	cmp	r3, #0
 8003314:	d101      	bne.n	800331a <HAL_RCC_ClockConfig+0xde>
 8003316:	2301      	movs	r3, #1
 8003318:	e067      	b.n	80033ea <HAL_RCC_ClockConfig+0x1ae>
 800331a:	4b37      	ldr	r3, [pc, #220]	; (80033f8 <HAL_RCC_ClockConfig+0x1bc>)
 800331c:	689b      	ldr	r3, [r3, #8]
 800331e:	f023 0203 	bic.w	r2, r3, #3
 8003322:	687b      	ldr	r3, [r7, #4]
 8003324:	685b      	ldr	r3, [r3, #4]
 8003326:	4934      	ldr	r1, [pc, #208]	; (80033f8 <HAL_RCC_ClockConfig+0x1bc>)
 8003328:	4313      	orrs	r3, r2
 800332a:	608b      	str	r3, [r1, #8]
 800332c:	f7fd fcd8 	bl	8000ce0 <HAL_GetTick>
 8003330:	60f8      	str	r0, [r7, #12]
 8003332:	e00a      	b.n	800334a <HAL_RCC_ClockConfig+0x10e>
 8003334:	f7fd fcd4 	bl	8000ce0 <HAL_GetTick>
 8003338:	4602      	mov	r2, r0
 800333a:	68fb      	ldr	r3, [r7, #12]
 800333c:	1ad3      	subs	r3, r2, r3
 800333e:	f241 3288 	movw	r2, #5000	; 0x1388
 8003342:	4293      	cmp	r3, r2
 8003344:	d901      	bls.n	800334a <HAL_RCC_ClockConfig+0x10e>
 8003346:	2303      	movs	r3, #3
 8003348:	e04f      	b.n	80033ea <HAL_RCC_ClockConfig+0x1ae>
 800334a:	4b2b      	ldr	r3, [pc, #172]	; (80033f8 <HAL_RCC_ClockConfig+0x1bc>)
 800334c:	689b      	ldr	r3, [r3, #8]
 800334e:	f003 020c 	and.w	r2, r3, #12
 8003352:	687b      	ldr	r3, [r7, #4]
 8003354:	685b      	ldr	r3, [r3, #4]
 8003356:	009b      	lsls	r3, r3, #2
 8003358:	429a      	cmp	r2, r3
 800335a:	d1eb      	bne.n	8003334 <HAL_RCC_ClockConfig+0xf8>
 800335c:	4b25      	ldr	r3, [pc, #148]	; (80033f4 <HAL_RCC_ClockConfig+0x1b8>)
 800335e:	681b      	ldr	r3, [r3, #0]
 8003360:	f003 0307 	and.w	r3, r3, #7
 8003364:	683a      	ldr	r2, [r7, #0]
 8003366:	429a      	cmp	r2, r3
 8003368:	d20c      	bcs.n	8003384 <HAL_RCC_ClockConfig+0x148>
 800336a:	4b22      	ldr	r3, [pc, #136]	; (80033f4 <HAL_RCC_ClockConfig+0x1b8>)
 800336c:	683a      	ldr	r2, [r7, #0]
 800336e:	b2d2      	uxtb	r2, r2
 8003370:	701a      	strb	r2, [r3, #0]
 8003372:	4b20      	ldr	r3, [pc, #128]	; (80033f4 <HAL_RCC_ClockConfig+0x1b8>)
 8003374:	681b      	ldr	r3, [r3, #0]
 8003376:	f003 0307 	and.w	r3, r3, #7
 800337a:	683a      	ldr	r2, [r7, #0]
 800337c:	429a      	cmp	r2, r3
 800337e:	d001      	beq.n	8003384 <HAL_RCC_ClockConfig+0x148>
 8003380:	2301      	movs	r3, #1
 8003382:	e032      	b.n	80033ea <HAL_RCC_ClockConfig+0x1ae>
 8003384:	687b      	ldr	r3, [r7, #4]
 8003386:	681b      	ldr	r3, [r3, #0]
 8003388:	f003 0304 	and.w	r3, r3, #4
 800338c:	2b00      	cmp	r3, #0
 800338e:	d008      	beq.n	80033a2 <HAL_RCC_ClockConfig+0x166>
 8003390:	4b19      	ldr	r3, [pc, #100]	; (80033f8 <HAL_RCC_ClockConfig+0x1bc>)
 8003392:	689b      	ldr	r3, [r3, #8]
 8003394:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8003398:	687b      	ldr	r3, [r7, #4]
 800339a:	68db      	ldr	r3, [r3, #12]
 800339c:	4916      	ldr	r1, [pc, #88]	; (80033f8 <HAL_RCC_ClockConfig+0x1bc>)
 800339e:	4313      	orrs	r3, r2
 80033a0:	608b      	str	r3, [r1, #8]
 80033a2:	687b      	ldr	r3, [r7, #4]
 80033a4:	681b      	ldr	r3, [r3, #0]
 80033a6:	f003 0308 	and.w	r3, r3, #8
 80033aa:	2b00      	cmp	r3, #0
 80033ac:	d009      	beq.n	80033c2 <HAL_RCC_ClockConfig+0x186>
 80033ae:	4b12      	ldr	r3, [pc, #72]	; (80033f8 <HAL_RCC_ClockConfig+0x1bc>)
 80033b0:	689b      	ldr	r3, [r3, #8]
 80033b2:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 80033b6:	687b      	ldr	r3, [r7, #4]
 80033b8:	691b      	ldr	r3, [r3, #16]
 80033ba:	00db      	lsls	r3, r3, #3
 80033bc:	490e      	ldr	r1, [pc, #56]	; (80033f8 <HAL_RCC_ClockConfig+0x1bc>)
 80033be:	4313      	orrs	r3, r2
 80033c0:	608b      	str	r3, [r1, #8]
 80033c2:	f000 f821 	bl	8003408 <HAL_RCC_GetSysClockFreq>
 80033c6:	4602      	mov	r2, r0
 80033c8:	4b0b      	ldr	r3, [pc, #44]	; (80033f8 <HAL_RCC_ClockConfig+0x1bc>)
 80033ca:	689b      	ldr	r3, [r3, #8]
 80033cc:	091b      	lsrs	r3, r3, #4
 80033ce:	f003 030f 	and.w	r3, r3, #15
 80033d2:	490a      	ldr	r1, [pc, #40]	; (80033fc <HAL_RCC_ClockConfig+0x1c0>)
 80033d4:	5ccb      	ldrb	r3, [r1, r3]
 80033d6:	fa22 f303 	lsr.w	r3, r2, r3
 80033da:	4a09      	ldr	r2, [pc, #36]	; (8003400 <HAL_RCC_ClockConfig+0x1c4>)
 80033dc:	6013      	str	r3, [r2, #0]
 80033de:	4b09      	ldr	r3, [pc, #36]	; (8003404 <HAL_RCC_ClockConfig+0x1c8>)
 80033e0:	681b      	ldr	r3, [r3, #0]
 80033e2:	4618      	mov	r0, r3
 80033e4:	f7fd fc38 	bl	8000c58 <HAL_InitTick>
 80033e8:	2300      	movs	r3, #0
 80033ea:	4618      	mov	r0, r3
 80033ec:	3710      	adds	r7, #16
 80033ee:	46bd      	mov	sp, r7
 80033f0:	bd80      	pop	{r7, pc}
 80033f2:	bf00      	nop
 80033f4:	40023c00 	.word	0x40023c00
 80033f8:	40023800 	.word	0x40023800
 80033fc:	080091ec 	.word	0x080091ec
 8003400:	20000000 	.word	0x20000000
 8003404:	20000004 	.word	0x20000004

08003408 <HAL_RCC_GetSysClockFreq>:
 8003408:	b5b0      	push	{r4, r5, r7, lr}
 800340a:	b084      	sub	sp, #16
 800340c:	af00      	add	r7, sp, #0
 800340e:	2100      	movs	r1, #0
 8003410:	6079      	str	r1, [r7, #4]
 8003412:	2100      	movs	r1, #0
 8003414:	60f9      	str	r1, [r7, #12]
 8003416:	2100      	movs	r1, #0
 8003418:	6039      	str	r1, [r7, #0]
 800341a:	2100      	movs	r1, #0
 800341c:	60b9      	str	r1, [r7, #8]
 800341e:	4952      	ldr	r1, [pc, #328]	; (8003568 <HAL_RCC_GetSysClockFreq+0x160>)
 8003420:	6889      	ldr	r1, [r1, #8]
 8003422:	f001 010c 	and.w	r1, r1, #12
 8003426:	2908      	cmp	r1, #8
 8003428:	d00d      	beq.n	8003446 <HAL_RCC_GetSysClockFreq+0x3e>
 800342a:	2908      	cmp	r1, #8
 800342c:	f200 8094 	bhi.w	8003558 <HAL_RCC_GetSysClockFreq+0x150>
 8003430:	2900      	cmp	r1, #0
 8003432:	d002      	beq.n	800343a <HAL_RCC_GetSysClockFreq+0x32>
 8003434:	2904      	cmp	r1, #4
 8003436:	d003      	beq.n	8003440 <HAL_RCC_GetSysClockFreq+0x38>
 8003438:	e08e      	b.n	8003558 <HAL_RCC_GetSysClockFreq+0x150>
 800343a:	4b4c      	ldr	r3, [pc, #304]	; (800356c <HAL_RCC_GetSysClockFreq+0x164>)
 800343c:	60bb      	str	r3, [r7, #8]
 800343e:	e08e      	b.n	800355e <HAL_RCC_GetSysClockFreq+0x156>
 8003440:	4b4b      	ldr	r3, [pc, #300]	; (8003570 <HAL_RCC_GetSysClockFreq+0x168>)
 8003442:	60bb      	str	r3, [r7, #8]
 8003444:	e08b      	b.n	800355e <HAL_RCC_GetSysClockFreq+0x156>
 8003446:	4948      	ldr	r1, [pc, #288]	; (8003568 <HAL_RCC_GetSysClockFreq+0x160>)
 8003448:	6849      	ldr	r1, [r1, #4]
 800344a:	f001 013f 	and.w	r1, r1, #63	; 0x3f
 800344e:	6079      	str	r1, [r7, #4]
 8003450:	4945      	ldr	r1, [pc, #276]	; (8003568 <HAL_RCC_GetSysClockFreq+0x160>)
 8003452:	6849      	ldr	r1, [r1, #4]
 8003454:	f401 0180 	and.w	r1, r1, #4194304	; 0x400000
 8003458:	2900      	cmp	r1, #0
 800345a:	d024      	beq.n	80034a6 <HAL_RCC_GetSysClockFreq+0x9e>
 800345c:	4942      	ldr	r1, [pc, #264]	; (8003568 <HAL_RCC_GetSysClockFreq+0x160>)
 800345e:	6849      	ldr	r1, [r1, #4]
 8003460:	0989      	lsrs	r1, r1, #6
 8003462:	4608      	mov	r0, r1
 8003464:	f04f 0100 	mov.w	r1, #0
 8003468:	f240 14ff 	movw	r4, #511	; 0x1ff
 800346c:	f04f 0500 	mov.w	r5, #0
 8003470:	ea00 0204 	and.w	r2, r0, r4
 8003474:	ea01 0305 	and.w	r3, r1, r5
 8003478:	493d      	ldr	r1, [pc, #244]	; (8003570 <HAL_RCC_GetSysClockFreq+0x168>)
 800347a:	fb01 f003 	mul.w	r0, r1, r3
 800347e:	2100      	movs	r1, #0
 8003480:	fb01 f102 	mul.w	r1, r1, r2
 8003484:	1844      	adds	r4, r0, r1
 8003486:	493a      	ldr	r1, [pc, #232]	; (8003570 <HAL_RCC_GetSysClockFreq+0x168>)
 8003488:	fba2 0101 	umull	r0, r1, r2, r1
 800348c:	1863      	adds	r3, r4, r1
 800348e:	4619      	mov	r1, r3
 8003490:	687b      	ldr	r3, [r7, #4]
 8003492:	461a      	mov	r2, r3
 8003494:	f04f 0300 	mov.w	r3, #0
 8003498:	f7fc fef2 	bl	8000280 <__aeabi_uldivmod>
 800349c:	4602      	mov	r2, r0
 800349e:	460b      	mov	r3, r1
 80034a0:	4613      	mov	r3, r2
 80034a2:	60fb      	str	r3, [r7, #12]
 80034a4:	e04a      	b.n	800353c <HAL_RCC_GetSysClockFreq+0x134>
 80034a6:	4b30      	ldr	r3, [pc, #192]	; (8003568 <HAL_RCC_GetSysClockFreq+0x160>)
 80034a8:	685b      	ldr	r3, [r3, #4]
 80034aa:	099b      	lsrs	r3, r3, #6
 80034ac:	461a      	mov	r2, r3
 80034ae:	f04f 0300 	mov.w	r3, #0
 80034b2:	f240 10ff 	movw	r0, #511	; 0x1ff
 80034b6:	f04f 0100 	mov.w	r1, #0
 80034ba:	ea02 0400 	and.w	r4, r2, r0
 80034be:	ea03 0501 	and.w	r5, r3, r1
 80034c2:	4620      	mov	r0, r4
 80034c4:	4629      	mov	r1, r5
 80034c6:	f04f 0200 	mov.w	r2, #0
 80034ca:	f04f 0300 	mov.w	r3, #0
 80034ce:	014b      	lsls	r3, r1, #5
 80034d0:	ea43 63d0 	orr.w	r3, r3, r0, lsr #27
 80034d4:	0142      	lsls	r2, r0, #5
 80034d6:	4610      	mov	r0, r2
 80034d8:	4619      	mov	r1, r3
 80034da:	1b00      	subs	r0, r0, r4
 80034dc:	eb61 0105 	sbc.w	r1, r1, r5
 80034e0:	f04f 0200 	mov.w	r2, #0
 80034e4:	f04f 0300 	mov.w	r3, #0
 80034e8:	018b      	lsls	r3, r1, #6
 80034ea:	ea43 6390 	orr.w	r3, r3, r0, lsr #26
 80034ee:	0182      	lsls	r2, r0, #6
 80034f0:	1a12      	subs	r2, r2, r0
 80034f2:	eb63 0301 	sbc.w	r3, r3, r1
 80034f6:	f04f 0000 	mov.w	r0, #0
 80034fa:	f04f 0100 	mov.w	r1, #0
 80034fe:	00d9      	lsls	r1, r3, #3
 8003500:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 8003504:	00d0      	lsls	r0, r2, #3
 8003506:	4602      	mov	r2, r0
 8003508:	460b      	mov	r3, r1
 800350a:	1912      	adds	r2, r2, r4
 800350c:	eb45 0303 	adc.w	r3, r5, r3
 8003510:	f04f 0000 	mov.w	r0, #0
 8003514:	f04f 0100 	mov.w	r1, #0
 8003518:	0299      	lsls	r1, r3, #10
 800351a:	ea41 5192 	orr.w	r1, r1, r2, lsr #22
 800351e:	0290      	lsls	r0, r2, #10
 8003520:	4602      	mov	r2, r0
 8003522:	460b      	mov	r3, r1
 8003524:	4610      	mov	r0, r2
 8003526:	4619      	mov	r1, r3
 8003528:	687b      	ldr	r3, [r7, #4]
 800352a:	461a      	mov	r2, r3
 800352c:	f04f 0300 	mov.w	r3, #0
 8003530:	f7fc fea6 	bl	8000280 <__aeabi_uldivmod>
 8003534:	4602      	mov	r2, r0
 8003536:	460b      	mov	r3, r1
 8003538:	4613      	mov	r3, r2
 800353a:	60fb      	str	r3, [r7, #12]
 800353c:	4b0a      	ldr	r3, [pc, #40]	; (8003568 <HAL_RCC_GetSysClockFreq+0x160>)
 800353e:	685b      	ldr	r3, [r3, #4]
 8003540:	0c1b      	lsrs	r3, r3, #16
 8003542:	f003 0303 	and.w	r3, r3, #3
 8003546:	3301      	adds	r3, #1
 8003548:	005b      	lsls	r3, r3, #1
 800354a:	603b      	str	r3, [r7, #0]
 800354c:	68fa      	ldr	r2, [r7, #12]
 800354e:	683b      	ldr	r3, [r7, #0]
 8003550:	fbb2 f3f3 	udiv	r3, r2, r3
 8003554:	60bb      	str	r3, [r7, #8]
 8003556:	e002      	b.n	800355e <HAL_RCC_GetSysClockFreq+0x156>
 8003558:	4b04      	ldr	r3, [pc, #16]	; (800356c <HAL_RCC_GetSysClockFreq+0x164>)
 800355a:	60bb      	str	r3, [r7, #8]
 800355c:	bf00      	nop
 800355e:	68bb      	ldr	r3, [r7, #8]
 8003560:	4618      	mov	r0, r3
 8003562:	3710      	adds	r7, #16
 8003564:	46bd      	mov	sp, r7
 8003566:	bdb0      	pop	{r4, r5, r7, pc}
 8003568:	40023800 	.word	0x40023800
 800356c:	00f42400 	.word	0x00f42400
 8003570:	017d7840 	.word	0x017d7840

08003574 <HAL_RCC_GetHCLKFreq>:
 8003574:	b480      	push	{r7}
 8003576:	af00      	add	r7, sp, #0
 8003578:	4b03      	ldr	r3, [pc, #12]	; (8003588 <HAL_RCC_GetHCLKFreq+0x14>)
 800357a:	681b      	ldr	r3, [r3, #0]
 800357c:	4618      	mov	r0, r3
 800357e:	46bd      	mov	sp, r7
 8003580:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003584:	4770      	bx	lr
 8003586:	bf00      	nop
 8003588:	20000000 	.word	0x20000000

0800358c <HAL_RCC_GetPCLK1Freq>:
 800358c:	b580      	push	{r7, lr}
 800358e:	af00      	add	r7, sp, #0
 8003590:	f7ff fff0 	bl	8003574 <HAL_RCC_GetHCLKFreq>
 8003594:	4602      	mov	r2, r0
 8003596:	4b05      	ldr	r3, [pc, #20]	; (80035ac <HAL_RCC_GetPCLK1Freq+0x20>)
 8003598:	689b      	ldr	r3, [r3, #8]
 800359a:	0a9b      	lsrs	r3, r3, #10
 800359c:	f003 0307 	and.w	r3, r3, #7
 80035a0:	4903      	ldr	r1, [pc, #12]	; (80035b0 <HAL_RCC_GetPCLK1Freq+0x24>)
 80035a2:	5ccb      	ldrb	r3, [r1, r3]
 80035a4:	fa22 f303 	lsr.w	r3, r2, r3
 80035a8:	4618      	mov	r0, r3
 80035aa:	bd80      	pop	{r7, pc}
 80035ac:	40023800 	.word	0x40023800
 80035b0:	080091fc 	.word	0x080091fc

080035b4 <HAL_RCC_GetPCLK2Freq>:
 80035b4:	b580      	push	{r7, lr}
 80035b6:	af00      	add	r7, sp, #0
 80035b8:	f7ff ffdc 	bl	8003574 <HAL_RCC_GetHCLKFreq>
 80035bc:	4602      	mov	r2, r0
 80035be:	4b05      	ldr	r3, [pc, #20]	; (80035d4 <HAL_RCC_GetPCLK2Freq+0x20>)
 80035c0:	689b      	ldr	r3, [r3, #8]
 80035c2:	0b5b      	lsrs	r3, r3, #13
 80035c4:	f003 0307 	and.w	r3, r3, #7
 80035c8:	4903      	ldr	r1, [pc, #12]	; (80035d8 <HAL_RCC_GetPCLK2Freq+0x24>)
 80035ca:	5ccb      	ldrb	r3, [r1, r3]
 80035cc:	fa22 f303 	lsr.w	r3, r2, r3
 80035d0:	4618      	mov	r0, r3
 80035d2:	bd80      	pop	{r7, pc}
 80035d4:	40023800 	.word	0x40023800
 80035d8:	080091fc 	.word	0x080091fc

080035dc <HAL_UART_Init>:
 80035dc:	b580      	push	{r7, lr}
 80035de:	b082      	sub	sp, #8
 80035e0:	af00      	add	r7, sp, #0
 80035e2:	6078      	str	r0, [r7, #4]
 80035e4:	687b      	ldr	r3, [r7, #4]
 80035e6:	2b00      	cmp	r3, #0
 80035e8:	d101      	bne.n	80035ee <HAL_UART_Init+0x12>
 80035ea:	2301      	movs	r3, #1
 80035ec:	e03f      	b.n	800366e <HAL_UART_Init+0x92>
 80035ee:	687b      	ldr	r3, [r7, #4]
 80035f0:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80035f4:	b2db      	uxtb	r3, r3
 80035f6:	2b00      	cmp	r3, #0
 80035f8:	d106      	bne.n	8003608 <HAL_UART_Init+0x2c>
 80035fa:	687b      	ldr	r3, [r7, #4]
 80035fc:	2200      	movs	r2, #0
 80035fe:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003602:	6878      	ldr	r0, [r7, #4]
 8003604:	f7fd f8f6 	bl	80007f4 <HAL_UART_MspInit>
 8003608:	687b      	ldr	r3, [r7, #4]
 800360a:	2224      	movs	r2, #36	; 0x24
 800360c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003610:	687b      	ldr	r3, [r7, #4]
 8003612:	681b      	ldr	r3, [r3, #0]
 8003614:	68da      	ldr	r2, [r3, #12]
 8003616:	687b      	ldr	r3, [r7, #4]
 8003618:	681b      	ldr	r3, [r3, #0]
 800361a:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800361e:	60da      	str	r2, [r3, #12]
 8003620:	6878      	ldr	r0, [r7, #4]
 8003622:	f000 f929 	bl	8003878 <UART_SetConfig>
 8003626:	687b      	ldr	r3, [r7, #4]
 8003628:	681b      	ldr	r3, [r3, #0]
 800362a:	691a      	ldr	r2, [r3, #16]
 800362c:	687b      	ldr	r3, [r7, #4]
 800362e:	681b      	ldr	r3, [r3, #0]
 8003630:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8003634:	611a      	str	r2, [r3, #16]
 8003636:	687b      	ldr	r3, [r7, #4]
 8003638:	681b      	ldr	r3, [r3, #0]
 800363a:	695a      	ldr	r2, [r3, #20]
 800363c:	687b      	ldr	r3, [r7, #4]
 800363e:	681b      	ldr	r3, [r3, #0]
 8003640:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8003644:	615a      	str	r2, [r3, #20]
 8003646:	687b      	ldr	r3, [r7, #4]
 8003648:	681b      	ldr	r3, [r3, #0]
 800364a:	68da      	ldr	r2, [r3, #12]
 800364c:	687b      	ldr	r3, [r7, #4]
 800364e:	681b      	ldr	r3, [r3, #0]
 8003650:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8003654:	60da      	str	r2, [r3, #12]
 8003656:	687b      	ldr	r3, [r7, #4]
 8003658:	2200      	movs	r2, #0
 800365a:	641a      	str	r2, [r3, #64]	; 0x40
 800365c:	687b      	ldr	r3, [r7, #4]
 800365e:	2220      	movs	r2, #32
 8003660:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003664:	687b      	ldr	r3, [r7, #4]
 8003666:	2220      	movs	r2, #32
 8003668:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800366c:	2300      	movs	r3, #0
 800366e:	4618      	mov	r0, r3
 8003670:	3708      	adds	r7, #8
 8003672:	46bd      	mov	sp, r7
 8003674:	bd80      	pop	{r7, pc}

08003676 <HAL_UART_Transmit>:
 8003676:	b580      	push	{r7, lr}
 8003678:	b08a      	sub	sp, #40	; 0x28
 800367a:	af02      	add	r7, sp, #8
 800367c:	60f8      	str	r0, [r7, #12]
 800367e:	60b9      	str	r1, [r7, #8]
 8003680:	603b      	str	r3, [r7, #0]
 8003682:	4613      	mov	r3, r2
 8003684:	80fb      	strh	r3, [r7, #6]
 8003686:	2300      	movs	r3, #0
 8003688:	617b      	str	r3, [r7, #20]
 800368a:	68fb      	ldr	r3, [r7, #12]
 800368c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003690:	b2db      	uxtb	r3, r3
 8003692:	2b20      	cmp	r3, #32
 8003694:	d17c      	bne.n	8003790 <HAL_UART_Transmit+0x11a>
 8003696:	68bb      	ldr	r3, [r7, #8]
 8003698:	2b00      	cmp	r3, #0
 800369a:	d002      	beq.n	80036a2 <HAL_UART_Transmit+0x2c>
 800369c:	88fb      	ldrh	r3, [r7, #6]
 800369e:	2b00      	cmp	r3, #0
 80036a0:	d101      	bne.n	80036a6 <HAL_UART_Transmit+0x30>
 80036a2:	2301      	movs	r3, #1
 80036a4:	e075      	b.n	8003792 <HAL_UART_Transmit+0x11c>
 80036a6:	68fb      	ldr	r3, [r7, #12]
 80036a8:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80036ac:	2b01      	cmp	r3, #1
 80036ae:	d101      	bne.n	80036b4 <HAL_UART_Transmit+0x3e>
 80036b0:	2302      	movs	r3, #2
 80036b2:	e06e      	b.n	8003792 <HAL_UART_Transmit+0x11c>
 80036b4:	68fb      	ldr	r3, [r7, #12]
 80036b6:	2201      	movs	r2, #1
 80036b8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80036bc:	68fb      	ldr	r3, [r7, #12]
 80036be:	2200      	movs	r2, #0
 80036c0:	641a      	str	r2, [r3, #64]	; 0x40
 80036c2:	68fb      	ldr	r3, [r7, #12]
 80036c4:	2221      	movs	r2, #33	; 0x21
 80036c6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80036ca:	f7fd fb09 	bl	8000ce0 <HAL_GetTick>
 80036ce:	6178      	str	r0, [r7, #20]
 80036d0:	68fb      	ldr	r3, [r7, #12]
 80036d2:	88fa      	ldrh	r2, [r7, #6]
 80036d4:	849a      	strh	r2, [r3, #36]	; 0x24
 80036d6:	68fb      	ldr	r3, [r7, #12]
 80036d8:	88fa      	ldrh	r2, [r7, #6]
 80036da:	84da      	strh	r2, [r3, #38]	; 0x26
 80036dc:	68fb      	ldr	r3, [r7, #12]
 80036de:	689b      	ldr	r3, [r3, #8]
 80036e0:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80036e4:	d108      	bne.n	80036f8 <HAL_UART_Transmit+0x82>
 80036e6:	68fb      	ldr	r3, [r7, #12]
 80036e8:	691b      	ldr	r3, [r3, #16]
 80036ea:	2b00      	cmp	r3, #0
 80036ec:	d104      	bne.n	80036f8 <HAL_UART_Transmit+0x82>
 80036ee:	2300      	movs	r3, #0
 80036f0:	61fb      	str	r3, [r7, #28]
 80036f2:	68bb      	ldr	r3, [r7, #8]
 80036f4:	61bb      	str	r3, [r7, #24]
 80036f6:	e003      	b.n	8003700 <HAL_UART_Transmit+0x8a>
 80036f8:	68bb      	ldr	r3, [r7, #8]
 80036fa:	61fb      	str	r3, [r7, #28]
 80036fc:	2300      	movs	r3, #0
 80036fe:	61bb      	str	r3, [r7, #24]
 8003700:	68fb      	ldr	r3, [r7, #12]
 8003702:	2200      	movs	r2, #0
 8003704:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003708:	e02a      	b.n	8003760 <HAL_UART_Transmit+0xea>
 800370a:	683b      	ldr	r3, [r7, #0]
 800370c:	9300      	str	r3, [sp, #0]
 800370e:	697b      	ldr	r3, [r7, #20]
 8003710:	2200      	movs	r2, #0
 8003712:	2180      	movs	r1, #128	; 0x80
 8003714:	68f8      	ldr	r0, [r7, #12]
 8003716:	f000 f840 	bl	800379a <UART_WaitOnFlagUntilTimeout>
 800371a:	4603      	mov	r3, r0
 800371c:	2b00      	cmp	r3, #0
 800371e:	d001      	beq.n	8003724 <HAL_UART_Transmit+0xae>
 8003720:	2303      	movs	r3, #3
 8003722:	e036      	b.n	8003792 <HAL_UART_Transmit+0x11c>
 8003724:	69fb      	ldr	r3, [r7, #28]
 8003726:	2b00      	cmp	r3, #0
 8003728:	d10b      	bne.n	8003742 <HAL_UART_Transmit+0xcc>
 800372a:	69bb      	ldr	r3, [r7, #24]
 800372c:	881b      	ldrh	r3, [r3, #0]
 800372e:	461a      	mov	r2, r3
 8003730:	68fb      	ldr	r3, [r7, #12]
 8003732:	681b      	ldr	r3, [r3, #0]
 8003734:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8003738:	605a      	str	r2, [r3, #4]
 800373a:	69bb      	ldr	r3, [r7, #24]
 800373c:	3302      	adds	r3, #2
 800373e:	61bb      	str	r3, [r7, #24]
 8003740:	e007      	b.n	8003752 <HAL_UART_Transmit+0xdc>
 8003742:	69fb      	ldr	r3, [r7, #28]
 8003744:	781a      	ldrb	r2, [r3, #0]
 8003746:	68fb      	ldr	r3, [r7, #12]
 8003748:	681b      	ldr	r3, [r3, #0]
 800374a:	605a      	str	r2, [r3, #4]
 800374c:	69fb      	ldr	r3, [r7, #28]
 800374e:	3301      	adds	r3, #1
 8003750:	61fb      	str	r3, [r7, #28]
 8003752:	68fb      	ldr	r3, [r7, #12]
 8003754:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8003756:	b29b      	uxth	r3, r3
 8003758:	3b01      	subs	r3, #1
 800375a:	b29a      	uxth	r2, r3
 800375c:	68fb      	ldr	r3, [r7, #12]
 800375e:	84da      	strh	r2, [r3, #38]	; 0x26
 8003760:	68fb      	ldr	r3, [r7, #12]
 8003762:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8003764:	b29b      	uxth	r3, r3
 8003766:	2b00      	cmp	r3, #0
 8003768:	d1cf      	bne.n	800370a <HAL_UART_Transmit+0x94>
 800376a:	683b      	ldr	r3, [r7, #0]
 800376c:	9300      	str	r3, [sp, #0]
 800376e:	697b      	ldr	r3, [r7, #20]
 8003770:	2200      	movs	r2, #0
 8003772:	2140      	movs	r1, #64	; 0x40
 8003774:	68f8      	ldr	r0, [r7, #12]
 8003776:	f000 f810 	bl	800379a <UART_WaitOnFlagUntilTimeout>
 800377a:	4603      	mov	r3, r0
 800377c:	2b00      	cmp	r3, #0
 800377e:	d001      	beq.n	8003784 <HAL_UART_Transmit+0x10e>
 8003780:	2303      	movs	r3, #3
 8003782:	e006      	b.n	8003792 <HAL_UART_Transmit+0x11c>
 8003784:	68fb      	ldr	r3, [r7, #12]
 8003786:	2220      	movs	r2, #32
 8003788:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800378c:	2300      	movs	r3, #0
 800378e:	e000      	b.n	8003792 <HAL_UART_Transmit+0x11c>
 8003790:	2302      	movs	r3, #2
 8003792:	4618      	mov	r0, r3
 8003794:	3720      	adds	r7, #32
 8003796:	46bd      	mov	sp, r7
 8003798:	bd80      	pop	{r7, pc}

0800379a <UART_WaitOnFlagUntilTimeout>:
 800379a:	b580      	push	{r7, lr}
 800379c:	b090      	sub	sp, #64	; 0x40
 800379e:	af00      	add	r7, sp, #0
 80037a0:	60f8      	str	r0, [r7, #12]
 80037a2:	60b9      	str	r1, [r7, #8]
 80037a4:	603b      	str	r3, [r7, #0]
 80037a6:	4613      	mov	r3, r2
 80037a8:	71fb      	strb	r3, [r7, #7]
 80037aa:	e050      	b.n	800384e <UART_WaitOnFlagUntilTimeout+0xb4>
 80037ac:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80037ae:	f1b3 3fff 	cmp.w	r3, #4294967295
 80037b2:	d04c      	beq.n	800384e <UART_WaitOnFlagUntilTimeout+0xb4>
 80037b4:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80037b6:	2b00      	cmp	r3, #0
 80037b8:	d007      	beq.n	80037ca <UART_WaitOnFlagUntilTimeout+0x30>
 80037ba:	f7fd fa91 	bl	8000ce0 <HAL_GetTick>
 80037be:	4602      	mov	r2, r0
 80037c0:	683b      	ldr	r3, [r7, #0]
 80037c2:	1ad3      	subs	r3, r2, r3
 80037c4:	6cba      	ldr	r2, [r7, #72]	; 0x48
 80037c6:	429a      	cmp	r2, r3
 80037c8:	d241      	bcs.n	800384e <UART_WaitOnFlagUntilTimeout+0xb4>
 80037ca:	68fb      	ldr	r3, [r7, #12]
 80037cc:	681b      	ldr	r3, [r3, #0]
 80037ce:	330c      	adds	r3, #12
 80037d0:	62bb      	str	r3, [r7, #40]	; 0x28
 80037d2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80037d4:	e853 3f00 	ldrex	r3, [r3]
 80037d8:	627b      	str	r3, [r7, #36]	; 0x24
 80037da:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80037dc:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 80037e0:	63fb      	str	r3, [r7, #60]	; 0x3c
 80037e2:	68fb      	ldr	r3, [r7, #12]
 80037e4:	681b      	ldr	r3, [r3, #0]
 80037e6:	330c      	adds	r3, #12
 80037e8:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 80037ea:	637a      	str	r2, [r7, #52]	; 0x34
 80037ec:	633b      	str	r3, [r7, #48]	; 0x30
 80037ee:	6b39      	ldr	r1, [r7, #48]	; 0x30
 80037f0:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 80037f2:	e841 2300 	strex	r3, r2, [r1]
 80037f6:	62fb      	str	r3, [r7, #44]	; 0x2c
 80037f8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80037fa:	2b00      	cmp	r3, #0
 80037fc:	d1e5      	bne.n	80037ca <UART_WaitOnFlagUntilTimeout+0x30>
 80037fe:	68fb      	ldr	r3, [r7, #12]
 8003800:	681b      	ldr	r3, [r3, #0]
 8003802:	3314      	adds	r3, #20
 8003804:	617b      	str	r3, [r7, #20]
 8003806:	697b      	ldr	r3, [r7, #20]
 8003808:	e853 3f00 	ldrex	r3, [r3]
 800380c:	613b      	str	r3, [r7, #16]
 800380e:	693b      	ldr	r3, [r7, #16]
 8003810:	f023 0301 	bic.w	r3, r3, #1
 8003814:	63bb      	str	r3, [r7, #56]	; 0x38
 8003816:	68fb      	ldr	r3, [r7, #12]
 8003818:	681b      	ldr	r3, [r3, #0]
 800381a:	3314      	adds	r3, #20
 800381c:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800381e:	623a      	str	r2, [r7, #32]
 8003820:	61fb      	str	r3, [r7, #28]
 8003822:	69f9      	ldr	r1, [r7, #28]
 8003824:	6a3a      	ldr	r2, [r7, #32]
 8003826:	e841 2300 	strex	r3, r2, [r1]
 800382a:	61bb      	str	r3, [r7, #24]
 800382c:	69bb      	ldr	r3, [r7, #24]
 800382e:	2b00      	cmp	r3, #0
 8003830:	d1e5      	bne.n	80037fe <UART_WaitOnFlagUntilTimeout+0x64>
 8003832:	68fb      	ldr	r3, [r7, #12]
 8003834:	2220      	movs	r2, #32
 8003836:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800383a:	68fb      	ldr	r3, [r7, #12]
 800383c:	2220      	movs	r2, #32
 800383e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003842:	68fb      	ldr	r3, [r7, #12]
 8003844:	2200      	movs	r2, #0
 8003846:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800384a:	2303      	movs	r3, #3
 800384c:	e00f      	b.n	800386e <UART_WaitOnFlagUntilTimeout+0xd4>
 800384e:	68fb      	ldr	r3, [r7, #12]
 8003850:	681b      	ldr	r3, [r3, #0]
 8003852:	681a      	ldr	r2, [r3, #0]
 8003854:	68bb      	ldr	r3, [r7, #8]
 8003856:	4013      	ands	r3, r2
 8003858:	68ba      	ldr	r2, [r7, #8]
 800385a:	429a      	cmp	r2, r3
 800385c:	bf0c      	ite	eq
 800385e:	2301      	moveq	r3, #1
 8003860:	2300      	movne	r3, #0
 8003862:	b2db      	uxtb	r3, r3
 8003864:	461a      	mov	r2, r3
 8003866:	79fb      	ldrb	r3, [r7, #7]
 8003868:	429a      	cmp	r2, r3
 800386a:	d09f      	beq.n	80037ac <UART_WaitOnFlagUntilTimeout+0x12>
 800386c:	2300      	movs	r3, #0
 800386e:	4618      	mov	r0, r3
 8003870:	3740      	adds	r7, #64	; 0x40
 8003872:	46bd      	mov	sp, r7
 8003874:	bd80      	pop	{r7, pc}
	...

08003878 <UART_SetConfig>:
 8003878:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800387c:	b09f      	sub	sp, #124	; 0x7c
 800387e:	af00      	add	r7, sp, #0
 8003880:	66f8      	str	r0, [r7, #108]	; 0x6c
 8003882:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8003884:	681b      	ldr	r3, [r3, #0]
 8003886:	691b      	ldr	r3, [r3, #16]
 8003888:	f423 5040 	bic.w	r0, r3, #12288	; 0x3000
 800388c:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800388e:	68d9      	ldr	r1, [r3, #12]
 8003890:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8003892:	681a      	ldr	r2, [r3, #0]
 8003894:	ea40 0301 	orr.w	r3, r0, r1
 8003898:	6113      	str	r3, [r2, #16]
 800389a:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800389c:	689a      	ldr	r2, [r3, #8]
 800389e:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80038a0:	691b      	ldr	r3, [r3, #16]
 80038a2:	431a      	orrs	r2, r3
 80038a4:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80038a6:	695b      	ldr	r3, [r3, #20]
 80038a8:	431a      	orrs	r2, r3
 80038aa:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80038ac:	69db      	ldr	r3, [r3, #28]
 80038ae:	4313      	orrs	r3, r2
 80038b0:	673b      	str	r3, [r7, #112]	; 0x70
 80038b2:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80038b4:	681b      	ldr	r3, [r3, #0]
 80038b6:	68db      	ldr	r3, [r3, #12]
 80038b8:	f423 4116 	bic.w	r1, r3, #38400	; 0x9600
 80038bc:	f021 010c 	bic.w	r1, r1, #12
 80038c0:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80038c2:	681a      	ldr	r2, [r3, #0]
 80038c4:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 80038c6:	430b      	orrs	r3, r1
 80038c8:	60d3      	str	r3, [r2, #12]
 80038ca:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80038cc:	681b      	ldr	r3, [r3, #0]
 80038ce:	695b      	ldr	r3, [r3, #20]
 80038d0:	f423 7040 	bic.w	r0, r3, #768	; 0x300
 80038d4:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80038d6:	6999      	ldr	r1, [r3, #24]
 80038d8:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80038da:	681a      	ldr	r2, [r3, #0]
 80038dc:	ea40 0301 	orr.w	r3, r0, r1
 80038e0:	6153      	str	r3, [r2, #20]
 80038e2:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80038e4:	681a      	ldr	r2, [r3, #0]
 80038e6:	4bc5      	ldr	r3, [pc, #788]	; (8003bfc <UART_SetConfig+0x384>)
 80038e8:	429a      	cmp	r2, r3
 80038ea:	d004      	beq.n	80038f6 <UART_SetConfig+0x7e>
 80038ec:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80038ee:	681a      	ldr	r2, [r3, #0]
 80038f0:	4bc3      	ldr	r3, [pc, #780]	; (8003c00 <UART_SetConfig+0x388>)
 80038f2:	429a      	cmp	r2, r3
 80038f4:	d103      	bne.n	80038fe <UART_SetConfig+0x86>
 80038f6:	f7ff fe5d 	bl	80035b4 <HAL_RCC_GetPCLK2Freq>
 80038fa:	6778      	str	r0, [r7, #116]	; 0x74
 80038fc:	e002      	b.n	8003904 <UART_SetConfig+0x8c>
 80038fe:	f7ff fe45 	bl	800358c <HAL_RCC_GetPCLK1Freq>
 8003902:	6778      	str	r0, [r7, #116]	; 0x74
 8003904:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8003906:	69db      	ldr	r3, [r3, #28]
 8003908:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800390c:	f040 80b6 	bne.w	8003a7c <UART_SetConfig+0x204>
 8003910:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8003912:	461c      	mov	r4, r3
 8003914:	f04f 0500 	mov.w	r5, #0
 8003918:	4622      	mov	r2, r4
 800391a:	462b      	mov	r3, r5
 800391c:	1891      	adds	r1, r2, r2
 800391e:	6439      	str	r1, [r7, #64]	; 0x40
 8003920:	415b      	adcs	r3, r3
 8003922:	647b      	str	r3, [r7, #68]	; 0x44
 8003924:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 8003928:	1912      	adds	r2, r2, r4
 800392a:	eb45 0303 	adc.w	r3, r5, r3
 800392e:	f04f 0000 	mov.w	r0, #0
 8003932:	f04f 0100 	mov.w	r1, #0
 8003936:	00d9      	lsls	r1, r3, #3
 8003938:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 800393c:	00d0      	lsls	r0, r2, #3
 800393e:	4602      	mov	r2, r0
 8003940:	460b      	mov	r3, r1
 8003942:	1911      	adds	r1, r2, r4
 8003944:	6639      	str	r1, [r7, #96]	; 0x60
 8003946:	416b      	adcs	r3, r5
 8003948:	667b      	str	r3, [r7, #100]	; 0x64
 800394a:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800394c:	685b      	ldr	r3, [r3, #4]
 800394e:	461a      	mov	r2, r3
 8003950:	f04f 0300 	mov.w	r3, #0
 8003954:	1891      	adds	r1, r2, r2
 8003956:	63b9      	str	r1, [r7, #56]	; 0x38
 8003958:	415b      	adcs	r3, r3
 800395a:	63fb      	str	r3, [r7, #60]	; 0x3c
 800395c:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 8003960:	e9d7 0118 	ldrd	r0, r1, [r7, #96]	; 0x60
 8003964:	f7fc fc8c 	bl	8000280 <__aeabi_uldivmod>
 8003968:	4602      	mov	r2, r0
 800396a:	460b      	mov	r3, r1
 800396c:	4ba5      	ldr	r3, [pc, #660]	; (8003c04 <UART_SetConfig+0x38c>)
 800396e:	fba3 2302 	umull	r2, r3, r3, r2
 8003972:	095b      	lsrs	r3, r3, #5
 8003974:	011e      	lsls	r6, r3, #4
 8003976:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8003978:	461c      	mov	r4, r3
 800397a:	f04f 0500 	mov.w	r5, #0
 800397e:	4622      	mov	r2, r4
 8003980:	462b      	mov	r3, r5
 8003982:	1891      	adds	r1, r2, r2
 8003984:	6339      	str	r1, [r7, #48]	; 0x30
 8003986:	415b      	adcs	r3, r3
 8003988:	637b      	str	r3, [r7, #52]	; 0x34
 800398a:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	; 0x30
 800398e:	1912      	adds	r2, r2, r4
 8003990:	eb45 0303 	adc.w	r3, r5, r3
 8003994:	f04f 0000 	mov.w	r0, #0
 8003998:	f04f 0100 	mov.w	r1, #0
 800399c:	00d9      	lsls	r1, r3, #3
 800399e:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 80039a2:	00d0      	lsls	r0, r2, #3
 80039a4:	4602      	mov	r2, r0
 80039a6:	460b      	mov	r3, r1
 80039a8:	1911      	adds	r1, r2, r4
 80039aa:	65b9      	str	r1, [r7, #88]	; 0x58
 80039ac:	416b      	adcs	r3, r5
 80039ae:	65fb      	str	r3, [r7, #92]	; 0x5c
 80039b0:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80039b2:	685b      	ldr	r3, [r3, #4]
 80039b4:	461a      	mov	r2, r3
 80039b6:	f04f 0300 	mov.w	r3, #0
 80039ba:	1891      	adds	r1, r2, r2
 80039bc:	62b9      	str	r1, [r7, #40]	; 0x28
 80039be:	415b      	adcs	r3, r3
 80039c0:	62fb      	str	r3, [r7, #44]	; 0x2c
 80039c2:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 80039c6:	e9d7 0116 	ldrd	r0, r1, [r7, #88]	; 0x58
 80039ca:	f7fc fc59 	bl	8000280 <__aeabi_uldivmod>
 80039ce:	4602      	mov	r2, r0
 80039d0:	460b      	mov	r3, r1
 80039d2:	4b8c      	ldr	r3, [pc, #560]	; (8003c04 <UART_SetConfig+0x38c>)
 80039d4:	fba3 1302 	umull	r1, r3, r3, r2
 80039d8:	095b      	lsrs	r3, r3, #5
 80039da:	2164      	movs	r1, #100	; 0x64
 80039dc:	fb01 f303 	mul.w	r3, r1, r3
 80039e0:	1ad3      	subs	r3, r2, r3
 80039e2:	00db      	lsls	r3, r3, #3
 80039e4:	3332      	adds	r3, #50	; 0x32
 80039e6:	4a87      	ldr	r2, [pc, #540]	; (8003c04 <UART_SetConfig+0x38c>)
 80039e8:	fba2 2303 	umull	r2, r3, r2, r3
 80039ec:	095b      	lsrs	r3, r3, #5
 80039ee:	005b      	lsls	r3, r3, #1
 80039f0:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 80039f4:	441e      	add	r6, r3
 80039f6:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 80039f8:	4618      	mov	r0, r3
 80039fa:	f04f 0100 	mov.w	r1, #0
 80039fe:	4602      	mov	r2, r0
 8003a00:	460b      	mov	r3, r1
 8003a02:	1894      	adds	r4, r2, r2
 8003a04:	623c      	str	r4, [r7, #32]
 8003a06:	415b      	adcs	r3, r3
 8003a08:	627b      	str	r3, [r7, #36]	; 0x24
 8003a0a:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8003a0e:	1812      	adds	r2, r2, r0
 8003a10:	eb41 0303 	adc.w	r3, r1, r3
 8003a14:	f04f 0400 	mov.w	r4, #0
 8003a18:	f04f 0500 	mov.w	r5, #0
 8003a1c:	00dd      	lsls	r5, r3, #3
 8003a1e:	ea45 7552 	orr.w	r5, r5, r2, lsr #29
 8003a22:	00d4      	lsls	r4, r2, #3
 8003a24:	4622      	mov	r2, r4
 8003a26:	462b      	mov	r3, r5
 8003a28:	1814      	adds	r4, r2, r0
 8003a2a:	653c      	str	r4, [r7, #80]	; 0x50
 8003a2c:	414b      	adcs	r3, r1
 8003a2e:	657b      	str	r3, [r7, #84]	; 0x54
 8003a30:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8003a32:	685b      	ldr	r3, [r3, #4]
 8003a34:	461a      	mov	r2, r3
 8003a36:	f04f 0300 	mov.w	r3, #0
 8003a3a:	1891      	adds	r1, r2, r2
 8003a3c:	61b9      	str	r1, [r7, #24]
 8003a3e:	415b      	adcs	r3, r3
 8003a40:	61fb      	str	r3, [r7, #28]
 8003a42:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8003a46:	e9d7 0114 	ldrd	r0, r1, [r7, #80]	; 0x50
 8003a4a:	f7fc fc19 	bl	8000280 <__aeabi_uldivmod>
 8003a4e:	4602      	mov	r2, r0
 8003a50:	460b      	mov	r3, r1
 8003a52:	4b6c      	ldr	r3, [pc, #432]	; (8003c04 <UART_SetConfig+0x38c>)
 8003a54:	fba3 1302 	umull	r1, r3, r3, r2
 8003a58:	095b      	lsrs	r3, r3, #5
 8003a5a:	2164      	movs	r1, #100	; 0x64
 8003a5c:	fb01 f303 	mul.w	r3, r1, r3
 8003a60:	1ad3      	subs	r3, r2, r3
 8003a62:	00db      	lsls	r3, r3, #3
 8003a64:	3332      	adds	r3, #50	; 0x32
 8003a66:	4a67      	ldr	r2, [pc, #412]	; (8003c04 <UART_SetConfig+0x38c>)
 8003a68:	fba2 2303 	umull	r2, r3, r2, r3
 8003a6c:	095b      	lsrs	r3, r3, #5
 8003a6e:	f003 0207 	and.w	r2, r3, #7
 8003a72:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8003a74:	681b      	ldr	r3, [r3, #0]
 8003a76:	4432      	add	r2, r6
 8003a78:	609a      	str	r2, [r3, #8]
 8003a7a:	e0b9      	b.n	8003bf0 <UART_SetConfig+0x378>
 8003a7c:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8003a7e:	461c      	mov	r4, r3
 8003a80:	f04f 0500 	mov.w	r5, #0
 8003a84:	4622      	mov	r2, r4
 8003a86:	462b      	mov	r3, r5
 8003a88:	1891      	adds	r1, r2, r2
 8003a8a:	6139      	str	r1, [r7, #16]
 8003a8c:	415b      	adcs	r3, r3
 8003a8e:	617b      	str	r3, [r7, #20]
 8003a90:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 8003a94:	1912      	adds	r2, r2, r4
 8003a96:	eb45 0303 	adc.w	r3, r5, r3
 8003a9a:	f04f 0000 	mov.w	r0, #0
 8003a9e:	f04f 0100 	mov.w	r1, #0
 8003aa2:	00d9      	lsls	r1, r3, #3
 8003aa4:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 8003aa8:	00d0      	lsls	r0, r2, #3
 8003aaa:	4602      	mov	r2, r0
 8003aac:	460b      	mov	r3, r1
 8003aae:	eb12 0804 	adds.w	r8, r2, r4
 8003ab2:	eb43 0905 	adc.w	r9, r3, r5
 8003ab6:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8003ab8:	685b      	ldr	r3, [r3, #4]
 8003aba:	4618      	mov	r0, r3
 8003abc:	f04f 0100 	mov.w	r1, #0
 8003ac0:	f04f 0200 	mov.w	r2, #0
 8003ac4:	f04f 0300 	mov.w	r3, #0
 8003ac8:	008b      	lsls	r3, r1, #2
 8003aca:	ea43 7390 	orr.w	r3, r3, r0, lsr #30
 8003ace:	0082      	lsls	r2, r0, #2
 8003ad0:	4640      	mov	r0, r8
 8003ad2:	4649      	mov	r1, r9
 8003ad4:	f7fc fbd4 	bl	8000280 <__aeabi_uldivmod>
 8003ad8:	4602      	mov	r2, r0
 8003ada:	460b      	mov	r3, r1
 8003adc:	4b49      	ldr	r3, [pc, #292]	; (8003c04 <UART_SetConfig+0x38c>)
 8003ade:	fba3 2302 	umull	r2, r3, r3, r2
 8003ae2:	095b      	lsrs	r3, r3, #5
 8003ae4:	011e      	lsls	r6, r3, #4
 8003ae6:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8003ae8:	4618      	mov	r0, r3
 8003aea:	f04f 0100 	mov.w	r1, #0
 8003aee:	4602      	mov	r2, r0
 8003af0:	460b      	mov	r3, r1
 8003af2:	1894      	adds	r4, r2, r2
 8003af4:	60bc      	str	r4, [r7, #8]
 8003af6:	415b      	adcs	r3, r3
 8003af8:	60fb      	str	r3, [r7, #12]
 8003afa:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8003afe:	1812      	adds	r2, r2, r0
 8003b00:	eb41 0303 	adc.w	r3, r1, r3
 8003b04:	f04f 0400 	mov.w	r4, #0
 8003b08:	f04f 0500 	mov.w	r5, #0
 8003b0c:	00dd      	lsls	r5, r3, #3
 8003b0e:	ea45 7552 	orr.w	r5, r5, r2, lsr #29
 8003b12:	00d4      	lsls	r4, r2, #3
 8003b14:	4622      	mov	r2, r4
 8003b16:	462b      	mov	r3, r5
 8003b18:	1814      	adds	r4, r2, r0
 8003b1a:	64bc      	str	r4, [r7, #72]	; 0x48
 8003b1c:	414b      	adcs	r3, r1
 8003b1e:	64fb      	str	r3, [r7, #76]	; 0x4c
 8003b20:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8003b22:	685b      	ldr	r3, [r3, #4]
 8003b24:	4618      	mov	r0, r3
 8003b26:	f04f 0100 	mov.w	r1, #0
 8003b2a:	f04f 0200 	mov.w	r2, #0
 8003b2e:	f04f 0300 	mov.w	r3, #0
 8003b32:	008b      	lsls	r3, r1, #2
 8003b34:	ea43 7390 	orr.w	r3, r3, r0, lsr #30
 8003b38:	0082      	lsls	r2, r0, #2
 8003b3a:	e9d7 0112 	ldrd	r0, r1, [r7, #72]	; 0x48
 8003b3e:	f7fc fb9f 	bl	8000280 <__aeabi_uldivmod>
 8003b42:	4602      	mov	r2, r0
 8003b44:	460b      	mov	r3, r1
 8003b46:	4b2f      	ldr	r3, [pc, #188]	; (8003c04 <UART_SetConfig+0x38c>)
 8003b48:	fba3 1302 	umull	r1, r3, r3, r2
 8003b4c:	095b      	lsrs	r3, r3, #5
 8003b4e:	2164      	movs	r1, #100	; 0x64
 8003b50:	fb01 f303 	mul.w	r3, r1, r3
 8003b54:	1ad3      	subs	r3, r2, r3
 8003b56:	011b      	lsls	r3, r3, #4
 8003b58:	3332      	adds	r3, #50	; 0x32
 8003b5a:	4a2a      	ldr	r2, [pc, #168]	; (8003c04 <UART_SetConfig+0x38c>)
 8003b5c:	fba2 2303 	umull	r2, r3, r2, r3
 8003b60:	095b      	lsrs	r3, r3, #5
 8003b62:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8003b66:	441e      	add	r6, r3
 8003b68:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8003b6a:	4618      	mov	r0, r3
 8003b6c:	f04f 0100 	mov.w	r1, #0
 8003b70:	4602      	mov	r2, r0
 8003b72:	460b      	mov	r3, r1
 8003b74:	1894      	adds	r4, r2, r2
 8003b76:	603c      	str	r4, [r7, #0]
 8003b78:	415b      	adcs	r3, r3
 8003b7a:	607b      	str	r3, [r7, #4]
 8003b7c:	e9d7 2300 	ldrd	r2, r3, [r7]
 8003b80:	1812      	adds	r2, r2, r0
 8003b82:	eb41 0303 	adc.w	r3, r1, r3
 8003b86:	f04f 0400 	mov.w	r4, #0
 8003b8a:	f04f 0500 	mov.w	r5, #0
 8003b8e:	00dd      	lsls	r5, r3, #3
 8003b90:	ea45 7552 	orr.w	r5, r5, r2, lsr #29
 8003b94:	00d4      	lsls	r4, r2, #3
 8003b96:	4622      	mov	r2, r4
 8003b98:	462b      	mov	r3, r5
 8003b9a:	eb12 0a00 	adds.w	sl, r2, r0
 8003b9e:	eb43 0b01 	adc.w	fp, r3, r1
 8003ba2:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8003ba4:	685b      	ldr	r3, [r3, #4]
 8003ba6:	4618      	mov	r0, r3
 8003ba8:	f04f 0100 	mov.w	r1, #0
 8003bac:	f04f 0200 	mov.w	r2, #0
 8003bb0:	f04f 0300 	mov.w	r3, #0
 8003bb4:	008b      	lsls	r3, r1, #2
 8003bb6:	ea43 7390 	orr.w	r3, r3, r0, lsr #30
 8003bba:	0082      	lsls	r2, r0, #2
 8003bbc:	4650      	mov	r0, sl
 8003bbe:	4659      	mov	r1, fp
 8003bc0:	f7fc fb5e 	bl	8000280 <__aeabi_uldivmod>
 8003bc4:	4602      	mov	r2, r0
 8003bc6:	460b      	mov	r3, r1
 8003bc8:	4b0e      	ldr	r3, [pc, #56]	; (8003c04 <UART_SetConfig+0x38c>)
 8003bca:	fba3 1302 	umull	r1, r3, r3, r2
 8003bce:	095b      	lsrs	r3, r3, #5
 8003bd0:	2164      	movs	r1, #100	; 0x64
 8003bd2:	fb01 f303 	mul.w	r3, r1, r3
 8003bd6:	1ad3      	subs	r3, r2, r3
 8003bd8:	011b      	lsls	r3, r3, #4
 8003bda:	3332      	adds	r3, #50	; 0x32
 8003bdc:	4a09      	ldr	r2, [pc, #36]	; (8003c04 <UART_SetConfig+0x38c>)
 8003bde:	fba2 2303 	umull	r2, r3, r2, r3
 8003be2:	095b      	lsrs	r3, r3, #5
 8003be4:	f003 020f 	and.w	r2, r3, #15
 8003be8:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8003bea:	681b      	ldr	r3, [r3, #0]
 8003bec:	4432      	add	r2, r6
 8003bee:	609a      	str	r2, [r3, #8]
 8003bf0:	bf00      	nop
 8003bf2:	377c      	adds	r7, #124	; 0x7c
 8003bf4:	46bd      	mov	sp, r7
 8003bf6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003bfa:	bf00      	nop
 8003bfc:	40011000 	.word	0x40011000
 8003c00:	40011400 	.word	0x40011400
 8003c04:	51eb851f 	.word	0x51eb851f

08003c08 <USB_CoreInit>:
 8003c08:	b084      	sub	sp, #16
 8003c0a:	b580      	push	{r7, lr}
 8003c0c:	b084      	sub	sp, #16
 8003c0e:	af00      	add	r7, sp, #0
 8003c10:	6078      	str	r0, [r7, #4]
 8003c12:	f107 001c 	add.w	r0, r7, #28
 8003c16:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 8003c1a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003c1c:	2b01      	cmp	r3, #1
 8003c1e:	d122      	bne.n	8003c66 <USB_CoreInit+0x5e>
 8003c20:	687b      	ldr	r3, [r7, #4]
 8003c22:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003c24:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 8003c28:	687b      	ldr	r3, [r7, #4]
 8003c2a:	639a      	str	r2, [r3, #56]	; 0x38
 8003c2c:	687b      	ldr	r3, [r7, #4]
 8003c2e:	68db      	ldr	r3, [r3, #12]
 8003c30:	f423 0384 	bic.w	r3, r3, #4325376	; 0x420000
 8003c34:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8003c38:	687a      	ldr	r2, [r7, #4]
 8003c3a:	60d3      	str	r3, [r2, #12]
 8003c3c:	687b      	ldr	r3, [r7, #4]
 8003c3e:	68db      	ldr	r3, [r3, #12]
 8003c40:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8003c44:	687b      	ldr	r3, [r7, #4]
 8003c46:	60da      	str	r2, [r3, #12]
 8003c48:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8003c4a:	2b01      	cmp	r3, #1
 8003c4c:	d105      	bne.n	8003c5a <USB_CoreInit+0x52>
 8003c4e:	687b      	ldr	r3, [r7, #4]
 8003c50:	68db      	ldr	r3, [r3, #12]
 8003c52:	f443 1280 	orr.w	r2, r3, #1048576	; 0x100000
 8003c56:	687b      	ldr	r3, [r7, #4]
 8003c58:	60da      	str	r2, [r3, #12]
 8003c5a:	6878      	ldr	r0, [r7, #4]
 8003c5c:	f000 f9a0 	bl	8003fa0 <USB_CoreReset>
 8003c60:	4603      	mov	r3, r0
 8003c62:	73fb      	strb	r3, [r7, #15]
 8003c64:	e01a      	b.n	8003c9c <USB_CoreInit+0x94>
 8003c66:	687b      	ldr	r3, [r7, #4]
 8003c68:	68db      	ldr	r3, [r3, #12]
 8003c6a:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 8003c6e:	687b      	ldr	r3, [r7, #4]
 8003c70:	60da      	str	r2, [r3, #12]
 8003c72:	6878      	ldr	r0, [r7, #4]
 8003c74:	f000 f994 	bl	8003fa0 <USB_CoreReset>
 8003c78:	4603      	mov	r3, r0
 8003c7a:	73fb      	strb	r3, [r7, #15]
 8003c7c:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8003c7e:	2b00      	cmp	r3, #0
 8003c80:	d106      	bne.n	8003c90 <USB_CoreInit+0x88>
 8003c82:	687b      	ldr	r3, [r7, #4]
 8003c84:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003c86:	f443 3280 	orr.w	r2, r3, #65536	; 0x10000
 8003c8a:	687b      	ldr	r3, [r7, #4]
 8003c8c:	639a      	str	r2, [r3, #56]	; 0x38
 8003c8e:	e005      	b.n	8003c9c <USB_CoreInit+0x94>
 8003c90:	687b      	ldr	r3, [r7, #4]
 8003c92:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003c94:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 8003c98:	687b      	ldr	r3, [r7, #4]
 8003c9a:	639a      	str	r2, [r3, #56]	; 0x38
 8003c9c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003c9e:	2b01      	cmp	r3, #1
 8003ca0:	d10b      	bne.n	8003cba <USB_CoreInit+0xb2>
 8003ca2:	687b      	ldr	r3, [r7, #4]
 8003ca4:	689b      	ldr	r3, [r3, #8]
 8003ca6:	f043 0206 	orr.w	r2, r3, #6
 8003caa:	687b      	ldr	r3, [r7, #4]
 8003cac:	609a      	str	r2, [r3, #8]
 8003cae:	687b      	ldr	r3, [r7, #4]
 8003cb0:	689b      	ldr	r3, [r3, #8]
 8003cb2:	f043 0220 	orr.w	r2, r3, #32
 8003cb6:	687b      	ldr	r3, [r7, #4]
 8003cb8:	609a      	str	r2, [r3, #8]
 8003cba:	7bfb      	ldrb	r3, [r7, #15]
 8003cbc:	4618      	mov	r0, r3
 8003cbe:	3710      	adds	r7, #16
 8003cc0:	46bd      	mov	sp, r7
 8003cc2:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8003cc6:	b004      	add	sp, #16
 8003cc8:	4770      	bx	lr

08003cca <USB_EnableGlobalInt>:
 8003cca:	b480      	push	{r7}
 8003ccc:	b083      	sub	sp, #12
 8003cce:	af00      	add	r7, sp, #0
 8003cd0:	6078      	str	r0, [r7, #4]
 8003cd2:	687b      	ldr	r3, [r7, #4]
 8003cd4:	689b      	ldr	r3, [r3, #8]
 8003cd6:	f043 0201 	orr.w	r2, r3, #1
 8003cda:	687b      	ldr	r3, [r7, #4]
 8003cdc:	609a      	str	r2, [r3, #8]
 8003cde:	2300      	movs	r3, #0
 8003ce0:	4618      	mov	r0, r3
 8003ce2:	370c      	adds	r7, #12
 8003ce4:	46bd      	mov	sp, r7
 8003ce6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003cea:	4770      	bx	lr

08003cec <USB_DisableGlobalInt>:
 8003cec:	b480      	push	{r7}
 8003cee:	b083      	sub	sp, #12
 8003cf0:	af00      	add	r7, sp, #0
 8003cf2:	6078      	str	r0, [r7, #4]
 8003cf4:	687b      	ldr	r3, [r7, #4]
 8003cf6:	689b      	ldr	r3, [r3, #8]
 8003cf8:	f023 0201 	bic.w	r2, r3, #1
 8003cfc:	687b      	ldr	r3, [r7, #4]
 8003cfe:	609a      	str	r2, [r3, #8]
 8003d00:	2300      	movs	r3, #0
 8003d02:	4618      	mov	r0, r3
 8003d04:	370c      	adds	r7, #12
 8003d06:	46bd      	mov	sp, r7
 8003d08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d0c:	4770      	bx	lr

08003d0e <USB_SetCurrentMode>:
 8003d0e:	b580      	push	{r7, lr}
 8003d10:	b084      	sub	sp, #16
 8003d12:	af00      	add	r7, sp, #0
 8003d14:	6078      	str	r0, [r7, #4]
 8003d16:	460b      	mov	r3, r1
 8003d18:	70fb      	strb	r3, [r7, #3]
 8003d1a:	2300      	movs	r3, #0
 8003d1c:	60fb      	str	r3, [r7, #12]
 8003d1e:	687b      	ldr	r3, [r7, #4]
 8003d20:	68db      	ldr	r3, [r3, #12]
 8003d22:	f023 42c0 	bic.w	r2, r3, #1610612736	; 0x60000000
 8003d26:	687b      	ldr	r3, [r7, #4]
 8003d28:	60da      	str	r2, [r3, #12]
 8003d2a:	78fb      	ldrb	r3, [r7, #3]
 8003d2c:	2b01      	cmp	r3, #1
 8003d2e:	d115      	bne.n	8003d5c <USB_SetCurrentMode+0x4e>
 8003d30:	687b      	ldr	r3, [r7, #4]
 8003d32:	68db      	ldr	r3, [r3, #12]
 8003d34:	f043 5200 	orr.w	r2, r3, #536870912	; 0x20000000
 8003d38:	687b      	ldr	r3, [r7, #4]
 8003d3a:	60da      	str	r2, [r3, #12]
 8003d3c:	2001      	movs	r0, #1
 8003d3e:	f7fc ffdb 	bl	8000cf8 <HAL_Delay>
 8003d42:	68fb      	ldr	r3, [r7, #12]
 8003d44:	3301      	adds	r3, #1
 8003d46:	60fb      	str	r3, [r7, #12]
 8003d48:	6878      	ldr	r0, [r7, #4]
 8003d4a:	f000 f91a 	bl	8003f82 <USB_GetMode>
 8003d4e:	4603      	mov	r3, r0
 8003d50:	2b01      	cmp	r3, #1
 8003d52:	d01e      	beq.n	8003d92 <USB_SetCurrentMode+0x84>
 8003d54:	68fb      	ldr	r3, [r7, #12]
 8003d56:	2b31      	cmp	r3, #49	; 0x31
 8003d58:	d9f0      	bls.n	8003d3c <USB_SetCurrentMode+0x2e>
 8003d5a:	e01a      	b.n	8003d92 <USB_SetCurrentMode+0x84>
 8003d5c:	78fb      	ldrb	r3, [r7, #3]
 8003d5e:	2b00      	cmp	r3, #0
 8003d60:	d115      	bne.n	8003d8e <USB_SetCurrentMode+0x80>
 8003d62:	687b      	ldr	r3, [r7, #4]
 8003d64:	68db      	ldr	r3, [r3, #12]
 8003d66:	f043 4280 	orr.w	r2, r3, #1073741824	; 0x40000000
 8003d6a:	687b      	ldr	r3, [r7, #4]
 8003d6c:	60da      	str	r2, [r3, #12]
 8003d6e:	2001      	movs	r0, #1
 8003d70:	f7fc ffc2 	bl	8000cf8 <HAL_Delay>
 8003d74:	68fb      	ldr	r3, [r7, #12]
 8003d76:	3301      	adds	r3, #1
 8003d78:	60fb      	str	r3, [r7, #12]
 8003d7a:	6878      	ldr	r0, [r7, #4]
 8003d7c:	f000 f901 	bl	8003f82 <USB_GetMode>
 8003d80:	4603      	mov	r3, r0
 8003d82:	2b00      	cmp	r3, #0
 8003d84:	d005      	beq.n	8003d92 <USB_SetCurrentMode+0x84>
 8003d86:	68fb      	ldr	r3, [r7, #12]
 8003d88:	2b31      	cmp	r3, #49	; 0x31
 8003d8a:	d9f0      	bls.n	8003d6e <USB_SetCurrentMode+0x60>
 8003d8c:	e001      	b.n	8003d92 <USB_SetCurrentMode+0x84>
 8003d8e:	2301      	movs	r3, #1
 8003d90:	e005      	b.n	8003d9e <USB_SetCurrentMode+0x90>
 8003d92:	68fb      	ldr	r3, [r7, #12]
 8003d94:	2b32      	cmp	r3, #50	; 0x32
 8003d96:	d101      	bne.n	8003d9c <USB_SetCurrentMode+0x8e>
 8003d98:	2301      	movs	r3, #1
 8003d9a:	e000      	b.n	8003d9e <USB_SetCurrentMode+0x90>
 8003d9c:	2300      	movs	r3, #0
 8003d9e:	4618      	mov	r0, r3
 8003da0:	3710      	adds	r7, #16
 8003da2:	46bd      	mov	sp, r7
 8003da4:	bd80      	pop	{r7, pc}
	...

08003da8 <USB_FlushTxFifo>:
 8003da8:	b480      	push	{r7}
 8003daa:	b085      	sub	sp, #20
 8003dac:	af00      	add	r7, sp, #0
 8003dae:	6078      	str	r0, [r7, #4]
 8003db0:	6039      	str	r1, [r7, #0]
 8003db2:	2300      	movs	r3, #0
 8003db4:	60fb      	str	r3, [r7, #12]
 8003db6:	683b      	ldr	r3, [r7, #0]
 8003db8:	019b      	lsls	r3, r3, #6
 8003dba:	f043 0220 	orr.w	r2, r3, #32
 8003dbe:	687b      	ldr	r3, [r7, #4]
 8003dc0:	611a      	str	r2, [r3, #16]
 8003dc2:	68fb      	ldr	r3, [r7, #12]
 8003dc4:	3301      	adds	r3, #1
 8003dc6:	60fb      	str	r3, [r7, #12]
 8003dc8:	4a08      	ldr	r2, [pc, #32]	; (8003dec <USB_FlushTxFifo+0x44>)
 8003dca:	4293      	cmp	r3, r2
 8003dcc:	d901      	bls.n	8003dd2 <USB_FlushTxFifo+0x2a>
 8003dce:	2303      	movs	r3, #3
 8003dd0:	e006      	b.n	8003de0 <USB_FlushTxFifo+0x38>
 8003dd2:	687b      	ldr	r3, [r7, #4]
 8003dd4:	691b      	ldr	r3, [r3, #16]
 8003dd6:	f003 0320 	and.w	r3, r3, #32
 8003dda:	2b20      	cmp	r3, #32
 8003ddc:	d0f1      	beq.n	8003dc2 <USB_FlushTxFifo+0x1a>
 8003dde:	2300      	movs	r3, #0
 8003de0:	4618      	mov	r0, r3
 8003de2:	3714      	adds	r7, #20
 8003de4:	46bd      	mov	sp, r7
 8003de6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003dea:	4770      	bx	lr
 8003dec:	00030d40 	.word	0x00030d40

08003df0 <USB_FlushRxFifo>:
 8003df0:	b480      	push	{r7}
 8003df2:	b085      	sub	sp, #20
 8003df4:	af00      	add	r7, sp, #0
 8003df6:	6078      	str	r0, [r7, #4]
 8003df8:	2300      	movs	r3, #0
 8003dfa:	60fb      	str	r3, [r7, #12]
 8003dfc:	687b      	ldr	r3, [r7, #4]
 8003dfe:	2210      	movs	r2, #16
 8003e00:	611a      	str	r2, [r3, #16]
 8003e02:	68fb      	ldr	r3, [r7, #12]
 8003e04:	3301      	adds	r3, #1
 8003e06:	60fb      	str	r3, [r7, #12]
 8003e08:	4a08      	ldr	r2, [pc, #32]	; (8003e2c <USB_FlushRxFifo+0x3c>)
 8003e0a:	4293      	cmp	r3, r2
 8003e0c:	d901      	bls.n	8003e12 <USB_FlushRxFifo+0x22>
 8003e0e:	2303      	movs	r3, #3
 8003e10:	e006      	b.n	8003e20 <USB_FlushRxFifo+0x30>
 8003e12:	687b      	ldr	r3, [r7, #4]
 8003e14:	691b      	ldr	r3, [r3, #16]
 8003e16:	f003 0310 	and.w	r3, r3, #16
 8003e1a:	2b10      	cmp	r3, #16
 8003e1c:	d0f1      	beq.n	8003e02 <USB_FlushRxFifo+0x12>
 8003e1e:	2300      	movs	r3, #0
 8003e20:	4618      	mov	r0, r3
 8003e22:	3714      	adds	r7, #20
 8003e24:	46bd      	mov	sp, r7
 8003e26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e2a:	4770      	bx	lr
 8003e2c:	00030d40 	.word	0x00030d40

08003e30 <USB_WritePacket>:
 8003e30:	b480      	push	{r7}
 8003e32:	b089      	sub	sp, #36	; 0x24
 8003e34:	af00      	add	r7, sp, #0
 8003e36:	60f8      	str	r0, [r7, #12]
 8003e38:	60b9      	str	r1, [r7, #8]
 8003e3a:	4611      	mov	r1, r2
 8003e3c:	461a      	mov	r2, r3
 8003e3e:	460b      	mov	r3, r1
 8003e40:	71fb      	strb	r3, [r7, #7]
 8003e42:	4613      	mov	r3, r2
 8003e44:	80bb      	strh	r3, [r7, #4]
 8003e46:	68fb      	ldr	r3, [r7, #12]
 8003e48:	617b      	str	r3, [r7, #20]
 8003e4a:	68bb      	ldr	r3, [r7, #8]
 8003e4c:	61fb      	str	r3, [r7, #28]
 8003e4e:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8003e52:	2b00      	cmp	r3, #0
 8003e54:	d123      	bne.n	8003e9e <USB_WritePacket+0x6e>
 8003e56:	88bb      	ldrh	r3, [r7, #4]
 8003e58:	3303      	adds	r3, #3
 8003e5a:	089b      	lsrs	r3, r3, #2
 8003e5c:	613b      	str	r3, [r7, #16]
 8003e5e:	2300      	movs	r3, #0
 8003e60:	61bb      	str	r3, [r7, #24]
 8003e62:	e018      	b.n	8003e96 <USB_WritePacket+0x66>
 8003e64:	79fb      	ldrb	r3, [r7, #7]
 8003e66:	031a      	lsls	r2, r3, #12
 8003e68:	697b      	ldr	r3, [r7, #20]
 8003e6a:	4413      	add	r3, r2
 8003e6c:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8003e70:	461a      	mov	r2, r3
 8003e72:	69fb      	ldr	r3, [r7, #28]
 8003e74:	681b      	ldr	r3, [r3, #0]
 8003e76:	6013      	str	r3, [r2, #0]
 8003e78:	69fb      	ldr	r3, [r7, #28]
 8003e7a:	3301      	adds	r3, #1
 8003e7c:	61fb      	str	r3, [r7, #28]
 8003e7e:	69fb      	ldr	r3, [r7, #28]
 8003e80:	3301      	adds	r3, #1
 8003e82:	61fb      	str	r3, [r7, #28]
 8003e84:	69fb      	ldr	r3, [r7, #28]
 8003e86:	3301      	adds	r3, #1
 8003e88:	61fb      	str	r3, [r7, #28]
 8003e8a:	69fb      	ldr	r3, [r7, #28]
 8003e8c:	3301      	adds	r3, #1
 8003e8e:	61fb      	str	r3, [r7, #28]
 8003e90:	69bb      	ldr	r3, [r7, #24]
 8003e92:	3301      	adds	r3, #1
 8003e94:	61bb      	str	r3, [r7, #24]
 8003e96:	69ba      	ldr	r2, [r7, #24]
 8003e98:	693b      	ldr	r3, [r7, #16]
 8003e9a:	429a      	cmp	r2, r3
 8003e9c:	d3e2      	bcc.n	8003e64 <USB_WritePacket+0x34>
 8003e9e:	2300      	movs	r3, #0
 8003ea0:	4618      	mov	r0, r3
 8003ea2:	3724      	adds	r7, #36	; 0x24
 8003ea4:	46bd      	mov	sp, r7
 8003ea6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003eaa:	4770      	bx	lr

08003eac <USB_ReadPacket>:
 8003eac:	b480      	push	{r7}
 8003eae:	b08b      	sub	sp, #44	; 0x2c
 8003eb0:	af00      	add	r7, sp, #0
 8003eb2:	60f8      	str	r0, [r7, #12]
 8003eb4:	60b9      	str	r1, [r7, #8]
 8003eb6:	4613      	mov	r3, r2
 8003eb8:	80fb      	strh	r3, [r7, #6]
 8003eba:	68fb      	ldr	r3, [r7, #12]
 8003ebc:	61bb      	str	r3, [r7, #24]
 8003ebe:	68bb      	ldr	r3, [r7, #8]
 8003ec0:	627b      	str	r3, [r7, #36]	; 0x24
 8003ec2:	88fb      	ldrh	r3, [r7, #6]
 8003ec4:	089b      	lsrs	r3, r3, #2
 8003ec6:	b29b      	uxth	r3, r3
 8003ec8:	617b      	str	r3, [r7, #20]
 8003eca:	88fb      	ldrh	r3, [r7, #6]
 8003ecc:	f003 0303 	and.w	r3, r3, #3
 8003ed0:	83fb      	strh	r3, [r7, #30]
 8003ed2:	2300      	movs	r3, #0
 8003ed4:	623b      	str	r3, [r7, #32]
 8003ed6:	e014      	b.n	8003f02 <USB_ReadPacket+0x56>
 8003ed8:	69bb      	ldr	r3, [r7, #24]
 8003eda:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8003ede:	681a      	ldr	r2, [r3, #0]
 8003ee0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003ee2:	601a      	str	r2, [r3, #0]
 8003ee4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003ee6:	3301      	adds	r3, #1
 8003ee8:	627b      	str	r3, [r7, #36]	; 0x24
 8003eea:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003eec:	3301      	adds	r3, #1
 8003eee:	627b      	str	r3, [r7, #36]	; 0x24
 8003ef0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003ef2:	3301      	adds	r3, #1
 8003ef4:	627b      	str	r3, [r7, #36]	; 0x24
 8003ef6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003ef8:	3301      	adds	r3, #1
 8003efa:	627b      	str	r3, [r7, #36]	; 0x24
 8003efc:	6a3b      	ldr	r3, [r7, #32]
 8003efe:	3301      	adds	r3, #1
 8003f00:	623b      	str	r3, [r7, #32]
 8003f02:	6a3a      	ldr	r2, [r7, #32]
 8003f04:	697b      	ldr	r3, [r7, #20]
 8003f06:	429a      	cmp	r2, r3
 8003f08:	d3e6      	bcc.n	8003ed8 <USB_ReadPacket+0x2c>
 8003f0a:	8bfb      	ldrh	r3, [r7, #30]
 8003f0c:	2b00      	cmp	r3, #0
 8003f0e:	d01e      	beq.n	8003f4e <USB_ReadPacket+0xa2>
 8003f10:	2300      	movs	r3, #0
 8003f12:	623b      	str	r3, [r7, #32]
 8003f14:	69bb      	ldr	r3, [r7, #24]
 8003f16:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8003f1a:	461a      	mov	r2, r3
 8003f1c:	f107 0310 	add.w	r3, r7, #16
 8003f20:	6812      	ldr	r2, [r2, #0]
 8003f22:	601a      	str	r2, [r3, #0]
 8003f24:	693a      	ldr	r2, [r7, #16]
 8003f26:	6a3b      	ldr	r3, [r7, #32]
 8003f28:	b2db      	uxtb	r3, r3
 8003f2a:	00db      	lsls	r3, r3, #3
 8003f2c:	fa22 f303 	lsr.w	r3, r2, r3
 8003f30:	b2da      	uxtb	r2, r3
 8003f32:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003f34:	701a      	strb	r2, [r3, #0]
 8003f36:	6a3b      	ldr	r3, [r7, #32]
 8003f38:	3301      	adds	r3, #1
 8003f3a:	623b      	str	r3, [r7, #32]
 8003f3c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003f3e:	3301      	adds	r3, #1
 8003f40:	627b      	str	r3, [r7, #36]	; 0x24
 8003f42:	8bfb      	ldrh	r3, [r7, #30]
 8003f44:	3b01      	subs	r3, #1
 8003f46:	83fb      	strh	r3, [r7, #30]
 8003f48:	8bfb      	ldrh	r3, [r7, #30]
 8003f4a:	2b00      	cmp	r3, #0
 8003f4c:	d1ea      	bne.n	8003f24 <USB_ReadPacket+0x78>
 8003f4e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003f50:	4618      	mov	r0, r3
 8003f52:	372c      	adds	r7, #44	; 0x2c
 8003f54:	46bd      	mov	sp, r7
 8003f56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f5a:	4770      	bx	lr

08003f5c <USB_ReadInterrupts>:
 8003f5c:	b480      	push	{r7}
 8003f5e:	b085      	sub	sp, #20
 8003f60:	af00      	add	r7, sp, #0
 8003f62:	6078      	str	r0, [r7, #4]
 8003f64:	687b      	ldr	r3, [r7, #4]
 8003f66:	695b      	ldr	r3, [r3, #20]
 8003f68:	60fb      	str	r3, [r7, #12]
 8003f6a:	687b      	ldr	r3, [r7, #4]
 8003f6c:	699b      	ldr	r3, [r3, #24]
 8003f6e:	68fa      	ldr	r2, [r7, #12]
 8003f70:	4013      	ands	r3, r2
 8003f72:	60fb      	str	r3, [r7, #12]
 8003f74:	68fb      	ldr	r3, [r7, #12]
 8003f76:	4618      	mov	r0, r3
 8003f78:	3714      	adds	r7, #20
 8003f7a:	46bd      	mov	sp, r7
 8003f7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f80:	4770      	bx	lr

08003f82 <USB_GetMode>:
 8003f82:	b480      	push	{r7}
 8003f84:	b083      	sub	sp, #12
 8003f86:	af00      	add	r7, sp, #0
 8003f88:	6078      	str	r0, [r7, #4]
 8003f8a:	687b      	ldr	r3, [r7, #4]
 8003f8c:	695b      	ldr	r3, [r3, #20]
 8003f8e:	f003 0301 	and.w	r3, r3, #1
 8003f92:	4618      	mov	r0, r3
 8003f94:	370c      	adds	r7, #12
 8003f96:	46bd      	mov	sp, r7
 8003f98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f9c:	4770      	bx	lr
	...

08003fa0 <USB_CoreReset>:
 8003fa0:	b480      	push	{r7}
 8003fa2:	b085      	sub	sp, #20
 8003fa4:	af00      	add	r7, sp, #0
 8003fa6:	6078      	str	r0, [r7, #4]
 8003fa8:	2300      	movs	r3, #0
 8003faa:	60fb      	str	r3, [r7, #12]
 8003fac:	68fb      	ldr	r3, [r7, #12]
 8003fae:	3301      	adds	r3, #1
 8003fb0:	60fb      	str	r3, [r7, #12]
 8003fb2:	4a13      	ldr	r2, [pc, #76]	; (8004000 <USB_CoreReset+0x60>)
 8003fb4:	4293      	cmp	r3, r2
 8003fb6:	d901      	bls.n	8003fbc <USB_CoreReset+0x1c>
 8003fb8:	2303      	movs	r3, #3
 8003fba:	e01a      	b.n	8003ff2 <USB_CoreReset+0x52>
 8003fbc:	687b      	ldr	r3, [r7, #4]
 8003fbe:	691b      	ldr	r3, [r3, #16]
 8003fc0:	2b00      	cmp	r3, #0
 8003fc2:	daf3      	bge.n	8003fac <USB_CoreReset+0xc>
 8003fc4:	2300      	movs	r3, #0
 8003fc6:	60fb      	str	r3, [r7, #12]
 8003fc8:	687b      	ldr	r3, [r7, #4]
 8003fca:	691b      	ldr	r3, [r3, #16]
 8003fcc:	f043 0201 	orr.w	r2, r3, #1
 8003fd0:	687b      	ldr	r3, [r7, #4]
 8003fd2:	611a      	str	r2, [r3, #16]
 8003fd4:	68fb      	ldr	r3, [r7, #12]
 8003fd6:	3301      	adds	r3, #1
 8003fd8:	60fb      	str	r3, [r7, #12]
 8003fda:	4a09      	ldr	r2, [pc, #36]	; (8004000 <USB_CoreReset+0x60>)
 8003fdc:	4293      	cmp	r3, r2
 8003fde:	d901      	bls.n	8003fe4 <USB_CoreReset+0x44>
 8003fe0:	2303      	movs	r3, #3
 8003fe2:	e006      	b.n	8003ff2 <USB_CoreReset+0x52>
 8003fe4:	687b      	ldr	r3, [r7, #4]
 8003fe6:	691b      	ldr	r3, [r3, #16]
 8003fe8:	f003 0301 	and.w	r3, r3, #1
 8003fec:	2b01      	cmp	r3, #1
 8003fee:	d0f1      	beq.n	8003fd4 <USB_CoreReset+0x34>
 8003ff0:	2300      	movs	r3, #0
 8003ff2:	4618      	mov	r0, r3
 8003ff4:	3714      	adds	r7, #20
 8003ff6:	46bd      	mov	sp, r7
 8003ff8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ffc:	4770      	bx	lr
 8003ffe:	bf00      	nop
 8004000:	00030d40 	.word	0x00030d40

08004004 <USB_HostInit>:
 8004004:	b084      	sub	sp, #16
 8004006:	b580      	push	{r7, lr}
 8004008:	b084      	sub	sp, #16
 800400a:	af00      	add	r7, sp, #0
 800400c:	6078      	str	r0, [r7, #4]
 800400e:	f107 001c 	add.w	r0, r7, #28
 8004012:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 8004016:	687b      	ldr	r3, [r7, #4]
 8004018:	60bb      	str	r3, [r7, #8]
 800401a:	68bb      	ldr	r3, [r7, #8]
 800401c:	f503 6360 	add.w	r3, r3, #3584	; 0xe00
 8004020:	461a      	mov	r2, r3
 8004022:	2300      	movs	r3, #0
 8004024:	6013      	str	r3, [r2, #0]
 8004026:	687b      	ldr	r3, [r7, #4]
 8004028:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800402a:	f443 1200 	orr.w	r2, r3, #2097152	; 0x200000
 800402e:	687b      	ldr	r3, [r7, #4]
 8004030:	639a      	str	r2, [r3, #56]	; 0x38
 8004032:	687b      	ldr	r3, [r7, #4]
 8004034:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004036:	f423 2200 	bic.w	r2, r3, #524288	; 0x80000
 800403a:	687b      	ldr	r3, [r7, #4]
 800403c:	639a      	str	r2, [r3, #56]	; 0x38
 800403e:	687b      	ldr	r3, [r7, #4]
 8004040:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004042:	f423 2280 	bic.w	r2, r3, #262144	; 0x40000
 8004046:	687b      	ldr	r3, [r7, #4]
 8004048:	639a      	str	r2, [r3, #56]	; 0x38
 800404a:	687b      	ldr	r3, [r7, #4]
 800404c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800404e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004052:	2b00      	cmp	r3, #0
 8004054:	d018      	beq.n	8004088 <USB_HostInit+0x84>
 8004056:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004058:	2b01      	cmp	r3, #1
 800405a:	d10a      	bne.n	8004072 <USB_HostInit+0x6e>
 800405c:	68bb      	ldr	r3, [r7, #8]
 800405e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004062:	681b      	ldr	r3, [r3, #0]
 8004064:	68ba      	ldr	r2, [r7, #8]
 8004066:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800406a:	f043 0304 	orr.w	r3, r3, #4
 800406e:	6013      	str	r3, [r2, #0]
 8004070:	e014      	b.n	800409c <USB_HostInit+0x98>
 8004072:	68bb      	ldr	r3, [r7, #8]
 8004074:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004078:	681b      	ldr	r3, [r3, #0]
 800407a:	68ba      	ldr	r2, [r7, #8]
 800407c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8004080:	f023 0304 	bic.w	r3, r3, #4
 8004084:	6013      	str	r3, [r2, #0]
 8004086:	e009      	b.n	800409c <USB_HostInit+0x98>
 8004088:	68bb      	ldr	r3, [r7, #8]
 800408a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800408e:	681b      	ldr	r3, [r3, #0]
 8004090:	68ba      	ldr	r2, [r7, #8]
 8004092:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8004096:	f023 0304 	bic.w	r3, r3, #4
 800409a:	6013      	str	r3, [r2, #0]
 800409c:	2110      	movs	r1, #16
 800409e:	6878      	ldr	r0, [r7, #4]
 80040a0:	f7ff fe82 	bl	8003da8 <USB_FlushTxFifo>
 80040a4:	6878      	ldr	r0, [r7, #4]
 80040a6:	f7ff fea3 	bl	8003df0 <USB_FlushRxFifo>
 80040aa:	2300      	movs	r3, #0
 80040ac:	60fb      	str	r3, [r7, #12]
 80040ae:	e015      	b.n	80040dc <USB_HostInit+0xd8>
 80040b0:	68fb      	ldr	r3, [r7, #12]
 80040b2:	015a      	lsls	r2, r3, #5
 80040b4:	68bb      	ldr	r3, [r7, #8]
 80040b6:	4413      	add	r3, r2
 80040b8:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 80040bc:	461a      	mov	r2, r3
 80040be:	f04f 33ff 	mov.w	r3, #4294967295
 80040c2:	6093      	str	r3, [r2, #8]
 80040c4:	68fb      	ldr	r3, [r7, #12]
 80040c6:	015a      	lsls	r2, r3, #5
 80040c8:	68bb      	ldr	r3, [r7, #8]
 80040ca:	4413      	add	r3, r2
 80040cc:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 80040d0:	461a      	mov	r2, r3
 80040d2:	2300      	movs	r3, #0
 80040d4:	60d3      	str	r3, [r2, #12]
 80040d6:	68fb      	ldr	r3, [r7, #12]
 80040d8:	3301      	adds	r3, #1
 80040da:	60fb      	str	r3, [r7, #12]
 80040dc:	6a3b      	ldr	r3, [r7, #32]
 80040de:	68fa      	ldr	r2, [r7, #12]
 80040e0:	429a      	cmp	r2, r3
 80040e2:	d3e5      	bcc.n	80040b0 <USB_HostInit+0xac>
 80040e4:	687b      	ldr	r3, [r7, #4]
 80040e6:	2200      	movs	r2, #0
 80040e8:	619a      	str	r2, [r3, #24]
 80040ea:	687b      	ldr	r3, [r7, #4]
 80040ec:	f04f 32ff 	mov.w	r2, #4294967295
 80040f0:	615a      	str	r2, [r3, #20]
 80040f2:	687b      	ldr	r3, [r7, #4]
 80040f4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80040f6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80040fa:	2b00      	cmp	r3, #0
 80040fc:	d00b      	beq.n	8004116 <USB_HostInit+0x112>
 80040fe:	687b      	ldr	r3, [r7, #4]
 8004100:	f44f 7200 	mov.w	r2, #512	; 0x200
 8004104:	625a      	str	r2, [r3, #36]	; 0x24
 8004106:	687b      	ldr	r3, [r7, #4]
 8004108:	4a13      	ldr	r2, [pc, #76]	; (8004158 <USB_HostInit+0x154>)
 800410a:	629a      	str	r2, [r3, #40]	; 0x28
 800410c:	687b      	ldr	r3, [r7, #4]
 800410e:	4a13      	ldr	r2, [pc, #76]	; (800415c <USB_HostInit+0x158>)
 8004110:	f8c3 2100 	str.w	r2, [r3, #256]	; 0x100
 8004114:	e009      	b.n	800412a <USB_HostInit+0x126>
 8004116:	687b      	ldr	r3, [r7, #4]
 8004118:	2280      	movs	r2, #128	; 0x80
 800411a:	625a      	str	r2, [r3, #36]	; 0x24
 800411c:	687b      	ldr	r3, [r7, #4]
 800411e:	4a10      	ldr	r2, [pc, #64]	; (8004160 <USB_HostInit+0x15c>)
 8004120:	629a      	str	r2, [r3, #40]	; 0x28
 8004122:	687b      	ldr	r3, [r7, #4]
 8004124:	4a0f      	ldr	r2, [pc, #60]	; (8004164 <USB_HostInit+0x160>)
 8004126:	f8c3 2100 	str.w	r2, [r3, #256]	; 0x100
 800412a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800412c:	2b00      	cmp	r3, #0
 800412e:	d105      	bne.n	800413c <USB_HostInit+0x138>
 8004130:	687b      	ldr	r3, [r7, #4]
 8004132:	699b      	ldr	r3, [r3, #24]
 8004134:	f043 0210 	orr.w	r2, r3, #16
 8004138:	687b      	ldr	r3, [r7, #4]
 800413a:	619a      	str	r2, [r3, #24]
 800413c:	687b      	ldr	r3, [r7, #4]
 800413e:	699a      	ldr	r2, [r3, #24]
 8004140:	4b09      	ldr	r3, [pc, #36]	; (8004168 <USB_HostInit+0x164>)
 8004142:	4313      	orrs	r3, r2
 8004144:	687a      	ldr	r2, [r7, #4]
 8004146:	6193      	str	r3, [r2, #24]
 8004148:	2300      	movs	r3, #0
 800414a:	4618      	mov	r0, r3
 800414c:	3710      	adds	r7, #16
 800414e:	46bd      	mov	sp, r7
 8004150:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8004154:	b004      	add	sp, #16
 8004156:	4770      	bx	lr
 8004158:	01000200 	.word	0x01000200
 800415c:	00e00300 	.word	0x00e00300
 8004160:	00600080 	.word	0x00600080
 8004164:	004000e0 	.word	0x004000e0
 8004168:	a3200008 	.word	0xa3200008

0800416c <USB_InitFSLSPClkSel>:
 800416c:	b480      	push	{r7}
 800416e:	b085      	sub	sp, #20
 8004170:	af00      	add	r7, sp, #0
 8004172:	6078      	str	r0, [r7, #4]
 8004174:	460b      	mov	r3, r1
 8004176:	70fb      	strb	r3, [r7, #3]
 8004178:	687b      	ldr	r3, [r7, #4]
 800417a:	60fb      	str	r3, [r7, #12]
 800417c:	68fb      	ldr	r3, [r7, #12]
 800417e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004182:	681b      	ldr	r3, [r3, #0]
 8004184:	68fa      	ldr	r2, [r7, #12]
 8004186:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800418a:	f023 0303 	bic.w	r3, r3, #3
 800418e:	6013      	str	r3, [r2, #0]
 8004190:	68fb      	ldr	r3, [r7, #12]
 8004192:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004196:	681a      	ldr	r2, [r3, #0]
 8004198:	78fb      	ldrb	r3, [r7, #3]
 800419a:	f003 0303 	and.w	r3, r3, #3
 800419e:	68f9      	ldr	r1, [r7, #12]
 80041a0:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 80041a4:	4313      	orrs	r3, r2
 80041a6:	600b      	str	r3, [r1, #0]
 80041a8:	78fb      	ldrb	r3, [r7, #3]
 80041aa:	2b01      	cmp	r3, #1
 80041ac:	d107      	bne.n	80041be <USB_InitFSLSPClkSel+0x52>
 80041ae:	68fb      	ldr	r3, [r7, #12]
 80041b0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80041b4:	461a      	mov	r2, r3
 80041b6:	f64b 3380 	movw	r3, #48000	; 0xbb80
 80041ba:	6053      	str	r3, [r2, #4]
 80041bc:	e009      	b.n	80041d2 <USB_InitFSLSPClkSel+0x66>
 80041be:	78fb      	ldrb	r3, [r7, #3]
 80041c0:	2b02      	cmp	r3, #2
 80041c2:	d106      	bne.n	80041d2 <USB_InitFSLSPClkSel+0x66>
 80041c4:	68fb      	ldr	r3, [r7, #12]
 80041c6:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80041ca:	461a      	mov	r2, r3
 80041cc:	f241 7370 	movw	r3, #6000	; 0x1770
 80041d0:	6053      	str	r3, [r2, #4]
 80041d2:	2300      	movs	r3, #0
 80041d4:	4618      	mov	r0, r3
 80041d6:	3714      	adds	r7, #20
 80041d8:	46bd      	mov	sp, r7
 80041da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041de:	4770      	bx	lr

080041e0 <USB_ResetPort>:
 80041e0:	b580      	push	{r7, lr}
 80041e2:	b084      	sub	sp, #16
 80041e4:	af00      	add	r7, sp, #0
 80041e6:	6078      	str	r0, [r7, #4]
 80041e8:	687b      	ldr	r3, [r7, #4]
 80041ea:	60fb      	str	r3, [r7, #12]
 80041ec:	2300      	movs	r3, #0
 80041ee:	60bb      	str	r3, [r7, #8]
 80041f0:	68fb      	ldr	r3, [r7, #12]
 80041f2:	f503 6388 	add.w	r3, r3, #1088	; 0x440
 80041f6:	681b      	ldr	r3, [r3, #0]
 80041f8:	60bb      	str	r3, [r7, #8]
 80041fa:	68bb      	ldr	r3, [r7, #8]
 80041fc:	f023 032e 	bic.w	r3, r3, #46	; 0x2e
 8004200:	60bb      	str	r3, [r7, #8]
 8004202:	68bb      	ldr	r3, [r7, #8]
 8004204:	68fa      	ldr	r2, [r7, #12]
 8004206:	f502 6288 	add.w	r2, r2, #1088	; 0x440
 800420a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800420e:	6013      	str	r3, [r2, #0]
 8004210:	2064      	movs	r0, #100	; 0x64
 8004212:	f7fc fd71 	bl	8000cf8 <HAL_Delay>
 8004216:	68bb      	ldr	r3, [r7, #8]
 8004218:	68fa      	ldr	r2, [r7, #12]
 800421a:	f502 6288 	add.w	r2, r2, #1088	; 0x440
 800421e:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8004222:	6013      	str	r3, [r2, #0]
 8004224:	200a      	movs	r0, #10
 8004226:	f7fc fd67 	bl	8000cf8 <HAL_Delay>
 800422a:	2300      	movs	r3, #0
 800422c:	4618      	mov	r0, r3
 800422e:	3710      	adds	r7, #16
 8004230:	46bd      	mov	sp, r7
 8004232:	bd80      	pop	{r7, pc}

08004234 <USB_DriveVbus>:
 8004234:	b480      	push	{r7}
 8004236:	b085      	sub	sp, #20
 8004238:	af00      	add	r7, sp, #0
 800423a:	6078      	str	r0, [r7, #4]
 800423c:	460b      	mov	r3, r1
 800423e:	70fb      	strb	r3, [r7, #3]
 8004240:	687b      	ldr	r3, [r7, #4]
 8004242:	60fb      	str	r3, [r7, #12]
 8004244:	2300      	movs	r3, #0
 8004246:	60bb      	str	r3, [r7, #8]
 8004248:	68fb      	ldr	r3, [r7, #12]
 800424a:	f503 6388 	add.w	r3, r3, #1088	; 0x440
 800424e:	681b      	ldr	r3, [r3, #0]
 8004250:	60bb      	str	r3, [r7, #8]
 8004252:	68bb      	ldr	r3, [r7, #8]
 8004254:	f023 032e 	bic.w	r3, r3, #46	; 0x2e
 8004258:	60bb      	str	r3, [r7, #8]
 800425a:	68bb      	ldr	r3, [r7, #8]
 800425c:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8004260:	2b00      	cmp	r3, #0
 8004262:	d109      	bne.n	8004278 <USB_DriveVbus+0x44>
 8004264:	78fb      	ldrb	r3, [r7, #3]
 8004266:	2b01      	cmp	r3, #1
 8004268:	d106      	bne.n	8004278 <USB_DriveVbus+0x44>
 800426a:	68bb      	ldr	r3, [r7, #8]
 800426c:	68fa      	ldr	r2, [r7, #12]
 800426e:	f502 6288 	add.w	r2, r2, #1088	; 0x440
 8004272:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8004276:	6013      	str	r3, [r2, #0]
 8004278:	68bb      	ldr	r3, [r7, #8]
 800427a:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 800427e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8004282:	d109      	bne.n	8004298 <USB_DriveVbus+0x64>
 8004284:	78fb      	ldrb	r3, [r7, #3]
 8004286:	2b00      	cmp	r3, #0
 8004288:	d106      	bne.n	8004298 <USB_DriveVbus+0x64>
 800428a:	68bb      	ldr	r3, [r7, #8]
 800428c:	68fa      	ldr	r2, [r7, #12]
 800428e:	f502 6288 	add.w	r2, r2, #1088	; 0x440
 8004292:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8004296:	6013      	str	r3, [r2, #0]
 8004298:	2300      	movs	r3, #0
 800429a:	4618      	mov	r0, r3
 800429c:	3714      	adds	r7, #20
 800429e:	46bd      	mov	sp, r7
 80042a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80042a4:	4770      	bx	lr

080042a6 <USB_GetHostSpeed>:
 80042a6:	b480      	push	{r7}
 80042a8:	b085      	sub	sp, #20
 80042aa:	af00      	add	r7, sp, #0
 80042ac:	6078      	str	r0, [r7, #4]
 80042ae:	687b      	ldr	r3, [r7, #4]
 80042b0:	60fb      	str	r3, [r7, #12]
 80042b2:	2300      	movs	r3, #0
 80042b4:	60bb      	str	r3, [r7, #8]
 80042b6:	68fb      	ldr	r3, [r7, #12]
 80042b8:	f503 6388 	add.w	r3, r3, #1088	; 0x440
 80042bc:	681b      	ldr	r3, [r3, #0]
 80042be:	60bb      	str	r3, [r7, #8]
 80042c0:	68bb      	ldr	r3, [r7, #8]
 80042c2:	0c5b      	lsrs	r3, r3, #17
 80042c4:	f003 0303 	and.w	r3, r3, #3
 80042c8:	4618      	mov	r0, r3
 80042ca:	3714      	adds	r7, #20
 80042cc:	46bd      	mov	sp, r7
 80042ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80042d2:	4770      	bx	lr

080042d4 <USB_GetCurrentFrame>:
 80042d4:	b480      	push	{r7}
 80042d6:	b085      	sub	sp, #20
 80042d8:	af00      	add	r7, sp, #0
 80042da:	6078      	str	r0, [r7, #4]
 80042dc:	687b      	ldr	r3, [r7, #4]
 80042de:	60fb      	str	r3, [r7, #12]
 80042e0:	68fb      	ldr	r3, [r7, #12]
 80042e2:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80042e6:	689b      	ldr	r3, [r3, #8]
 80042e8:	b29b      	uxth	r3, r3
 80042ea:	4618      	mov	r0, r3
 80042ec:	3714      	adds	r7, #20
 80042ee:	46bd      	mov	sp, r7
 80042f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80042f4:	4770      	bx	lr
	...

080042f8 <USB_HC_Init>:
 80042f8:	b580      	push	{r7, lr}
 80042fa:	b088      	sub	sp, #32
 80042fc:	af00      	add	r7, sp, #0
 80042fe:	6078      	str	r0, [r7, #4]
 8004300:	4608      	mov	r0, r1
 8004302:	4611      	mov	r1, r2
 8004304:	461a      	mov	r2, r3
 8004306:	4603      	mov	r3, r0
 8004308:	70fb      	strb	r3, [r7, #3]
 800430a:	460b      	mov	r3, r1
 800430c:	70bb      	strb	r3, [r7, #2]
 800430e:	4613      	mov	r3, r2
 8004310:	707b      	strb	r3, [r7, #1]
 8004312:	2300      	movs	r3, #0
 8004314:	77fb      	strb	r3, [r7, #31]
 8004316:	687b      	ldr	r3, [r7, #4]
 8004318:	613b      	str	r3, [r7, #16]
 800431a:	78fb      	ldrb	r3, [r7, #3]
 800431c:	015a      	lsls	r2, r3, #5
 800431e:	693b      	ldr	r3, [r7, #16]
 8004320:	4413      	add	r3, r2
 8004322:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8004326:	461a      	mov	r2, r3
 8004328:	f04f 33ff 	mov.w	r3, #4294967295
 800432c:	6093      	str	r3, [r2, #8]
 800432e:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 8004332:	2b03      	cmp	r3, #3
 8004334:	d87e      	bhi.n	8004434 <USB_HC_Init+0x13c>
 8004336:	a201      	add	r2, pc, #4	; (adr r2, 800433c <USB_HC_Init+0x44>)
 8004338:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800433c:	0800434d 	.word	0x0800434d
 8004340:	080043f7 	.word	0x080043f7
 8004344:	0800434d 	.word	0x0800434d
 8004348:	080043b9 	.word	0x080043b9
 800434c:	78fb      	ldrb	r3, [r7, #3]
 800434e:	015a      	lsls	r2, r3, #5
 8004350:	693b      	ldr	r3, [r7, #16]
 8004352:	4413      	add	r3, r2
 8004354:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8004358:	461a      	mov	r2, r3
 800435a:	f240 439d 	movw	r3, #1181	; 0x49d
 800435e:	60d3      	str	r3, [r2, #12]
 8004360:	f997 3002 	ldrsb.w	r3, [r7, #2]
 8004364:	2b00      	cmp	r3, #0
 8004366:	da10      	bge.n	800438a <USB_HC_Init+0x92>
 8004368:	78fb      	ldrb	r3, [r7, #3]
 800436a:	015a      	lsls	r2, r3, #5
 800436c:	693b      	ldr	r3, [r7, #16]
 800436e:	4413      	add	r3, r2
 8004370:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8004374:	68db      	ldr	r3, [r3, #12]
 8004376:	78fa      	ldrb	r2, [r7, #3]
 8004378:	0151      	lsls	r1, r2, #5
 800437a:	693a      	ldr	r2, [r7, #16]
 800437c:	440a      	add	r2, r1
 800437e:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
 8004382:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004386:	60d3      	str	r3, [r2, #12]
 8004388:	e057      	b.n	800443a <USB_HC_Init+0x142>
 800438a:	687b      	ldr	r3, [r7, #4]
 800438c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800438e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8004392:	2b00      	cmp	r3, #0
 8004394:	d051      	beq.n	800443a <USB_HC_Init+0x142>
 8004396:	78fb      	ldrb	r3, [r7, #3]
 8004398:	015a      	lsls	r2, r3, #5
 800439a:	693b      	ldr	r3, [r7, #16]
 800439c:	4413      	add	r3, r2
 800439e:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 80043a2:	68db      	ldr	r3, [r3, #12]
 80043a4:	78fa      	ldrb	r2, [r7, #3]
 80043a6:	0151      	lsls	r1, r2, #5
 80043a8:	693a      	ldr	r2, [r7, #16]
 80043aa:	440a      	add	r2, r1
 80043ac:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
 80043b0:	f043 0360 	orr.w	r3, r3, #96	; 0x60
 80043b4:	60d3      	str	r3, [r2, #12]
 80043b6:	e040      	b.n	800443a <USB_HC_Init+0x142>
 80043b8:	78fb      	ldrb	r3, [r7, #3]
 80043ba:	015a      	lsls	r2, r3, #5
 80043bc:	693b      	ldr	r3, [r7, #16]
 80043be:	4413      	add	r3, r2
 80043c0:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 80043c4:	461a      	mov	r2, r3
 80043c6:	f240 639d 	movw	r3, #1693	; 0x69d
 80043ca:	60d3      	str	r3, [r2, #12]
 80043cc:	f997 3002 	ldrsb.w	r3, [r7, #2]
 80043d0:	2b00      	cmp	r3, #0
 80043d2:	da34      	bge.n	800443e <USB_HC_Init+0x146>
 80043d4:	78fb      	ldrb	r3, [r7, #3]
 80043d6:	015a      	lsls	r2, r3, #5
 80043d8:	693b      	ldr	r3, [r7, #16]
 80043da:	4413      	add	r3, r2
 80043dc:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 80043e0:	68db      	ldr	r3, [r3, #12]
 80043e2:	78fa      	ldrb	r2, [r7, #3]
 80043e4:	0151      	lsls	r1, r2, #5
 80043e6:	693a      	ldr	r2, [r7, #16]
 80043e8:	440a      	add	r2, r1
 80043ea:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
 80043ee:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80043f2:	60d3      	str	r3, [r2, #12]
 80043f4:	e023      	b.n	800443e <USB_HC_Init+0x146>
 80043f6:	78fb      	ldrb	r3, [r7, #3]
 80043f8:	015a      	lsls	r2, r3, #5
 80043fa:	693b      	ldr	r3, [r7, #16]
 80043fc:	4413      	add	r3, r2
 80043fe:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8004402:	461a      	mov	r2, r3
 8004404:	f240 2325 	movw	r3, #549	; 0x225
 8004408:	60d3      	str	r3, [r2, #12]
 800440a:	f997 3002 	ldrsb.w	r3, [r7, #2]
 800440e:	2b00      	cmp	r3, #0
 8004410:	da17      	bge.n	8004442 <USB_HC_Init+0x14a>
 8004412:	78fb      	ldrb	r3, [r7, #3]
 8004414:	015a      	lsls	r2, r3, #5
 8004416:	693b      	ldr	r3, [r7, #16]
 8004418:	4413      	add	r3, r2
 800441a:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 800441e:	68db      	ldr	r3, [r3, #12]
 8004420:	78fa      	ldrb	r2, [r7, #3]
 8004422:	0151      	lsls	r1, r2, #5
 8004424:	693a      	ldr	r2, [r7, #16]
 8004426:	440a      	add	r2, r1
 8004428:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
 800442c:	f443 73c0 	orr.w	r3, r3, #384	; 0x180
 8004430:	60d3      	str	r3, [r2, #12]
 8004432:	e006      	b.n	8004442 <USB_HC_Init+0x14a>
 8004434:	2301      	movs	r3, #1
 8004436:	77fb      	strb	r3, [r7, #31]
 8004438:	e004      	b.n	8004444 <USB_HC_Init+0x14c>
 800443a:	bf00      	nop
 800443c:	e002      	b.n	8004444 <USB_HC_Init+0x14c>
 800443e:	bf00      	nop
 8004440:	e000      	b.n	8004444 <USB_HC_Init+0x14c>
 8004442:	bf00      	nop
 8004444:	693b      	ldr	r3, [r7, #16]
 8004446:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800444a:	699a      	ldr	r2, [r3, #24]
 800444c:	78fb      	ldrb	r3, [r7, #3]
 800444e:	f003 030f 	and.w	r3, r3, #15
 8004452:	2101      	movs	r1, #1
 8004454:	fa01 f303 	lsl.w	r3, r1, r3
 8004458:	6939      	ldr	r1, [r7, #16]
 800445a:	f501 6180 	add.w	r1, r1, #1024	; 0x400
 800445e:	4313      	orrs	r3, r2
 8004460:	618b      	str	r3, [r1, #24]
 8004462:	687b      	ldr	r3, [r7, #4]
 8004464:	699b      	ldr	r3, [r3, #24]
 8004466:	f043 7200 	orr.w	r2, r3, #33554432	; 0x2000000
 800446a:	687b      	ldr	r3, [r7, #4]
 800446c:	619a      	str	r2, [r3, #24]
 800446e:	f997 3002 	ldrsb.w	r3, [r7, #2]
 8004472:	2b00      	cmp	r3, #0
 8004474:	da03      	bge.n	800447e <USB_HC_Init+0x186>
 8004476:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800447a:	61bb      	str	r3, [r7, #24]
 800447c:	e001      	b.n	8004482 <USB_HC_Init+0x18a>
 800447e:	2300      	movs	r3, #0
 8004480:	61bb      	str	r3, [r7, #24]
 8004482:	6878      	ldr	r0, [r7, #4]
 8004484:	f7ff ff0f 	bl	80042a6 <USB_GetHostSpeed>
 8004488:	60f8      	str	r0, [r7, #12]
 800448a:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800448e:	2b02      	cmp	r3, #2
 8004490:	d106      	bne.n	80044a0 <USB_HC_Init+0x1a8>
 8004492:	68fb      	ldr	r3, [r7, #12]
 8004494:	2b02      	cmp	r3, #2
 8004496:	d003      	beq.n	80044a0 <USB_HC_Init+0x1a8>
 8004498:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 800449c:	617b      	str	r3, [r7, #20]
 800449e:	e001      	b.n	80044a4 <USB_HC_Init+0x1ac>
 80044a0:	2300      	movs	r3, #0
 80044a2:	617b      	str	r3, [r7, #20]
 80044a4:	787b      	ldrb	r3, [r7, #1]
 80044a6:	059b      	lsls	r3, r3, #22
 80044a8:	f003 52fe 	and.w	r2, r3, #532676608	; 0x1fc00000
 80044ac:	78bb      	ldrb	r3, [r7, #2]
 80044ae:	02db      	lsls	r3, r3, #11
 80044b0:	f403 43f0 	and.w	r3, r3, #30720	; 0x7800
 80044b4:	431a      	orrs	r2, r3
 80044b6:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 80044ba:	049b      	lsls	r3, r3, #18
 80044bc:	f403 2340 	and.w	r3, r3, #786432	; 0xc0000
 80044c0:	431a      	orrs	r2, r3
 80044c2:	8e3b      	ldrh	r3, [r7, #48]	; 0x30
 80044c4:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80044c8:	431a      	orrs	r2, r3
 80044ca:	69bb      	ldr	r3, [r7, #24]
 80044cc:	431a      	orrs	r2, r3
 80044ce:	78fb      	ldrb	r3, [r7, #3]
 80044d0:	0159      	lsls	r1, r3, #5
 80044d2:	693b      	ldr	r3, [r7, #16]
 80044d4:	440b      	add	r3, r1
 80044d6:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 80044da:	4619      	mov	r1, r3
 80044dc:	697b      	ldr	r3, [r7, #20]
 80044de:	4313      	orrs	r3, r2
 80044e0:	600b      	str	r3, [r1, #0]
 80044e2:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 80044e6:	2b03      	cmp	r3, #3
 80044e8:	d10f      	bne.n	800450a <USB_HC_Init+0x212>
 80044ea:	78fb      	ldrb	r3, [r7, #3]
 80044ec:	015a      	lsls	r2, r3, #5
 80044ee:	693b      	ldr	r3, [r7, #16]
 80044f0:	4413      	add	r3, r2
 80044f2:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 80044f6:	681b      	ldr	r3, [r3, #0]
 80044f8:	78fa      	ldrb	r2, [r7, #3]
 80044fa:	0151      	lsls	r1, r2, #5
 80044fc:	693a      	ldr	r2, [r7, #16]
 80044fe:	440a      	add	r2, r1
 8004500:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
 8004504:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 8004508:	6013      	str	r3, [r2, #0]
 800450a:	7ffb      	ldrb	r3, [r7, #31]
 800450c:	4618      	mov	r0, r3
 800450e:	3720      	adds	r7, #32
 8004510:	46bd      	mov	sp, r7
 8004512:	bd80      	pop	{r7, pc}

08004514 <USB_HC_StartXfer>:
 8004514:	b580      	push	{r7, lr}
 8004516:	b08c      	sub	sp, #48	; 0x30
 8004518:	af02      	add	r7, sp, #8
 800451a:	60f8      	str	r0, [r7, #12]
 800451c:	60b9      	str	r1, [r7, #8]
 800451e:	4613      	mov	r3, r2
 8004520:	71fb      	strb	r3, [r7, #7]
 8004522:	68fb      	ldr	r3, [r7, #12]
 8004524:	623b      	str	r3, [r7, #32]
 8004526:	68bb      	ldr	r3, [r7, #8]
 8004528:	785b      	ldrb	r3, [r3, #1]
 800452a:	61fb      	str	r3, [r7, #28]
 800452c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004530:	837b      	strh	r3, [r7, #26]
 8004532:	68fb      	ldr	r3, [r7, #12]
 8004534:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004536:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800453a:	2b00      	cmp	r3, #0
 800453c:	d02d      	beq.n	800459a <USB_HC_StartXfer+0x86>
 800453e:	68bb      	ldr	r3, [r7, #8]
 8004540:	791b      	ldrb	r3, [r3, #4]
 8004542:	2b00      	cmp	r3, #0
 8004544:	d129      	bne.n	800459a <USB_HC_StartXfer+0x86>
 8004546:	79fb      	ldrb	r3, [r7, #7]
 8004548:	2b01      	cmp	r3, #1
 800454a:	d117      	bne.n	800457c <USB_HC_StartXfer+0x68>
 800454c:	68bb      	ldr	r3, [r7, #8]
 800454e:	79db      	ldrb	r3, [r3, #7]
 8004550:	2b00      	cmp	r3, #0
 8004552:	d003      	beq.n	800455c <USB_HC_StartXfer+0x48>
 8004554:	68bb      	ldr	r3, [r7, #8]
 8004556:	79db      	ldrb	r3, [r3, #7]
 8004558:	2b02      	cmp	r3, #2
 800455a:	d10f      	bne.n	800457c <USB_HC_StartXfer+0x68>
 800455c:	69fb      	ldr	r3, [r7, #28]
 800455e:	015a      	lsls	r2, r3, #5
 8004560:	6a3b      	ldr	r3, [r7, #32]
 8004562:	4413      	add	r3, r2
 8004564:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8004568:	68db      	ldr	r3, [r3, #12]
 800456a:	69fa      	ldr	r2, [r7, #28]
 800456c:	0151      	lsls	r1, r2, #5
 800456e:	6a3a      	ldr	r2, [r7, #32]
 8004570:	440a      	add	r2, r1
 8004572:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
 8004576:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800457a:	60d3      	str	r3, [r2, #12]
 800457c:	79fb      	ldrb	r3, [r7, #7]
 800457e:	2b00      	cmp	r3, #0
 8004580:	d10b      	bne.n	800459a <USB_HC_StartXfer+0x86>
 8004582:	68bb      	ldr	r3, [r7, #8]
 8004584:	795b      	ldrb	r3, [r3, #5]
 8004586:	2b01      	cmp	r3, #1
 8004588:	d107      	bne.n	800459a <USB_HC_StartXfer+0x86>
 800458a:	68bb      	ldr	r3, [r7, #8]
 800458c:	785b      	ldrb	r3, [r3, #1]
 800458e:	4619      	mov	r1, r3
 8004590:	68f8      	ldr	r0, [r7, #12]
 8004592:	f000 fa2f 	bl	80049f4 <USB_DoPing>
 8004596:	2300      	movs	r3, #0
 8004598:	e0f8      	b.n	800478c <USB_HC_StartXfer+0x278>
 800459a:	68bb      	ldr	r3, [r7, #8]
 800459c:	695b      	ldr	r3, [r3, #20]
 800459e:	2b00      	cmp	r3, #0
 80045a0:	d018      	beq.n	80045d4 <USB_HC_StartXfer+0xc0>
 80045a2:	68bb      	ldr	r3, [r7, #8]
 80045a4:	695b      	ldr	r3, [r3, #20]
 80045a6:	68ba      	ldr	r2, [r7, #8]
 80045a8:	8912      	ldrh	r2, [r2, #8]
 80045aa:	4413      	add	r3, r2
 80045ac:	3b01      	subs	r3, #1
 80045ae:	68ba      	ldr	r2, [r7, #8]
 80045b0:	8912      	ldrh	r2, [r2, #8]
 80045b2:	fbb3 f3f2 	udiv	r3, r3, r2
 80045b6:	84fb      	strh	r3, [r7, #38]	; 0x26
 80045b8:	8cfa      	ldrh	r2, [r7, #38]	; 0x26
 80045ba:	8b7b      	ldrh	r3, [r7, #26]
 80045bc:	429a      	cmp	r2, r3
 80045be:	d90b      	bls.n	80045d8 <USB_HC_StartXfer+0xc4>
 80045c0:	8b7b      	ldrh	r3, [r7, #26]
 80045c2:	84fb      	strh	r3, [r7, #38]	; 0x26
 80045c4:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 80045c6:	68ba      	ldr	r2, [r7, #8]
 80045c8:	8912      	ldrh	r2, [r2, #8]
 80045ca:	fb02 f203 	mul.w	r2, r2, r3
 80045ce:	68bb      	ldr	r3, [r7, #8]
 80045d0:	611a      	str	r2, [r3, #16]
 80045d2:	e001      	b.n	80045d8 <USB_HC_StartXfer+0xc4>
 80045d4:	2301      	movs	r3, #1
 80045d6:	84fb      	strh	r3, [r7, #38]	; 0x26
 80045d8:	68bb      	ldr	r3, [r7, #8]
 80045da:	78db      	ldrb	r3, [r3, #3]
 80045dc:	2b00      	cmp	r3, #0
 80045de:	d007      	beq.n	80045f0 <USB_HC_StartXfer+0xdc>
 80045e0:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 80045e2:	68ba      	ldr	r2, [r7, #8]
 80045e4:	8912      	ldrh	r2, [r2, #8]
 80045e6:	fb02 f203 	mul.w	r2, r2, r3
 80045ea:	68bb      	ldr	r3, [r7, #8]
 80045ec:	611a      	str	r2, [r3, #16]
 80045ee:	e003      	b.n	80045f8 <USB_HC_StartXfer+0xe4>
 80045f0:	68bb      	ldr	r3, [r7, #8]
 80045f2:	695a      	ldr	r2, [r3, #20]
 80045f4:	68bb      	ldr	r3, [r7, #8]
 80045f6:	611a      	str	r2, [r3, #16]
 80045f8:	68bb      	ldr	r3, [r7, #8]
 80045fa:	691b      	ldr	r3, [r3, #16]
 80045fc:	f3c3 0212 	ubfx	r2, r3, #0, #19
 8004600:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 8004602:	04d9      	lsls	r1, r3, #19
 8004604:	4b63      	ldr	r3, [pc, #396]	; (8004794 <USB_HC_StartXfer+0x280>)
 8004606:	400b      	ands	r3, r1
 8004608:	431a      	orrs	r2, r3
 800460a:	68bb      	ldr	r3, [r7, #8]
 800460c:	7a9b      	ldrb	r3, [r3, #10]
 800460e:	075b      	lsls	r3, r3, #29
 8004610:	f003 43c0 	and.w	r3, r3, #1610612736	; 0x60000000
 8004614:	69f9      	ldr	r1, [r7, #28]
 8004616:	0148      	lsls	r0, r1, #5
 8004618:	6a39      	ldr	r1, [r7, #32]
 800461a:	4401      	add	r1, r0
 800461c:	f501 61a0 	add.w	r1, r1, #1280	; 0x500
 8004620:	4313      	orrs	r3, r2
 8004622:	610b      	str	r3, [r1, #16]
 8004624:	79fb      	ldrb	r3, [r7, #7]
 8004626:	2b00      	cmp	r3, #0
 8004628:	d009      	beq.n	800463e <USB_HC_StartXfer+0x12a>
 800462a:	68bb      	ldr	r3, [r7, #8]
 800462c:	68d9      	ldr	r1, [r3, #12]
 800462e:	69fb      	ldr	r3, [r7, #28]
 8004630:	015a      	lsls	r2, r3, #5
 8004632:	6a3b      	ldr	r3, [r7, #32]
 8004634:	4413      	add	r3, r2
 8004636:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 800463a:	460a      	mov	r2, r1
 800463c:	615a      	str	r2, [r3, #20]
 800463e:	6a3b      	ldr	r3, [r7, #32]
 8004640:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004644:	689b      	ldr	r3, [r3, #8]
 8004646:	f003 0301 	and.w	r3, r3, #1
 800464a:	2b00      	cmp	r3, #0
 800464c:	bf0c      	ite	eq
 800464e:	2301      	moveq	r3, #1
 8004650:	2300      	movne	r3, #0
 8004652:	b2db      	uxtb	r3, r3
 8004654:	767b      	strb	r3, [r7, #25]
 8004656:	69fb      	ldr	r3, [r7, #28]
 8004658:	015a      	lsls	r2, r3, #5
 800465a:	6a3b      	ldr	r3, [r7, #32]
 800465c:	4413      	add	r3, r2
 800465e:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8004662:	681b      	ldr	r3, [r3, #0]
 8004664:	69fa      	ldr	r2, [r7, #28]
 8004666:	0151      	lsls	r1, r2, #5
 8004668:	6a3a      	ldr	r2, [r7, #32]
 800466a:	440a      	add	r2, r1
 800466c:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
 8004670:	f023 5300 	bic.w	r3, r3, #536870912	; 0x20000000
 8004674:	6013      	str	r3, [r2, #0]
 8004676:	69fb      	ldr	r3, [r7, #28]
 8004678:	015a      	lsls	r2, r3, #5
 800467a:	6a3b      	ldr	r3, [r7, #32]
 800467c:	4413      	add	r3, r2
 800467e:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8004682:	681a      	ldr	r2, [r3, #0]
 8004684:	7e7b      	ldrb	r3, [r7, #25]
 8004686:	075b      	lsls	r3, r3, #29
 8004688:	69f9      	ldr	r1, [r7, #28]
 800468a:	0148      	lsls	r0, r1, #5
 800468c:	6a39      	ldr	r1, [r7, #32]
 800468e:	4401      	add	r1, r0
 8004690:	f501 61a0 	add.w	r1, r1, #1280	; 0x500
 8004694:	4313      	orrs	r3, r2
 8004696:	600b      	str	r3, [r1, #0]
 8004698:	69fb      	ldr	r3, [r7, #28]
 800469a:	015a      	lsls	r2, r3, #5
 800469c:	6a3b      	ldr	r3, [r7, #32]
 800469e:	4413      	add	r3, r2
 80046a0:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 80046a4:	681b      	ldr	r3, [r3, #0]
 80046a6:	613b      	str	r3, [r7, #16]
 80046a8:	693b      	ldr	r3, [r7, #16]
 80046aa:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 80046ae:	613b      	str	r3, [r7, #16]
 80046b0:	68bb      	ldr	r3, [r7, #8]
 80046b2:	78db      	ldrb	r3, [r3, #3]
 80046b4:	2b00      	cmp	r3, #0
 80046b6:	d004      	beq.n	80046c2 <USB_HC_StartXfer+0x1ae>
 80046b8:	693b      	ldr	r3, [r7, #16]
 80046ba:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80046be:	613b      	str	r3, [r7, #16]
 80046c0:	e003      	b.n	80046ca <USB_HC_StartXfer+0x1b6>
 80046c2:	693b      	ldr	r3, [r7, #16]
 80046c4:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 80046c8:	613b      	str	r3, [r7, #16]
 80046ca:	693b      	ldr	r3, [r7, #16]
 80046cc:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 80046d0:	613b      	str	r3, [r7, #16]
 80046d2:	69fb      	ldr	r3, [r7, #28]
 80046d4:	015a      	lsls	r2, r3, #5
 80046d6:	6a3b      	ldr	r3, [r7, #32]
 80046d8:	4413      	add	r3, r2
 80046da:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 80046de:	461a      	mov	r2, r3
 80046e0:	693b      	ldr	r3, [r7, #16]
 80046e2:	6013      	str	r3, [r2, #0]
 80046e4:	79fb      	ldrb	r3, [r7, #7]
 80046e6:	2b00      	cmp	r3, #0
 80046e8:	d001      	beq.n	80046ee <USB_HC_StartXfer+0x1da>
 80046ea:	2300      	movs	r3, #0
 80046ec:	e04e      	b.n	800478c <USB_HC_StartXfer+0x278>
 80046ee:	68bb      	ldr	r3, [r7, #8]
 80046f0:	78db      	ldrb	r3, [r3, #3]
 80046f2:	2b00      	cmp	r3, #0
 80046f4:	d149      	bne.n	800478a <USB_HC_StartXfer+0x276>
 80046f6:	68bb      	ldr	r3, [r7, #8]
 80046f8:	695b      	ldr	r3, [r3, #20]
 80046fa:	2b00      	cmp	r3, #0
 80046fc:	d045      	beq.n	800478a <USB_HC_StartXfer+0x276>
 80046fe:	68bb      	ldr	r3, [r7, #8]
 8004700:	79db      	ldrb	r3, [r3, #7]
 8004702:	2b03      	cmp	r3, #3
 8004704:	d830      	bhi.n	8004768 <USB_HC_StartXfer+0x254>
 8004706:	a201      	add	r2, pc, #4	; (adr r2, 800470c <USB_HC_StartXfer+0x1f8>)
 8004708:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800470c:	0800471d 	.word	0x0800471d
 8004710:	08004741 	.word	0x08004741
 8004714:	0800471d 	.word	0x0800471d
 8004718:	08004741 	.word	0x08004741
 800471c:	68bb      	ldr	r3, [r7, #8]
 800471e:	695b      	ldr	r3, [r3, #20]
 8004720:	3303      	adds	r3, #3
 8004722:	089b      	lsrs	r3, r3, #2
 8004724:	82fb      	strh	r3, [r7, #22]
 8004726:	8afa      	ldrh	r2, [r7, #22]
 8004728:	68fb      	ldr	r3, [r7, #12]
 800472a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800472c:	b29b      	uxth	r3, r3
 800472e:	429a      	cmp	r2, r3
 8004730:	d91c      	bls.n	800476c <USB_HC_StartXfer+0x258>
 8004732:	68fb      	ldr	r3, [r7, #12]
 8004734:	699b      	ldr	r3, [r3, #24]
 8004736:	f043 0220 	orr.w	r2, r3, #32
 800473a:	68fb      	ldr	r3, [r7, #12]
 800473c:	619a      	str	r2, [r3, #24]
 800473e:	e015      	b.n	800476c <USB_HC_StartXfer+0x258>
 8004740:	68bb      	ldr	r3, [r7, #8]
 8004742:	695b      	ldr	r3, [r3, #20]
 8004744:	3303      	adds	r3, #3
 8004746:	089b      	lsrs	r3, r3, #2
 8004748:	82fb      	strh	r3, [r7, #22]
 800474a:	8afa      	ldrh	r2, [r7, #22]
 800474c:	6a3b      	ldr	r3, [r7, #32]
 800474e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004752:	691b      	ldr	r3, [r3, #16]
 8004754:	b29b      	uxth	r3, r3
 8004756:	429a      	cmp	r2, r3
 8004758:	d90a      	bls.n	8004770 <USB_HC_StartXfer+0x25c>
 800475a:	68fb      	ldr	r3, [r7, #12]
 800475c:	699b      	ldr	r3, [r3, #24]
 800475e:	f043 6280 	orr.w	r2, r3, #67108864	; 0x4000000
 8004762:	68fb      	ldr	r3, [r7, #12]
 8004764:	619a      	str	r2, [r3, #24]
 8004766:	e003      	b.n	8004770 <USB_HC_StartXfer+0x25c>
 8004768:	bf00      	nop
 800476a:	e002      	b.n	8004772 <USB_HC_StartXfer+0x25e>
 800476c:	bf00      	nop
 800476e:	e000      	b.n	8004772 <USB_HC_StartXfer+0x25e>
 8004770:	bf00      	nop
 8004772:	68bb      	ldr	r3, [r7, #8]
 8004774:	68d9      	ldr	r1, [r3, #12]
 8004776:	68bb      	ldr	r3, [r7, #8]
 8004778:	785a      	ldrb	r2, [r3, #1]
 800477a:	68bb      	ldr	r3, [r7, #8]
 800477c:	695b      	ldr	r3, [r3, #20]
 800477e:	b29b      	uxth	r3, r3
 8004780:	2000      	movs	r0, #0
 8004782:	9000      	str	r0, [sp, #0]
 8004784:	68f8      	ldr	r0, [r7, #12]
 8004786:	f7ff fb53 	bl	8003e30 <USB_WritePacket>
 800478a:	2300      	movs	r3, #0
 800478c:	4618      	mov	r0, r3
 800478e:	3728      	adds	r7, #40	; 0x28
 8004790:	46bd      	mov	sp, r7
 8004792:	bd80      	pop	{r7, pc}
 8004794:	1ff80000 	.word	0x1ff80000

08004798 <USB_HC_ReadInterrupt>:
 8004798:	b480      	push	{r7}
 800479a:	b085      	sub	sp, #20
 800479c:	af00      	add	r7, sp, #0
 800479e:	6078      	str	r0, [r7, #4]
 80047a0:	687b      	ldr	r3, [r7, #4]
 80047a2:	60fb      	str	r3, [r7, #12]
 80047a4:	68fb      	ldr	r3, [r7, #12]
 80047a6:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80047aa:	695b      	ldr	r3, [r3, #20]
 80047ac:	b29b      	uxth	r3, r3
 80047ae:	4618      	mov	r0, r3
 80047b0:	3714      	adds	r7, #20
 80047b2:	46bd      	mov	sp, r7
 80047b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80047b8:	4770      	bx	lr

080047ba <USB_HC_Halt>:
 80047ba:	b480      	push	{r7}
 80047bc:	b089      	sub	sp, #36	; 0x24
 80047be:	af00      	add	r7, sp, #0
 80047c0:	6078      	str	r0, [r7, #4]
 80047c2:	460b      	mov	r3, r1
 80047c4:	70fb      	strb	r3, [r7, #3]
 80047c6:	687b      	ldr	r3, [r7, #4]
 80047c8:	61bb      	str	r3, [r7, #24]
 80047ca:	78fb      	ldrb	r3, [r7, #3]
 80047cc:	617b      	str	r3, [r7, #20]
 80047ce:	2300      	movs	r3, #0
 80047d0:	61fb      	str	r3, [r7, #28]
 80047d2:	697b      	ldr	r3, [r7, #20]
 80047d4:	015a      	lsls	r2, r3, #5
 80047d6:	69bb      	ldr	r3, [r7, #24]
 80047d8:	4413      	add	r3, r2
 80047da:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 80047de:	681b      	ldr	r3, [r3, #0]
 80047e0:	0c9b      	lsrs	r3, r3, #18
 80047e2:	f003 0303 	and.w	r3, r3, #3
 80047e6:	613b      	str	r3, [r7, #16]
 80047e8:	697b      	ldr	r3, [r7, #20]
 80047ea:	015a      	lsls	r2, r3, #5
 80047ec:	69bb      	ldr	r3, [r7, #24]
 80047ee:	4413      	add	r3, r2
 80047f0:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 80047f4:	681b      	ldr	r3, [r3, #0]
 80047f6:	0fdb      	lsrs	r3, r3, #31
 80047f8:	f003 0301 	and.w	r3, r3, #1
 80047fc:	60fb      	str	r3, [r7, #12]
 80047fe:	687b      	ldr	r3, [r7, #4]
 8004800:	689b      	ldr	r3, [r3, #8]
 8004802:	f003 0320 	and.w	r3, r3, #32
 8004806:	2b20      	cmp	r3, #32
 8004808:	d104      	bne.n	8004814 <USB_HC_Halt+0x5a>
 800480a:	68fb      	ldr	r3, [r7, #12]
 800480c:	2b00      	cmp	r3, #0
 800480e:	d101      	bne.n	8004814 <USB_HC_Halt+0x5a>
 8004810:	2300      	movs	r3, #0
 8004812:	e0e8      	b.n	80049e6 <USB_HC_Halt+0x22c>
 8004814:	693b      	ldr	r3, [r7, #16]
 8004816:	2b00      	cmp	r3, #0
 8004818:	d002      	beq.n	8004820 <USB_HC_Halt+0x66>
 800481a:	693b      	ldr	r3, [r7, #16]
 800481c:	2b02      	cmp	r3, #2
 800481e:	d173      	bne.n	8004908 <USB_HC_Halt+0x14e>
 8004820:	697b      	ldr	r3, [r7, #20]
 8004822:	015a      	lsls	r2, r3, #5
 8004824:	69bb      	ldr	r3, [r7, #24]
 8004826:	4413      	add	r3, r2
 8004828:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 800482c:	681b      	ldr	r3, [r3, #0]
 800482e:	697a      	ldr	r2, [r7, #20]
 8004830:	0151      	lsls	r1, r2, #5
 8004832:	69ba      	ldr	r2, [r7, #24]
 8004834:	440a      	add	r2, r1
 8004836:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
 800483a:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 800483e:	6013      	str	r3, [r2, #0]
 8004840:	687b      	ldr	r3, [r7, #4]
 8004842:	689b      	ldr	r3, [r3, #8]
 8004844:	f003 0320 	and.w	r3, r3, #32
 8004848:	2b00      	cmp	r3, #0
 800484a:	f040 80cb 	bne.w	80049e4 <USB_HC_Halt+0x22a>
 800484e:	687b      	ldr	r3, [r7, #4]
 8004850:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004852:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 8004856:	2b00      	cmp	r3, #0
 8004858:	d143      	bne.n	80048e2 <USB_HC_Halt+0x128>
 800485a:	697b      	ldr	r3, [r7, #20]
 800485c:	015a      	lsls	r2, r3, #5
 800485e:	69bb      	ldr	r3, [r7, #24]
 8004860:	4413      	add	r3, r2
 8004862:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8004866:	681b      	ldr	r3, [r3, #0]
 8004868:	697a      	ldr	r2, [r7, #20]
 800486a:	0151      	lsls	r1, r2, #5
 800486c:	69ba      	ldr	r2, [r7, #24]
 800486e:	440a      	add	r2, r1
 8004870:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
 8004874:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8004878:	6013      	str	r3, [r2, #0]
 800487a:	697b      	ldr	r3, [r7, #20]
 800487c:	015a      	lsls	r2, r3, #5
 800487e:	69bb      	ldr	r3, [r7, #24]
 8004880:	4413      	add	r3, r2
 8004882:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8004886:	681b      	ldr	r3, [r3, #0]
 8004888:	697a      	ldr	r2, [r7, #20]
 800488a:	0151      	lsls	r1, r2, #5
 800488c:	69ba      	ldr	r2, [r7, #24]
 800488e:	440a      	add	r2, r1
 8004890:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
 8004894:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8004898:	6013      	str	r3, [r2, #0]
 800489a:	697b      	ldr	r3, [r7, #20]
 800489c:	015a      	lsls	r2, r3, #5
 800489e:	69bb      	ldr	r3, [r7, #24]
 80048a0:	4413      	add	r3, r2
 80048a2:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 80048a6:	681b      	ldr	r3, [r3, #0]
 80048a8:	697a      	ldr	r2, [r7, #20]
 80048aa:	0151      	lsls	r1, r2, #5
 80048ac:	69ba      	ldr	r2, [r7, #24]
 80048ae:	440a      	add	r2, r1
 80048b0:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
 80048b4:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 80048b8:	6013      	str	r3, [r2, #0]
 80048ba:	69fb      	ldr	r3, [r7, #28]
 80048bc:	3301      	adds	r3, #1
 80048be:	61fb      	str	r3, [r7, #28]
 80048c0:	69fb      	ldr	r3, [r7, #28]
 80048c2:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80048c6:	d81d      	bhi.n	8004904 <USB_HC_Halt+0x14a>
 80048c8:	697b      	ldr	r3, [r7, #20]
 80048ca:	015a      	lsls	r2, r3, #5
 80048cc:	69bb      	ldr	r3, [r7, #24]
 80048ce:	4413      	add	r3, r2
 80048d0:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 80048d4:	681b      	ldr	r3, [r3, #0]
 80048d6:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 80048da:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 80048de:	d0ec      	beq.n	80048ba <USB_HC_Halt+0x100>
 80048e0:	e080      	b.n	80049e4 <USB_HC_Halt+0x22a>
 80048e2:	697b      	ldr	r3, [r7, #20]
 80048e4:	015a      	lsls	r2, r3, #5
 80048e6:	69bb      	ldr	r3, [r7, #24]
 80048e8:	4413      	add	r3, r2
 80048ea:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 80048ee:	681b      	ldr	r3, [r3, #0]
 80048f0:	697a      	ldr	r2, [r7, #20]
 80048f2:	0151      	lsls	r1, r2, #5
 80048f4:	69ba      	ldr	r2, [r7, #24]
 80048f6:	440a      	add	r2, r1
 80048f8:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
 80048fc:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8004900:	6013      	str	r3, [r2, #0]
 8004902:	e06f      	b.n	80049e4 <USB_HC_Halt+0x22a>
 8004904:	bf00      	nop
 8004906:	e06d      	b.n	80049e4 <USB_HC_Halt+0x22a>
 8004908:	697b      	ldr	r3, [r7, #20]
 800490a:	015a      	lsls	r2, r3, #5
 800490c:	69bb      	ldr	r3, [r7, #24]
 800490e:	4413      	add	r3, r2
 8004910:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8004914:	681b      	ldr	r3, [r3, #0]
 8004916:	697a      	ldr	r2, [r7, #20]
 8004918:	0151      	lsls	r1, r2, #5
 800491a:	69ba      	ldr	r2, [r7, #24]
 800491c:	440a      	add	r2, r1
 800491e:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
 8004922:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8004926:	6013      	str	r3, [r2, #0]
 8004928:	69bb      	ldr	r3, [r7, #24]
 800492a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800492e:	691b      	ldr	r3, [r3, #16]
 8004930:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 8004934:	2b00      	cmp	r3, #0
 8004936:	d143      	bne.n	80049c0 <USB_HC_Halt+0x206>
 8004938:	697b      	ldr	r3, [r7, #20]
 800493a:	015a      	lsls	r2, r3, #5
 800493c:	69bb      	ldr	r3, [r7, #24]
 800493e:	4413      	add	r3, r2
 8004940:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8004944:	681b      	ldr	r3, [r3, #0]
 8004946:	697a      	ldr	r2, [r7, #20]
 8004948:	0151      	lsls	r1, r2, #5
 800494a:	69ba      	ldr	r2, [r7, #24]
 800494c:	440a      	add	r2, r1
 800494e:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
 8004952:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8004956:	6013      	str	r3, [r2, #0]
 8004958:	697b      	ldr	r3, [r7, #20]
 800495a:	015a      	lsls	r2, r3, #5
 800495c:	69bb      	ldr	r3, [r7, #24]
 800495e:	4413      	add	r3, r2
 8004960:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8004964:	681b      	ldr	r3, [r3, #0]
 8004966:	697a      	ldr	r2, [r7, #20]
 8004968:	0151      	lsls	r1, r2, #5
 800496a:	69ba      	ldr	r2, [r7, #24]
 800496c:	440a      	add	r2, r1
 800496e:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
 8004972:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8004976:	6013      	str	r3, [r2, #0]
 8004978:	697b      	ldr	r3, [r7, #20]
 800497a:	015a      	lsls	r2, r3, #5
 800497c:	69bb      	ldr	r3, [r7, #24]
 800497e:	4413      	add	r3, r2
 8004980:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8004984:	681b      	ldr	r3, [r3, #0]
 8004986:	697a      	ldr	r2, [r7, #20]
 8004988:	0151      	lsls	r1, r2, #5
 800498a:	69ba      	ldr	r2, [r7, #24]
 800498c:	440a      	add	r2, r1
 800498e:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
 8004992:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8004996:	6013      	str	r3, [r2, #0]
 8004998:	69fb      	ldr	r3, [r7, #28]
 800499a:	3301      	adds	r3, #1
 800499c:	61fb      	str	r3, [r7, #28]
 800499e:	69fb      	ldr	r3, [r7, #28]
 80049a0:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80049a4:	d81d      	bhi.n	80049e2 <USB_HC_Halt+0x228>
 80049a6:	697b      	ldr	r3, [r7, #20]
 80049a8:	015a      	lsls	r2, r3, #5
 80049aa:	69bb      	ldr	r3, [r7, #24]
 80049ac:	4413      	add	r3, r2
 80049ae:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 80049b2:	681b      	ldr	r3, [r3, #0]
 80049b4:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 80049b8:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 80049bc:	d0ec      	beq.n	8004998 <USB_HC_Halt+0x1de>
 80049be:	e011      	b.n	80049e4 <USB_HC_Halt+0x22a>
 80049c0:	697b      	ldr	r3, [r7, #20]
 80049c2:	015a      	lsls	r2, r3, #5
 80049c4:	69bb      	ldr	r3, [r7, #24]
 80049c6:	4413      	add	r3, r2
 80049c8:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 80049cc:	681b      	ldr	r3, [r3, #0]
 80049ce:	697a      	ldr	r2, [r7, #20]
 80049d0:	0151      	lsls	r1, r2, #5
 80049d2:	69ba      	ldr	r2, [r7, #24]
 80049d4:	440a      	add	r2, r1
 80049d6:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
 80049da:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 80049de:	6013      	str	r3, [r2, #0]
 80049e0:	e000      	b.n	80049e4 <USB_HC_Halt+0x22a>
 80049e2:	bf00      	nop
 80049e4:	2300      	movs	r3, #0
 80049e6:	4618      	mov	r0, r3
 80049e8:	3724      	adds	r7, #36	; 0x24
 80049ea:	46bd      	mov	sp, r7
 80049ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80049f0:	4770      	bx	lr
	...

080049f4 <USB_DoPing>:
 80049f4:	b480      	push	{r7}
 80049f6:	b087      	sub	sp, #28
 80049f8:	af00      	add	r7, sp, #0
 80049fa:	6078      	str	r0, [r7, #4]
 80049fc:	460b      	mov	r3, r1
 80049fe:	70fb      	strb	r3, [r7, #3]
 8004a00:	687b      	ldr	r3, [r7, #4]
 8004a02:	617b      	str	r3, [r7, #20]
 8004a04:	78fb      	ldrb	r3, [r7, #3]
 8004a06:	613b      	str	r3, [r7, #16]
 8004a08:	2301      	movs	r3, #1
 8004a0a:	60fb      	str	r3, [r7, #12]
 8004a0c:	68fb      	ldr	r3, [r7, #12]
 8004a0e:	04da      	lsls	r2, r3, #19
 8004a10:	4b15      	ldr	r3, [pc, #84]	; (8004a68 <USB_DoPing+0x74>)
 8004a12:	4013      	ands	r3, r2
 8004a14:	693a      	ldr	r2, [r7, #16]
 8004a16:	0151      	lsls	r1, r2, #5
 8004a18:	697a      	ldr	r2, [r7, #20]
 8004a1a:	440a      	add	r2, r1
 8004a1c:	f502 62a0 	add.w	r2, r2, #1280	; 0x500
 8004a20:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8004a24:	6113      	str	r3, [r2, #16]
 8004a26:	693b      	ldr	r3, [r7, #16]
 8004a28:	015a      	lsls	r2, r3, #5
 8004a2a:	697b      	ldr	r3, [r7, #20]
 8004a2c:	4413      	add	r3, r2
 8004a2e:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8004a32:	681b      	ldr	r3, [r3, #0]
 8004a34:	60bb      	str	r3, [r7, #8]
 8004a36:	68bb      	ldr	r3, [r7, #8]
 8004a38:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 8004a3c:	60bb      	str	r3, [r7, #8]
 8004a3e:	68bb      	ldr	r3, [r7, #8]
 8004a40:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8004a44:	60bb      	str	r3, [r7, #8]
 8004a46:	693b      	ldr	r3, [r7, #16]
 8004a48:	015a      	lsls	r2, r3, #5
 8004a4a:	697b      	ldr	r3, [r7, #20]
 8004a4c:	4413      	add	r3, r2
 8004a4e:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8004a52:	461a      	mov	r2, r3
 8004a54:	68bb      	ldr	r3, [r7, #8]
 8004a56:	6013      	str	r3, [r2, #0]
 8004a58:	2300      	movs	r3, #0
 8004a5a:	4618      	mov	r0, r3
 8004a5c:	371c      	adds	r7, #28
 8004a5e:	46bd      	mov	sp, r7
 8004a60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004a64:	4770      	bx	lr
 8004a66:	bf00      	nop
 8004a68:	1ff80000 	.word	0x1ff80000

08004a6c <USB_StopHost>:
 8004a6c:	b580      	push	{r7, lr}
 8004a6e:	b086      	sub	sp, #24
 8004a70:	af00      	add	r7, sp, #0
 8004a72:	6078      	str	r0, [r7, #4]
 8004a74:	687b      	ldr	r3, [r7, #4]
 8004a76:	60fb      	str	r3, [r7, #12]
 8004a78:	2300      	movs	r3, #0
 8004a7a:	617b      	str	r3, [r7, #20]
 8004a7c:	6878      	ldr	r0, [r7, #4]
 8004a7e:	f7ff f935 	bl	8003cec <USB_DisableGlobalInt>
 8004a82:	2110      	movs	r1, #16
 8004a84:	6878      	ldr	r0, [r7, #4]
 8004a86:	f7ff f98f 	bl	8003da8 <USB_FlushTxFifo>
 8004a8a:	6878      	ldr	r0, [r7, #4]
 8004a8c:	f7ff f9b0 	bl	8003df0 <USB_FlushRxFifo>
 8004a90:	2300      	movs	r3, #0
 8004a92:	613b      	str	r3, [r7, #16]
 8004a94:	e01f      	b.n	8004ad6 <USB_StopHost+0x6a>
 8004a96:	693b      	ldr	r3, [r7, #16]
 8004a98:	015a      	lsls	r2, r3, #5
 8004a9a:	68fb      	ldr	r3, [r7, #12]
 8004a9c:	4413      	add	r3, r2
 8004a9e:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8004aa2:	681b      	ldr	r3, [r3, #0]
 8004aa4:	60bb      	str	r3, [r7, #8]
 8004aa6:	68bb      	ldr	r3, [r7, #8]
 8004aa8:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8004aac:	60bb      	str	r3, [r7, #8]
 8004aae:	68bb      	ldr	r3, [r7, #8]
 8004ab0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8004ab4:	60bb      	str	r3, [r7, #8]
 8004ab6:	68bb      	ldr	r3, [r7, #8]
 8004ab8:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8004abc:	60bb      	str	r3, [r7, #8]
 8004abe:	693b      	ldr	r3, [r7, #16]
 8004ac0:	015a      	lsls	r2, r3, #5
 8004ac2:	68fb      	ldr	r3, [r7, #12]
 8004ac4:	4413      	add	r3, r2
 8004ac6:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8004aca:	461a      	mov	r2, r3
 8004acc:	68bb      	ldr	r3, [r7, #8]
 8004ace:	6013      	str	r3, [r2, #0]
 8004ad0:	693b      	ldr	r3, [r7, #16]
 8004ad2:	3301      	adds	r3, #1
 8004ad4:	613b      	str	r3, [r7, #16]
 8004ad6:	693b      	ldr	r3, [r7, #16]
 8004ad8:	2b0f      	cmp	r3, #15
 8004ada:	d9dc      	bls.n	8004a96 <USB_StopHost+0x2a>
 8004adc:	2300      	movs	r3, #0
 8004ade:	613b      	str	r3, [r7, #16]
 8004ae0:	e034      	b.n	8004b4c <USB_StopHost+0xe0>
 8004ae2:	693b      	ldr	r3, [r7, #16]
 8004ae4:	015a      	lsls	r2, r3, #5
 8004ae6:	68fb      	ldr	r3, [r7, #12]
 8004ae8:	4413      	add	r3, r2
 8004aea:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8004aee:	681b      	ldr	r3, [r3, #0]
 8004af0:	60bb      	str	r3, [r7, #8]
 8004af2:	68bb      	ldr	r3, [r7, #8]
 8004af4:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8004af8:	60bb      	str	r3, [r7, #8]
 8004afa:	68bb      	ldr	r3, [r7, #8]
 8004afc:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8004b00:	60bb      	str	r3, [r7, #8]
 8004b02:	68bb      	ldr	r3, [r7, #8]
 8004b04:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8004b08:	60bb      	str	r3, [r7, #8]
 8004b0a:	693b      	ldr	r3, [r7, #16]
 8004b0c:	015a      	lsls	r2, r3, #5
 8004b0e:	68fb      	ldr	r3, [r7, #12]
 8004b10:	4413      	add	r3, r2
 8004b12:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8004b16:	461a      	mov	r2, r3
 8004b18:	68bb      	ldr	r3, [r7, #8]
 8004b1a:	6013      	str	r3, [r2, #0]
 8004b1c:	697b      	ldr	r3, [r7, #20]
 8004b1e:	3301      	adds	r3, #1
 8004b20:	617b      	str	r3, [r7, #20]
 8004b22:	697b      	ldr	r3, [r7, #20]
 8004b24:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8004b28:	d80c      	bhi.n	8004b44 <USB_StopHost+0xd8>
 8004b2a:	693b      	ldr	r3, [r7, #16]
 8004b2c:	015a      	lsls	r2, r3, #5
 8004b2e:	68fb      	ldr	r3, [r7, #12]
 8004b30:	4413      	add	r3, r2
 8004b32:	f503 63a0 	add.w	r3, r3, #1280	; 0x500
 8004b36:	681b      	ldr	r3, [r3, #0]
 8004b38:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8004b3c:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8004b40:	d0ec      	beq.n	8004b1c <USB_StopHost+0xb0>
 8004b42:	e000      	b.n	8004b46 <USB_StopHost+0xda>
 8004b44:	bf00      	nop
 8004b46:	693b      	ldr	r3, [r7, #16]
 8004b48:	3301      	adds	r3, #1
 8004b4a:	613b      	str	r3, [r7, #16]
 8004b4c:	693b      	ldr	r3, [r7, #16]
 8004b4e:	2b0f      	cmp	r3, #15
 8004b50:	d9c7      	bls.n	8004ae2 <USB_StopHost+0x76>
 8004b52:	68fb      	ldr	r3, [r7, #12]
 8004b54:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004b58:	461a      	mov	r2, r3
 8004b5a:	f04f 33ff 	mov.w	r3, #4294967295
 8004b5e:	6153      	str	r3, [r2, #20]
 8004b60:	687b      	ldr	r3, [r7, #4]
 8004b62:	f04f 32ff 	mov.w	r2, #4294967295
 8004b66:	615a      	str	r2, [r3, #20]
 8004b68:	6878      	ldr	r0, [r7, #4]
 8004b6a:	f7ff f8ae 	bl	8003cca <USB_EnableGlobalInt>
 8004b6e:	2300      	movs	r3, #0
 8004b70:	4618      	mov	r0, r3
 8004b72:	3718      	adds	r7, #24
 8004b74:	46bd      	mov	sp, r7
 8004b76:	bd80      	pop	{r7, pc}

08004b78 <USBH_HID_InterfaceInit>:
  *         The function init the HID class.
  * @param  phost: Host handle
  * @retval USBH Status
  */
static USBH_StatusTypeDef USBH_HID_InterfaceInit(USBH_HandleTypeDef *phost)
{
 8004b78:	b590      	push	{r4, r7, lr}
 8004b7a:	b08b      	sub	sp, #44	; 0x2c
 8004b7c:	af04      	add	r7, sp, #16
 8004b7e:	6078      	str	r0, [r7, #4]
  USBH_StatusTypeDef status;
  HID_HandleTypeDef *HID_Handle;
  uint8_t max_ep;
  uint8_t num = 0U;
 8004b80:	2300      	movs	r3, #0
 8004b82:	75fb      	strb	r3, [r7, #23]
  uint8_t interface;

  // dong
  interface = USBH_FindInterface(phost, phost->pActiveClass->ClassCode, 0xFFU, 0xFFU);
 8004b84:	687b      	ldr	r3, [r7, #4]
 8004b86:	f8d3 3360 	ldr.w	r3, [r3, #864]	; 0x360
 8004b8a:	7919      	ldrb	r1, [r3, #4]
 8004b8c:	23ff      	movs	r3, #255	; 0xff
 8004b8e:	22ff      	movs	r2, #255	; 0xff
 8004b90:	6878      	ldr	r0, [r7, #4]
 8004b92:	f000 ffd9 	bl	8005b48 <USBH_FindInterface>
 8004b96:	4603      	mov	r3, r0
 8004b98:	75bb      	strb	r3, [r7, #22]

  if ((interface == 0xFFU) || (interface >= USBH_MAX_NUM_INTERFACES)) /* No Valid Interface */
 8004b9a:	7dbb      	ldrb	r3, [r7, #22]
 8004b9c:	2bff      	cmp	r3, #255	; 0xff
 8004b9e:	d002      	beq.n	8004ba6 <USBH_HID_InterfaceInit+0x2e>
 8004ba0:	7dbb      	ldrb	r3, [r7, #22]
 8004ba2:	2b00      	cmp	r3, #0
 8004ba4:	d00f      	beq.n	8004bc6 <USBH_HID_InterfaceInit+0x4e>
  {
    USBH_DbgLog("Cannot Find the interface for %s class.", phost->pActiveClass->Name);
 8004ba6:	4899      	ldr	r0, [pc, #612]	; (8004e0c <USBH_HID_InterfaceInit+0x294>)
 8004ba8:	f003 f92a 	bl	8007e00 <iprintf>
 8004bac:	687b      	ldr	r3, [r7, #4]
 8004bae:	f8d3 3360 	ldr.w	r3, [r3, #864]	; 0x360
 8004bb2:	681b      	ldr	r3, [r3, #0]
 8004bb4:	4619      	mov	r1, r3
 8004bb6:	4896      	ldr	r0, [pc, #600]	; (8004e10 <USBH_HID_InterfaceInit+0x298>)
 8004bb8:	f003 f922 	bl	8007e00 <iprintf>
 8004bbc:	200a      	movs	r0, #10
 8004bbe:	f003 f937 	bl	8007e30 <putchar>
    return USBH_FAIL;
 8004bc2:	2302      	movs	r3, #2
 8004bc4:	e176      	b.n	8004eb4 <USBH_HID_InterfaceInit+0x33c>
  }

  status = USBH_SelectInterface(phost, interface);
 8004bc6:	7dbb      	ldrb	r3, [r7, #22]
 8004bc8:	4619      	mov	r1, r3
 8004bca:	6878      	ldr	r0, [r7, #4]
 8004bcc:	f000 ff54 	bl	8005a78 <USBH_SelectInterface>
 8004bd0:	4603      	mov	r3, r0
 8004bd2:	757b      	strb	r3, [r7, #21]

  if (status != USBH_OK)
 8004bd4:	7d7b      	ldrb	r3, [r7, #21]
 8004bd6:	2b00      	cmp	r3, #0
 8004bd8:	d001      	beq.n	8004bde <USBH_HID_InterfaceInit+0x66>
  {
    return USBH_FAIL;
 8004bda:	2302      	movs	r3, #2
 8004bdc:	e16a      	b.n	8004eb4 <USBH_HID_InterfaceInit+0x33c>
  }

  phost->pActiveClass->pData = (HID_HandleTypeDef *)USBH_malloc(sizeof(HID_HandleTypeDef));
 8004bde:	687b      	ldr	r3, [r7, #4]
 8004be0:	f8d3 4360 	ldr.w	r4, [r3, #864]	; 0x360
 8004be4:	2034      	movs	r0, #52	; 0x34
 8004be6:	f003 f83b 	bl	8007c60 <malloc>
 8004bea:	4603      	mov	r3, r0
 8004bec:	61e3      	str	r3, [r4, #28]
  HID_Handle = (HID_HandleTypeDef *) phost->pActiveClass->pData;
 8004bee:	687b      	ldr	r3, [r7, #4]
 8004bf0:	f8d3 3360 	ldr.w	r3, [r3, #864]	; 0x360
 8004bf4:	69db      	ldr	r3, [r3, #28]
 8004bf6:	613b      	str	r3, [r7, #16]

  if (HID_Handle == NULL)
 8004bf8:	693b      	ldr	r3, [r7, #16]
 8004bfa:	2b00      	cmp	r3, #0
 8004bfc:	d10a      	bne.n	8004c14 <USBH_HID_InterfaceInit+0x9c>
  {
    USBH_DbgLog("Cannot allocate memory for HID Handle");
 8004bfe:	4883      	ldr	r0, [pc, #524]	; (8004e0c <USBH_HID_InterfaceInit+0x294>)
 8004c00:	f003 f8fe 	bl	8007e00 <iprintf>
 8004c04:	4883      	ldr	r0, [pc, #524]	; (8004e14 <USBH_HID_InterfaceInit+0x29c>)
 8004c06:	f003 f8fb 	bl	8007e00 <iprintf>
 8004c0a:	200a      	movs	r0, #10
 8004c0c:	f003 f910 	bl	8007e30 <putchar>
    return USBH_FAIL;
 8004c10:	2302      	movs	r3, #2
 8004c12:	e14f      	b.n	8004eb4 <USBH_HID_InterfaceInit+0x33c>
  }

  /* Initialize hid handler */
  USBH_memset(HID_Handle, 0, sizeof(HID_HandleTypeDef));
 8004c14:	2234      	movs	r2, #52	; 0x34
 8004c16:	2100      	movs	r1, #0
 8004c18:	6938      	ldr	r0, [r7, #16]
 8004c1a:	f003 f83f 	bl	8007c9c <memset>

  HID_Handle->state = HID_ERROR;
 8004c1e:	693b      	ldr	r3, [r7, #16]
 8004c20:	2207      	movs	r2, #7
 8004c22:	709a      	strb	r2, [r3, #2]

  /*Decode Bootclass Protocol: Mouse or Keyboard*/
  if (phost->device.CfgDesc.Itf_Desc[interface].bInterfaceProtocol == HID_KEYBRD_BOOT_CODE)
 8004c24:	7dbb      	ldrb	r3, [r7, #22]
 8004c26:	687a      	ldr	r2, [r7, #4]
 8004c28:	211a      	movs	r1, #26
 8004c2a:	fb01 f303 	mul.w	r3, r1, r3
 8004c2e:	4413      	add	r3, r2
 8004c30:	f203 3349 	addw	r3, r3, #841	; 0x349
 8004c34:	781b      	ldrb	r3, [r3, #0]
 8004c36:	2b01      	cmp	r3, #1
 8004c38:	d109      	bne.n	8004c4e <USBH_HID_InterfaceInit+0xd6>
  {
    USBH_UsrLog("KeyBoard device found!");
 8004c3a:	4877      	ldr	r0, [pc, #476]	; (8004e18 <USBH_HID_InterfaceInit+0x2a0>)
 8004c3c:	f003 f8e0 	bl	8007e00 <iprintf>
 8004c40:	200a      	movs	r0, #10
 8004c42:	f003 f8f5 	bl	8007e30 <putchar>
    HID_Handle->Init = USBH_HID_KeybdInit;
 8004c46:	693b      	ldr	r3, [r7, #16]
 8004c48:	4a74      	ldr	r2, [pc, #464]	; (8004e1c <USBH_HID_InterfaceInit+0x2a4>)
 8004c4a:	631a      	str	r2, [r3, #48]	; 0x30
 8004c4c:	e058      	b.n	8004d00 <USBH_HID_InterfaceInit+0x188>
  }
  else if (phost->device.CfgDesc.Itf_Desc[interface].bInterfaceProtocol  == HID_MOUSE_BOOT_CODE)
 8004c4e:	7dbb      	ldrb	r3, [r7, #22]
 8004c50:	687a      	ldr	r2, [r7, #4]
 8004c52:	211a      	movs	r1, #26
 8004c54:	fb01 f303 	mul.w	r3, r1, r3
 8004c58:	4413      	add	r3, r2
 8004c5a:	f203 3349 	addw	r3, r3, #841	; 0x349
 8004c5e:	781b      	ldrb	r3, [r3, #0]
 8004c60:	2b02      	cmp	r3, #2
 8004c62:	d109      	bne.n	8004c78 <USBH_HID_InterfaceInit+0x100>
  {
    USBH_UsrLog("Mouse device found!");
 8004c64:	486e      	ldr	r0, [pc, #440]	; (8004e20 <USBH_HID_InterfaceInit+0x2a8>)
 8004c66:	f003 f8cb 	bl	8007e00 <iprintf>
 8004c6a:	200a      	movs	r0, #10
 8004c6c:	f003 f8e0 	bl	8007e30 <putchar>
    HID_Handle->Init = USBH_HID_MouseInit;
 8004c70:	693b      	ldr	r3, [r7, #16]
 8004c72:	4a6c      	ldr	r2, [pc, #432]	; (8004e24 <USBH_HID_InterfaceInit+0x2ac>)
 8004c74:	631a      	str	r2, [r3, #48]	; 0x30
 8004c76:	e043      	b.n	8004d00 <USBH_HID_InterfaceInit+0x188>
  }
  // dong
  else if (phost->device.CfgDesc.Itf_Desc[interface].bInterfaceProtocol  == HID_NONE_BOOT_CODE)
 8004c78:	7dbb      	ldrb	r3, [r7, #22]
 8004c7a:	687a      	ldr	r2, [r7, #4]
 8004c7c:	211a      	movs	r1, #26
 8004c7e:	fb01 f303 	mul.w	r3, r1, r3
 8004c82:	4413      	add	r3, r2
 8004c84:	f203 3349 	addw	r3, r3, #841	; 0x349
 8004c88:	781b      	ldrb	r3, [r3, #0]
 8004c8a:	2b00      	cmp	r3, #0
 8004c8c:	d130      	bne.n	8004cf0 <USBH_HID_InterfaceInit+0x178>
  {
    USBH_UsrLog("none boot device found!");
 8004c8e:	4866      	ldr	r0, [pc, #408]	; (8004e28 <USBH_HID_InterfaceInit+0x2b0>)
 8004c90:	f003 f8b6 	bl	8007e00 <iprintf>
 8004c94:	200a      	movs	r0, #10
 8004c96:	f003 f8cb 	bl	8007e30 <putchar>

    //check the vendor and product id
    if(phost->device.DevDesc.idVendor == 0x2563 && phost->device.DevDesc.idProduct == 0x526 &&
 8004c9a:	687b      	ldr	r3, [r7, #4]
 8004c9c:	f8b3 332e 	ldrh.w	r3, [r3, #814]	; 0x32e
 8004ca0:	f242 5263 	movw	r2, #9571	; 0x2563
 8004ca4:	4293      	cmp	r3, r2
 8004ca6:	d11b      	bne.n	8004ce0 <USBH_HID_InterfaceInit+0x168>
 8004ca8:	687b      	ldr	r3, [r7, #4]
 8004caa:	f8b3 3330 	ldrh.w	r3, [r3, #816]	; 0x330
 8004cae:	f240 5226 	movw	r2, #1318	; 0x526
 8004cb2:	4293      	cmp	r3, r2
 8004cb4:	d114      	bne.n	8004ce0 <USBH_HID_InterfaceInit+0x168>
    		phost->device.CfgDesc.Itf_Desc[interface].bInterfaceClass == 0x03)
 8004cb6:	7dbb      	ldrb	r3, [r7, #22]
 8004cb8:	687a      	ldr	r2, [r7, #4]
 8004cba:	211a      	movs	r1, #26
 8004cbc:	fb01 f303 	mul.w	r3, r1, r3
 8004cc0:	4413      	add	r3, r2
 8004cc2:	f203 3347 	addw	r3, r3, #839	; 0x347
 8004cc6:	781b      	ldrb	r3, [r3, #0]
    if(phost->device.DevDesc.idVendor == 0x2563 && phost->device.DevDesc.idProduct == 0x526 &&
 8004cc8:	2b03      	cmp	r3, #3
 8004cca:	d109      	bne.n	8004ce0 <USBH_HID_InterfaceInit+0x168>
    {
      USBH_UsrLog("Joystick device found!");
 8004ccc:	4857      	ldr	r0, [pc, #348]	; (8004e2c <USBH_HID_InterfaceInit+0x2b4>)
 8004cce:	f003 f897 	bl	8007e00 <iprintf>
 8004cd2:	200a      	movs	r0, #10
 8004cd4:	f003 f8ac 	bl	8007e30 <putchar>
    	HID_Handle->Init = USBH_HID_JoystickInit;
 8004cd8:	693b      	ldr	r3, [r7, #16]
 8004cda:	4a55      	ldr	r2, [pc, #340]	; (8004e30 <USBH_HID_InterfaceInit+0x2b8>)
 8004cdc:	631a      	str	r2, [r3, #48]	; 0x30
 8004cde:	e00f      	b.n	8004d00 <USBH_HID_InterfaceInit+0x188>
    }
    else
    {
      USBH_UsrLog("Protocol not supported.");
 8004ce0:	4854      	ldr	r0, [pc, #336]	; (8004e34 <USBH_HID_InterfaceInit+0x2bc>)
 8004ce2:	f003 f88d 	bl	8007e00 <iprintf>
 8004ce6:	200a      	movs	r0, #10
 8004ce8:	f003 f8a2 	bl	8007e30 <putchar>
      return USBH_FAIL;
 8004cec:	2302      	movs	r3, #2
 8004cee:	e0e1      	b.n	8004eb4 <USBH_HID_InterfaceInit+0x33c>
    }
  }
  else
  {
    USBH_UsrLog("Protocol not supported.");
 8004cf0:	4850      	ldr	r0, [pc, #320]	; (8004e34 <USBH_HID_InterfaceInit+0x2bc>)
 8004cf2:	f003 f885 	bl	8007e00 <iprintf>
 8004cf6:	200a      	movs	r0, #10
 8004cf8:	f003 f89a 	bl	8007e30 <putchar>
    return USBH_FAIL;
 8004cfc:	2302      	movs	r3, #2
 8004cfe:	e0d9      	b.n	8004eb4 <USBH_HID_InterfaceInit+0x33c>
  }

  HID_Handle->state     = HID_INIT;
 8004d00:	693b      	ldr	r3, [r7, #16]
 8004d02:	2200      	movs	r2, #0
 8004d04:	709a      	strb	r2, [r3, #2]
  HID_Handle->ctl_state = HID_REQ_INIT;
 8004d06:	693b      	ldr	r3, [r7, #16]
 8004d08:	2200      	movs	r2, #0
 8004d0a:	715a      	strb	r2, [r3, #5]
  HID_Handle->ep_addr   = phost->device.CfgDesc.Itf_Desc[interface].Ep_Desc[0].bEndpointAddress;
 8004d0c:	7dbb      	ldrb	r3, [r7, #22]
 8004d0e:	687a      	ldr	r2, [r7, #4]
 8004d10:	211a      	movs	r1, #26
 8004d12:	fb01 f303 	mul.w	r3, r1, r3
 8004d16:	4413      	add	r3, r2
 8004d18:	f203 334e 	addw	r3, r3, #846	; 0x34e
 8004d1c:	781a      	ldrb	r2, [r3, #0]
 8004d1e:	693b      	ldr	r3, [r7, #16]
 8004d20:	769a      	strb	r2, [r3, #26]
  HID_Handle->length    = phost->device.CfgDesc.Itf_Desc[interface].Ep_Desc[0].wMaxPacketSize;
 8004d22:	7dbb      	ldrb	r3, [r7, #22]
 8004d24:	687a      	ldr	r2, [r7, #4]
 8004d26:	211a      	movs	r1, #26
 8004d28:	fb01 f303 	mul.w	r3, r1, r3
 8004d2c:	4413      	add	r3, r2
 8004d2e:	f503 7354 	add.w	r3, r3, #848	; 0x350
 8004d32:	881a      	ldrh	r2, [r3, #0]
 8004d34:	693b      	ldr	r3, [r7, #16]
 8004d36:	831a      	strh	r2, [r3, #24]
  HID_Handle->poll      = phost->device.CfgDesc.Itf_Desc[interface].Ep_Desc[0].bInterval;
 8004d38:	7dbb      	ldrb	r3, [r7, #22]
 8004d3a:	687a      	ldr	r2, [r7, #4]
 8004d3c:	211a      	movs	r1, #26
 8004d3e:	fb01 f303 	mul.w	r3, r1, r3
 8004d42:	4413      	add	r3, r2
 8004d44:	f203 3352 	addw	r3, r3, #850	; 0x352
 8004d48:	781b      	ldrb	r3, [r3, #0]
 8004d4a:	b29a      	uxth	r2, r3
 8004d4c:	693b      	ldr	r3, [r7, #16]
 8004d4e:	839a      	strh	r2, [r3, #28]

  if (HID_Handle->poll  < HID_MIN_POLL)
 8004d50:	693b      	ldr	r3, [r7, #16]
 8004d52:	8b9b      	ldrh	r3, [r3, #28]
 8004d54:	2b09      	cmp	r3, #9
 8004d56:	d802      	bhi.n	8004d5e <USBH_HID_InterfaceInit+0x1e6>
  {
    HID_Handle->poll = HID_MIN_POLL;
 8004d58:	693b      	ldr	r3, [r7, #16]
 8004d5a:	220a      	movs	r2, #10
 8004d5c:	839a      	strh	r2, [r3, #28]
  }

  /* Check fo available number of endpoints */
  /* Find the number of EPs in the Interface Descriptor */
  /* Choose the lower number in order not to overrun the buffer allocated */
  max_ep = ((phost->device.CfgDesc.Itf_Desc[interface].bNumEndpoints <= USBH_MAX_NUM_ENDPOINTS) ?
 8004d5e:	7dbb      	ldrb	r3, [r7, #22]
 8004d60:	687a      	ldr	r2, [r7, #4]
 8004d62:	211a      	movs	r1, #26
 8004d64:	fb01 f303 	mul.w	r3, r1, r3
 8004d68:	4413      	add	r3, r2
 8004d6a:	f203 3346 	addw	r3, r3, #838	; 0x346
 8004d6e:	781b      	ldrb	r3, [r3, #0]
 8004d70:	2b02      	cmp	r3, #2
 8004d72:	bf28      	it	cs
 8004d74:	2302      	movcs	r3, #2
 8004d76:	73fb      	strb	r3, [r7, #15]
             phost->device.CfgDesc.Itf_Desc[interface].bNumEndpoints : USBH_MAX_NUM_ENDPOINTS);


  /* Decode endpoint IN and OUT address from interface descriptor */
  for (num = 0U; num < max_ep; num++)
 8004d78:	2300      	movs	r3, #0
 8004d7a:	75fb      	strb	r3, [r7, #23]
 8004d7c:	e094      	b.n	8004ea8 <USBH_HID_InterfaceInit+0x330>
  {
    if (phost->device.CfgDesc.Itf_Desc[interface].Ep_Desc[num].bEndpointAddress & 0x80U)
 8004d7e:	7dbb      	ldrb	r3, [r7, #22]
 8004d80:	7df9      	ldrb	r1, [r7, #23]
 8004d82:	687a      	ldr	r2, [r7, #4]
 8004d84:	3101      	adds	r1, #1
 8004d86:	00c9      	lsls	r1, r1, #3
 8004d88:	201a      	movs	r0, #26
 8004d8a:	fb00 f303 	mul.w	r3, r0, r3
 8004d8e:	440b      	add	r3, r1
 8004d90:	4413      	add	r3, r2
 8004d92:	f203 3346 	addw	r3, r3, #838	; 0x346
 8004d96:	781b      	ldrb	r3, [r3, #0]
 8004d98:	b25b      	sxtb	r3, r3
 8004d9a:	2b00      	cmp	r3, #0
 8004d9c:	da4c      	bge.n	8004e38 <USBH_HID_InterfaceInit+0x2c0>
    {
      HID_Handle->InEp = (phost->device.CfgDesc.Itf_Desc[interface].Ep_Desc[num].bEndpointAddress);
 8004d9e:	7dbb      	ldrb	r3, [r7, #22]
 8004da0:	7df9      	ldrb	r1, [r7, #23]
 8004da2:	687a      	ldr	r2, [r7, #4]
 8004da4:	3101      	adds	r1, #1
 8004da6:	00c9      	lsls	r1, r1, #3
 8004da8:	201a      	movs	r0, #26
 8004daa:	fb00 f303 	mul.w	r3, r0, r3
 8004dae:	440b      	add	r3, r1
 8004db0:	4413      	add	r3, r2
 8004db2:	f203 3346 	addw	r3, r3, #838	; 0x346
 8004db6:	781a      	ldrb	r2, [r3, #0]
 8004db8:	693b      	ldr	r3, [r7, #16]
 8004dba:	711a      	strb	r2, [r3, #4]
      HID_Handle->InPipe = USBH_AllocPipe(phost, HID_Handle->InEp);
 8004dbc:	693b      	ldr	r3, [r7, #16]
 8004dbe:	791b      	ldrb	r3, [r3, #4]
 8004dc0:	4619      	mov	r1, r3
 8004dc2:	6878      	ldr	r0, [r7, #4]
 8004dc4:	f002 fa19 	bl	80071fa <USBH_AllocPipe>
 8004dc8:	4603      	mov	r3, r0
 8004dca:	461a      	mov	r2, r3
 8004dcc:	693b      	ldr	r3, [r7, #16]
 8004dce:	705a      	strb	r2, [r3, #1]

      /* Open pipe for IN endpoint */
      USBH_OpenPipe(phost, HID_Handle->InPipe, HID_Handle->InEp, phost->device.address,
 8004dd0:	693b      	ldr	r3, [r7, #16]
 8004dd2:	7859      	ldrb	r1, [r3, #1]
 8004dd4:	693b      	ldr	r3, [r7, #16]
 8004dd6:	7918      	ldrb	r0, [r3, #4]
 8004dd8:	687b      	ldr	r3, [r7, #4]
 8004dda:	f893 431c 	ldrb.w	r4, [r3, #796]	; 0x31c
 8004dde:	687b      	ldr	r3, [r7, #4]
 8004de0:	f893 331d 	ldrb.w	r3, [r3, #797]	; 0x31d
 8004de4:	693a      	ldr	r2, [r7, #16]
 8004de6:	8b12      	ldrh	r2, [r2, #24]
 8004de8:	9202      	str	r2, [sp, #8]
 8004dea:	2203      	movs	r2, #3
 8004dec:	9201      	str	r2, [sp, #4]
 8004dee:	9300      	str	r3, [sp, #0]
 8004df0:	4623      	mov	r3, r4
 8004df2:	4602      	mov	r2, r0
 8004df4:	6878      	ldr	r0, [r7, #4]
 8004df6:	f002 f9d1 	bl	800719c <USBH_OpenPipe>
                    phost->device.speed, USB_EP_TYPE_INTR, HID_Handle->length);

      USBH_LL_SetToggle(phost, HID_Handle->InPipe, 0U);
 8004dfa:	693b      	ldr	r3, [r7, #16]
 8004dfc:	785b      	ldrb	r3, [r3, #1]
 8004dfe:	2200      	movs	r2, #0
 8004e00:	4619      	mov	r1, r3
 8004e02:	6878      	ldr	r0, [r7, #4]
 8004e04:	f002 fcc5 	bl	8007792 <USBH_LL_SetToggle>
 8004e08:	e04b      	b.n	8004ea2 <USBH_HID_InterfaceInit+0x32a>
 8004e0a:	bf00      	nop
 8004e0c:	08008c30 	.word	0x08008c30
 8004e10:	08008c3c 	.word	0x08008c3c
 8004e14:	08008c64 	.word	0x08008c64
 8004e18:	08008c8c 	.word	0x08008c8c
 8004e1c:	08005649 	.word	0x08005649
 8004e20:	08008ca4 	.word	0x08008ca4
 8004e24:	080056f9 	.word	0x080056f9
 8004e28:	08008cb8 	.word	0x08008cb8
 8004e2c:	08008cd0 	.word	0x08008cd0
 8004e30:	08007861 	.word	0x08007861
 8004e34:	08008ce8 	.word	0x08008ce8
    }
    else
    {
      HID_Handle->OutEp = (phost->device.CfgDesc.Itf_Desc[interface].Ep_Desc[num].bEndpointAddress);
 8004e38:	7dbb      	ldrb	r3, [r7, #22]
 8004e3a:	7df9      	ldrb	r1, [r7, #23]
 8004e3c:	687a      	ldr	r2, [r7, #4]
 8004e3e:	3101      	adds	r1, #1
 8004e40:	00c9      	lsls	r1, r1, #3
 8004e42:	201a      	movs	r0, #26
 8004e44:	fb00 f303 	mul.w	r3, r0, r3
 8004e48:	440b      	add	r3, r1
 8004e4a:	4413      	add	r3, r2
 8004e4c:	f203 3346 	addw	r3, r3, #838	; 0x346
 8004e50:	781a      	ldrb	r2, [r3, #0]
 8004e52:	693b      	ldr	r3, [r7, #16]
 8004e54:	70da      	strb	r2, [r3, #3]
      HID_Handle->OutPipe  = USBH_AllocPipe(phost, HID_Handle->OutEp);
 8004e56:	693b      	ldr	r3, [r7, #16]
 8004e58:	78db      	ldrb	r3, [r3, #3]
 8004e5a:	4619      	mov	r1, r3
 8004e5c:	6878      	ldr	r0, [r7, #4]
 8004e5e:	f002 f9cc 	bl	80071fa <USBH_AllocPipe>
 8004e62:	4603      	mov	r3, r0
 8004e64:	461a      	mov	r2, r3
 8004e66:	693b      	ldr	r3, [r7, #16]
 8004e68:	701a      	strb	r2, [r3, #0]

      /* Open pipe for OUT endpoint */
      USBH_OpenPipe(phost, HID_Handle->OutPipe, HID_Handle->OutEp, phost->device.address,
 8004e6a:	693b      	ldr	r3, [r7, #16]
 8004e6c:	7819      	ldrb	r1, [r3, #0]
 8004e6e:	693b      	ldr	r3, [r7, #16]
 8004e70:	78d8      	ldrb	r0, [r3, #3]
 8004e72:	687b      	ldr	r3, [r7, #4]
 8004e74:	f893 431c 	ldrb.w	r4, [r3, #796]	; 0x31c
 8004e78:	687b      	ldr	r3, [r7, #4]
 8004e7a:	f893 331d 	ldrb.w	r3, [r3, #797]	; 0x31d
 8004e7e:	693a      	ldr	r2, [r7, #16]
 8004e80:	8b12      	ldrh	r2, [r2, #24]
 8004e82:	9202      	str	r2, [sp, #8]
 8004e84:	2203      	movs	r2, #3
 8004e86:	9201      	str	r2, [sp, #4]
 8004e88:	9300      	str	r3, [sp, #0]
 8004e8a:	4623      	mov	r3, r4
 8004e8c:	4602      	mov	r2, r0
 8004e8e:	6878      	ldr	r0, [r7, #4]
 8004e90:	f002 f984 	bl	800719c <USBH_OpenPipe>
                    phost->device.speed, USB_EP_TYPE_INTR, HID_Handle->length);

      USBH_LL_SetToggle(phost, HID_Handle->OutPipe, 0U);
 8004e94:	693b      	ldr	r3, [r7, #16]
 8004e96:	781b      	ldrb	r3, [r3, #0]
 8004e98:	2200      	movs	r2, #0
 8004e9a:	4619      	mov	r1, r3
 8004e9c:	6878      	ldr	r0, [r7, #4]
 8004e9e:	f002 fc78 	bl	8007792 <USBH_LL_SetToggle>
  for (num = 0U; num < max_ep; num++)
 8004ea2:	7dfb      	ldrb	r3, [r7, #23]
 8004ea4:	3301      	adds	r3, #1
 8004ea6:	75fb      	strb	r3, [r7, #23]
 8004ea8:	7dfa      	ldrb	r2, [r7, #23]
 8004eaa:	7bfb      	ldrb	r3, [r7, #15]
 8004eac:	429a      	cmp	r2, r3
 8004eae:	f4ff af66 	bcc.w	8004d7e <USBH_HID_InterfaceInit+0x206>
    }
  }

  return USBH_OK;
 8004eb2:	2300      	movs	r3, #0
}
 8004eb4:	4618      	mov	r0, r3
 8004eb6:	371c      	adds	r7, #28
 8004eb8:	46bd      	mov	sp, r7
 8004eba:	bd90      	pop	{r4, r7, pc}

08004ebc <USBH_HID_InterfaceDeInit>:
  *         The function DeInit the Pipes used for the HID class.
  * @param  phost: Host handle
  * @retval USBH Status
  */
static USBH_StatusTypeDef USBH_HID_InterfaceDeInit(USBH_HandleTypeDef *phost)
{
 8004ebc:	b580      	push	{r7, lr}
 8004ebe:	b084      	sub	sp, #16
 8004ec0:	af00      	add	r7, sp, #0
 8004ec2:	6078      	str	r0, [r7, #4]
  HID_HandleTypeDef *HID_Handle = (HID_HandleTypeDef *) phost->pActiveClass->pData;
 8004ec4:	687b      	ldr	r3, [r7, #4]
 8004ec6:	f8d3 3360 	ldr.w	r3, [r3, #864]	; 0x360
 8004eca:	69db      	ldr	r3, [r3, #28]
 8004ecc:	60fb      	str	r3, [r7, #12]

  if (HID_Handle->InPipe != 0x00U)
 8004ece:	68fb      	ldr	r3, [r7, #12]
 8004ed0:	785b      	ldrb	r3, [r3, #1]
 8004ed2:	2b00      	cmp	r3, #0
 8004ed4:	d00e      	beq.n	8004ef4 <USBH_HID_InterfaceDeInit+0x38>
  {
    USBH_ClosePipe(phost, HID_Handle->InPipe);
 8004ed6:	68fb      	ldr	r3, [r7, #12]
 8004ed8:	785b      	ldrb	r3, [r3, #1]
 8004eda:	4619      	mov	r1, r3
 8004edc:	6878      	ldr	r0, [r7, #4]
 8004ede:	f002 f97c 	bl	80071da <USBH_ClosePipe>
    USBH_FreePipe(phost, HID_Handle->InPipe);
 8004ee2:	68fb      	ldr	r3, [r7, #12]
 8004ee4:	785b      	ldrb	r3, [r3, #1]
 8004ee6:	4619      	mov	r1, r3
 8004ee8:	6878      	ldr	r0, [r7, #4]
 8004eea:	f002 f9a6 	bl	800723a <USBH_FreePipe>
    HID_Handle->InPipe = 0U;     /* Reset the pipe as Free */
 8004eee:	68fb      	ldr	r3, [r7, #12]
 8004ef0:	2200      	movs	r2, #0
 8004ef2:	705a      	strb	r2, [r3, #1]
  }

  if (HID_Handle->OutPipe != 0x00U)
 8004ef4:	68fb      	ldr	r3, [r7, #12]
 8004ef6:	781b      	ldrb	r3, [r3, #0]
 8004ef8:	2b00      	cmp	r3, #0
 8004efa:	d00e      	beq.n	8004f1a <USBH_HID_InterfaceDeInit+0x5e>
  {
    USBH_ClosePipe(phost, HID_Handle->OutPipe);
 8004efc:	68fb      	ldr	r3, [r7, #12]
 8004efe:	781b      	ldrb	r3, [r3, #0]
 8004f00:	4619      	mov	r1, r3
 8004f02:	6878      	ldr	r0, [r7, #4]
 8004f04:	f002 f969 	bl	80071da <USBH_ClosePipe>
    USBH_FreePipe(phost, HID_Handle->OutPipe);
 8004f08:	68fb      	ldr	r3, [r7, #12]
 8004f0a:	781b      	ldrb	r3, [r3, #0]
 8004f0c:	4619      	mov	r1, r3
 8004f0e:	6878      	ldr	r0, [r7, #4]
 8004f10:	f002 f993 	bl	800723a <USBH_FreePipe>
    HID_Handle->OutPipe = 0U;     /* Reset the pipe as Free */
 8004f14:	68fb      	ldr	r3, [r7, #12]
 8004f16:	2200      	movs	r2, #0
 8004f18:	701a      	strb	r2, [r3, #0]
  }

  if (phost->pActiveClass->pData)
 8004f1a:	687b      	ldr	r3, [r7, #4]
 8004f1c:	f8d3 3360 	ldr.w	r3, [r3, #864]	; 0x360
 8004f20:	69db      	ldr	r3, [r3, #28]
 8004f22:	2b00      	cmp	r3, #0
 8004f24:	d00b      	beq.n	8004f3e <USBH_HID_InterfaceDeInit+0x82>
  {
    USBH_free(phost->pActiveClass->pData);
 8004f26:	687b      	ldr	r3, [r7, #4]
 8004f28:	f8d3 3360 	ldr.w	r3, [r3, #864]	; 0x360
 8004f2c:	69db      	ldr	r3, [r3, #28]
 8004f2e:	4618      	mov	r0, r3
 8004f30:	f002 fe9e 	bl	8007c70 <free>
    phost->pActiveClass->pData = 0U;
 8004f34:	687b      	ldr	r3, [r7, #4]
 8004f36:	f8d3 3360 	ldr.w	r3, [r3, #864]	; 0x360
 8004f3a:	2200      	movs	r2, #0
 8004f3c:	61da      	str	r2, [r3, #28]
  }

  return USBH_OK;
 8004f3e:	2300      	movs	r3, #0
}
 8004f40:	4618      	mov	r0, r3
 8004f42:	3710      	adds	r7, #16
 8004f44:	46bd      	mov	sp, r7
 8004f46:	bd80      	pop	{r7, pc}

08004f48 <USBH_HID_ClassRequest>:
  *         for HID class.
  * @param  phost: Host handle
  * @retval USBH Status
  */
static USBH_StatusTypeDef USBH_HID_ClassRequest(USBH_HandleTypeDef *phost)
{
 8004f48:	b580      	push	{r7, lr}
 8004f4a:	b084      	sub	sp, #16
 8004f4c:	af00      	add	r7, sp, #0
 8004f4e:	6078      	str	r0, [r7, #4]

  USBH_StatusTypeDef status         = USBH_BUSY;
 8004f50:	2301      	movs	r3, #1
 8004f52:	73fb      	strb	r3, [r7, #15]
  USBH_StatusTypeDef classReqStatus = USBH_BUSY;
 8004f54:	2301      	movs	r3, #1
 8004f56:	73bb      	strb	r3, [r7, #14]
  HID_HandleTypeDef *HID_Handle = (HID_HandleTypeDef *) phost->pActiveClass->pData;
 8004f58:	687b      	ldr	r3, [r7, #4]
 8004f5a:	f8d3 3360 	ldr.w	r3, [r3, #864]	; 0x360
 8004f5e:	69db      	ldr	r3, [r3, #28]
 8004f60:	60bb      	str	r3, [r7, #8]

  /* Switch HID state machine */
  switch (HID_Handle->ctl_state)
 8004f62:	68bb      	ldr	r3, [r7, #8]
 8004f64:	795b      	ldrb	r3, [r3, #5]
 8004f66:	2b05      	cmp	r3, #5
 8004f68:	d872      	bhi.n	8005050 <USBH_HID_ClassRequest+0x108>
 8004f6a:	a201      	add	r2, pc, #4	; (adr r2, 8004f70 <USBH_HID_ClassRequest+0x28>)
 8004f6c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004f70:	08004f89 	.word	0x08004f89
 8004f74:	08005051 	.word	0x08005051
 8004f78:	08004fa3 	.word	0x08004fa3
 8004f7c:	08004f89 	.word	0x08004f89
 8004f80:	08004fdf 	.word	0x08004fdf
 8004f84:	08005009 	.word	0x08005009
  {
  case HID_REQ_INIT:
  case HID_REQ_GET_HID_DESC:

    USBH_HID_ParseHIDDesc(&HID_Handle->HID_Desc, phost->device.CfgDesc_Raw);
 8004f88:	68bb      	ldr	r3, [r7, #8]
 8004f8a:	f103 0226 	add.w	r2, r3, #38	; 0x26
 8004f8e:	687b      	ldr	r3, [r7, #4]
 8004f90:	331c      	adds	r3, #28
 8004f92:	4619      	mov	r1, r3
 8004f94:	4610      	mov	r0, r2
 8004f96:	f000 fa40 	bl	800541a <USBH_HID_ParseHIDDesc>

    HID_Handle->ctl_state = HID_REQ_GET_REPORT_DESC;
 8004f9a:	68bb      	ldr	r3, [r7, #8]
 8004f9c:	2202      	movs	r2, #2
 8004f9e:	715a      	strb	r2, [r3, #5]

    break;
 8004fa0:	e05d      	b.n	800505e <USBH_HID_ClassRequest+0x116>
  case HID_REQ_GET_REPORT_DESC:

    /* Get Report Desc */
    classReqStatus = USBH_HID_GetHIDReportDescriptor(phost, HID_Handle->HID_Desc.wItemLength);
 8004fa2:	68bb      	ldr	r3, [r7, #8]
 8004fa4:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8004fa6:	4619      	mov	r1, r3
 8004fa8:	6878      	ldr	r0, [r7, #4]
 8004faa:	f000 f99b 	bl	80052e4 <USBH_HID_GetHIDReportDescriptor>
 8004fae:	4603      	mov	r3, r0
 8004fb0:	73bb      	strb	r3, [r7, #14]
    if (classReqStatus == USBH_OK)
 8004fb2:	7bbb      	ldrb	r3, [r7, #14]
 8004fb4:	2b00      	cmp	r3, #0
 8004fb6:	d103      	bne.n	8004fc0 <USBH_HID_ClassRequest+0x78>
    {
      /* The descriptor is available in phost->device.Data */
      HID_Handle->ctl_state = HID_REQ_SET_IDLE;
 8004fb8:	68bb      	ldr	r3, [r7, #8]
 8004fba:	2204      	movs	r2, #4
 8004fbc:	715a      	strb	r2, [r3, #5]
    else
    {
      /* .. */
    }

    break;
 8004fbe:	e049      	b.n	8005054 <USBH_HID_ClassRequest+0x10c>
    else if (classReqStatus == USBH_NOT_SUPPORTED)
 8004fc0:	7bbb      	ldrb	r3, [r7, #14]
 8004fc2:	2b03      	cmp	r3, #3
 8004fc4:	d146      	bne.n	8005054 <USBH_HID_ClassRequest+0x10c>
      USBH_ErrLog("Control error: HID: Device Get Report Descriptor request failed");
 8004fc6:	4828      	ldr	r0, [pc, #160]	; (8005068 <USBH_HID_ClassRequest+0x120>)
 8004fc8:	f002 ff1a 	bl	8007e00 <iprintf>
 8004fcc:	4827      	ldr	r0, [pc, #156]	; (800506c <USBH_HID_ClassRequest+0x124>)
 8004fce:	f002 ff17 	bl	8007e00 <iprintf>
 8004fd2:	200a      	movs	r0, #10
 8004fd4:	f002 ff2c 	bl	8007e30 <putchar>
      status = USBH_FAIL;
 8004fd8:	2302      	movs	r3, #2
 8004fda:	73fb      	strb	r3, [r7, #15]
    break;
 8004fdc:	e03a      	b.n	8005054 <USBH_HID_ClassRequest+0x10c>

  case HID_REQ_SET_IDLE:

    classReqStatus = USBH_HID_SetIdle(phost, 0U, 0U);
 8004fde:	2200      	movs	r2, #0
 8004fe0:	2100      	movs	r1, #0
 8004fe2:	6878      	ldr	r0, [r7, #4]
 8004fe4:	f000 f99f 	bl	8005326 <USBH_HID_SetIdle>
 8004fe8:	4603      	mov	r3, r0
 8004fea:	73bb      	strb	r3, [r7, #14]

    /* set Idle */
    if (classReqStatus == USBH_OK)
 8004fec:	7bbb      	ldrb	r3, [r7, #14]
 8004fee:	2b00      	cmp	r3, #0
 8004ff0:	d103      	bne.n	8004ffa <USBH_HID_ClassRequest+0xb2>
    {
      HID_Handle->ctl_state = HID_REQ_SET_PROTOCOL;
 8004ff2:	68bb      	ldr	r3, [r7, #8]
 8004ff4:	2205      	movs	r2, #5
 8004ff6:	715a      	strb	r2, [r3, #5]
      if (classReqStatus == USBH_NOT_SUPPORTED)
      {
        HID_Handle->ctl_state = HID_REQ_SET_PROTOCOL;
      }
    }
    break;
 8004ff8:	e02e      	b.n	8005058 <USBH_HID_ClassRequest+0x110>
      if (classReqStatus == USBH_NOT_SUPPORTED)
 8004ffa:	7bbb      	ldrb	r3, [r7, #14]
 8004ffc:	2b03      	cmp	r3, #3
 8004ffe:	d12b      	bne.n	8005058 <USBH_HID_ClassRequest+0x110>
        HID_Handle->ctl_state = HID_REQ_SET_PROTOCOL;
 8005000:	68bb      	ldr	r3, [r7, #8]
 8005002:	2205      	movs	r2, #5
 8005004:	715a      	strb	r2, [r3, #5]
    break;
 8005006:	e027      	b.n	8005058 <USBH_HID_ClassRequest+0x110>

  case HID_REQ_SET_PROTOCOL:
    /* set protocol */
    classReqStatus = USBH_HID_SetProtocol(phost, 0U);
 8005008:	2100      	movs	r1, #0
 800500a:	6878      	ldr	r0, [r7, #4]
 800500c:	f000 f9df 	bl	80053ce <USBH_HID_SetProtocol>
 8005010:	4603      	mov	r3, r0
 8005012:	73bb      	strb	r3, [r7, #14]
    if (classReqStatus == USBH_OK)
 8005014:	7bbb      	ldrb	r3, [r7, #14]
 8005016:	2b00      	cmp	r3, #0
 8005018:	d10b      	bne.n	8005032 <USBH_HID_ClassRequest+0xea>
    {
      HID_Handle->ctl_state = HID_REQ_IDLE;
 800501a:	68bb      	ldr	r3, [r7, #8]
 800501c:	2201      	movs	r2, #1
 800501e:	715a      	strb	r2, [r3, #5]

      /* all requests performed*/
      phost->pUser(phost, HOST_USER_CLASS_ACTIVE);
 8005020:	687b      	ldr	r3, [r7, #4]
 8005022:	f8d3 33b8 	ldr.w	r3, [r3, #952]	; 0x3b8
 8005026:	2102      	movs	r1, #2
 8005028:	6878      	ldr	r0, [r7, #4]
 800502a:	4798      	blx	r3
      status = USBH_OK;
 800502c:	2300      	movs	r3, #0
 800502e:	73fb      	strb	r3, [r7, #15]
    }
    else
    {
      /* .. */
    }
    break;
 8005030:	e014      	b.n	800505c <USBH_HID_ClassRequest+0x114>
    else if (classReqStatus == USBH_NOT_SUPPORTED)
 8005032:	7bbb      	ldrb	r3, [r7, #14]
 8005034:	2b03      	cmp	r3, #3
 8005036:	d111      	bne.n	800505c <USBH_HID_ClassRequest+0x114>
      USBH_ErrLog("Control error: HID: Device Set protocol request failed");
 8005038:	480b      	ldr	r0, [pc, #44]	; (8005068 <USBH_HID_ClassRequest+0x120>)
 800503a:	f002 fee1 	bl	8007e00 <iprintf>
 800503e:	480c      	ldr	r0, [pc, #48]	; (8005070 <USBH_HID_ClassRequest+0x128>)
 8005040:	f002 fede 	bl	8007e00 <iprintf>
 8005044:	200a      	movs	r0, #10
 8005046:	f002 fef3 	bl	8007e30 <putchar>
      status = USBH_FAIL;
 800504a:	2302      	movs	r3, #2
 800504c:	73fb      	strb	r3, [r7, #15]
    break;
 800504e:	e005      	b.n	800505c <USBH_HID_ClassRequest+0x114>

  case HID_REQ_IDLE:
  default:
    break;
 8005050:	bf00      	nop
 8005052:	e004      	b.n	800505e <USBH_HID_ClassRequest+0x116>
    break;
 8005054:	bf00      	nop
 8005056:	e002      	b.n	800505e <USBH_HID_ClassRequest+0x116>
    break;
 8005058:	bf00      	nop
 800505a:	e000      	b.n	800505e <USBH_HID_ClassRequest+0x116>
    break;
 800505c:	bf00      	nop
  }

  return status;
 800505e:	7bfb      	ldrb	r3, [r7, #15]
}
 8005060:	4618      	mov	r0, r3
 8005062:	3710      	adds	r7, #16
 8005064:	46bd      	mov	sp, r7
 8005066:	bd80      	pop	{r7, pc}
 8005068:	08008d00 	.word	0x08008d00
 800506c:	08008d08 	.word	0x08008d08
 8005070:	08008d48 	.word	0x08008d48

08005074 <USBH_HID_Process>:
  *         The function is for managing state machine for HID data transfers
  * @param  phost: Host handle
  * @retval USBH Status
  */
static USBH_StatusTypeDef USBH_HID_Process(USBH_HandleTypeDef *phost)
{
 8005074:	b580      	push	{r7, lr}
 8005076:	b088      	sub	sp, #32
 8005078:	af02      	add	r7, sp, #8
 800507a:	6078      	str	r0, [r7, #4]
  USBH_StatusTypeDef status = USBH_OK;
 800507c:	2300      	movs	r3, #0
 800507e:	75fb      	strb	r3, [r7, #23]
  HID_HandleTypeDef *HID_Handle = (HID_HandleTypeDef *) phost->pActiveClass->pData;
 8005080:	687b      	ldr	r3, [r7, #4]
 8005082:	f8d3 3360 	ldr.w	r3, [r3, #864]	; 0x360
 8005086:	69db      	ldr	r3, [r3, #28]
 8005088:	613b      	str	r3, [r7, #16]
  uint32_t XferSize;

  switch (HID_Handle->state)
 800508a:	693b      	ldr	r3, [r7, #16]
 800508c:	789b      	ldrb	r3, [r3, #2]
 800508e:	2b06      	cmp	r3, #6
 8005090:	f200 80a9 	bhi.w	80051e6 <USBH_HID_Process+0x172>
 8005094:	a201      	add	r2, pc, #4	; (adr r2, 800509c <USBH_HID_Process+0x28>)
 8005096:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800509a:	bf00      	nop
 800509c:	080050b9 	.word	0x080050b9
 80050a0:	080050c9 	.word	0x080050c9
 80050a4:	080051e7 	.word	0x080051e7
 80050a8:	080051e7 	.word	0x080051e7
 80050ac:	08005139 	.word	0x08005139
 80050b0:	08005123 	.word	0x08005123
 80050b4:	08005167 	.word	0x08005167
  {
    case HID_INIT:
      HID_Handle->Init(phost);
 80050b8:	693b      	ldr	r3, [r7, #16]
 80050ba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80050bc:	6878      	ldr	r0, [r7, #4]
 80050be:	4798      	blx	r3
      HID_Handle->state = HID_IDLE;
 80050c0:	693b      	ldr	r3, [r7, #16]
 80050c2:	2201      	movs	r2, #1
 80050c4:	709a      	strb	r2, [r3, #2]
      (void)osMessagePut(phost->os_event, phost->os_msg, 0U);
#else
      (void)osMessageQueuePut(phost->os_event, &phost->os_msg, 0U, NULL);
#endif
#endif
      break;
 80050c6:	e093      	b.n	80051f0 <USBH_HID_Process+0x17c>

    case HID_IDLE:
      status = USBH_HID_GetReport(phost, 0x01U, 0U, HID_Handle->pData, (uint8_t)HID_Handle->length);
 80050c8:	693b      	ldr	r3, [r7, #16]
 80050ca:	695a      	ldr	r2, [r3, #20]
 80050cc:	693b      	ldr	r3, [r7, #16]
 80050ce:	8b1b      	ldrh	r3, [r3, #24]
 80050d0:	b2db      	uxtb	r3, r3
 80050d2:	9300      	str	r3, [sp, #0]
 80050d4:	4613      	mov	r3, r2
 80050d6:	2200      	movs	r2, #0
 80050d8:	2101      	movs	r1, #1
 80050da:	6878      	ldr	r0, [r7, #4]
 80050dc:	f000 f94b 	bl	8005376 <USBH_HID_GetReport>
 80050e0:	4603      	mov	r3, r0
 80050e2:	75fb      	strb	r3, [r7, #23]
      if (status == USBH_OK)
 80050e4:	7dfb      	ldrb	r3, [r7, #23]
 80050e6:	2b00      	cmp	r3, #0
 80050e8:	d103      	bne.n	80050f2 <USBH_HID_Process+0x7e>
      {
        HID_Handle->state = HID_SYNC;
 80050ea:	693b      	ldr	r3, [r7, #16]
 80050ec:	2205      	movs	r2, #5
 80050ee:	709a      	strb	r2, [r3, #2]
      (void)osMessagePut(phost->os_event, phost->os_msg, 0U);
#else
      (void)osMessageQueuePut(phost->os_event, &phost->os_msg, 0U, NULL);
#endif
#endif
      break;
 80050f0:	e07e      	b.n	80051f0 <USBH_HID_Process+0x17c>
      else if (status == USBH_BUSY)
 80050f2:	7dfb      	ldrb	r3, [r7, #23]
 80050f4:	2b01      	cmp	r3, #1
 80050f6:	d105      	bne.n	8005104 <USBH_HID_Process+0x90>
        HID_Handle->state = HID_IDLE;
 80050f8:	693b      	ldr	r3, [r7, #16]
 80050fa:	2201      	movs	r2, #1
 80050fc:	709a      	strb	r2, [r3, #2]
        status = USBH_OK;
 80050fe:	2300      	movs	r3, #0
 8005100:	75fb      	strb	r3, [r7, #23]
      break;
 8005102:	e075      	b.n	80051f0 <USBH_HID_Process+0x17c>
      else if (status == USBH_NOT_SUPPORTED)
 8005104:	7dfb      	ldrb	r3, [r7, #23]
 8005106:	2b03      	cmp	r3, #3
 8005108:	d105      	bne.n	8005116 <USBH_HID_Process+0xa2>
        HID_Handle->state = HID_SYNC;
 800510a:	693b      	ldr	r3, [r7, #16]
 800510c:	2205      	movs	r2, #5
 800510e:	709a      	strb	r2, [r3, #2]
        status = USBH_OK;
 8005110:	2300      	movs	r3, #0
 8005112:	75fb      	strb	r3, [r7, #23]
      break;
 8005114:	e06c      	b.n	80051f0 <USBH_HID_Process+0x17c>
        HID_Handle->state = HID_ERROR;
 8005116:	693b      	ldr	r3, [r7, #16]
 8005118:	2207      	movs	r2, #7
 800511a:	709a      	strb	r2, [r3, #2]
        status = USBH_FAIL;
 800511c:	2302      	movs	r3, #2
 800511e:	75fb      	strb	r3, [r7, #23]
      break;
 8005120:	e066      	b.n	80051f0 <USBH_HID_Process+0x17c>

    case HID_SYNC:
      /* Sync with start of Even Frame */
      if (phost->Timer & 1U)
 8005122:	687b      	ldr	r3, [r7, #4]
 8005124:	f8d3 33a8 	ldr.w	r3, [r3, #936]	; 0x3a8
 8005128:	f003 0301 	and.w	r3, r3, #1
 800512c:	2b00      	cmp	r3, #0
 800512e:	d05c      	beq.n	80051ea <USBH_HID_Process+0x176>
      {
        HID_Handle->state = HID_GET_DATA;
 8005130:	693b      	ldr	r3, [r7, #16]
 8005132:	2204      	movs	r2, #4
 8005134:	709a      	strb	r2, [r3, #2]
      (void)osMessagePut(phost->os_event, phost->os_msg, 0U);
#else
      (void)osMessageQueuePut(phost->os_event, &phost->os_msg, 0U, NULL);
#endif
#endif
      break;
 8005136:	e058      	b.n	80051ea <USBH_HID_Process+0x176>

    case HID_GET_DATA:
      USBH_InterruptReceiveData(phost, HID_Handle->pData,
 8005138:	693b      	ldr	r3, [r7, #16]
 800513a:	6959      	ldr	r1, [r3, #20]
                                (uint8_t)HID_Handle->length,
 800513c:	693b      	ldr	r3, [r7, #16]
 800513e:	8b1b      	ldrh	r3, [r3, #24]
      USBH_InterruptReceiveData(phost, HID_Handle->pData,
 8005140:	b2da      	uxtb	r2, r3
 8005142:	693b      	ldr	r3, [r7, #16]
 8005144:	785b      	ldrb	r3, [r3, #1]
 8005146:	6878      	ldr	r0, [r7, #4]
 8005148:	f002 f809 	bl	800715e <USBH_InterruptReceiveData>
                                HID_Handle->InPipe);

      HID_Handle->state = HID_POLL;
 800514c:	693b      	ldr	r3, [r7, #16]
 800514e:	2206      	movs	r2, #6
 8005150:	709a      	strb	r2, [r3, #2]
      HID_Handle->timer = phost->Timer;
 8005152:	687b      	ldr	r3, [r7, #4]
 8005154:	f8d3 23a8 	ldr.w	r2, [r3, #936]	; 0x3a8
 8005158:	693b      	ldr	r3, [r7, #16]
 800515a:	621a      	str	r2, [r3, #32]
      HID_Handle->DataReady = 0U;
 800515c:	693b      	ldr	r3, [r7, #16]
 800515e:	2200      	movs	r2, #0
 8005160:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
      break;
 8005164:	e044      	b.n	80051f0 <USBH_HID_Process+0x17c>

    case HID_POLL:
      if (USBH_LL_GetURBState(phost, HID_Handle->InPipe) == USBH_URB_DONE)
 8005166:	693b      	ldr	r3, [r7, #16]
 8005168:	785b      	ldrb	r3, [r3, #1]
 800516a:	4619      	mov	r1, r3
 800516c:	6878      	ldr	r0, [r7, #4]
 800516e:	f002 faef 	bl	8007750 <USBH_LL_GetURBState>
 8005172:	4603      	mov	r3, r0
 8005174:	2b01      	cmp	r3, #1
 8005176:	d120      	bne.n	80051ba <USBH_HID_Process+0x146>
      {
        XferSize = USBH_LL_GetLastXferSize(phost, HID_Handle->InPipe);
 8005178:	693b      	ldr	r3, [r7, #16]
 800517a:	785b      	ldrb	r3, [r3, #1]
 800517c:	4619      	mov	r1, r3
 800517e:	6878      	ldr	r0, [r7, #4]
 8005180:	f002 fa54 	bl	800762c <USBH_LL_GetLastXferSize>
 8005184:	60f8      	str	r0, [r7, #12]

        if ((HID_Handle->DataReady == 0U) && (XferSize != 0U))
 8005186:	693b      	ldr	r3, [r7, #16]
 8005188:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
 800518c:	2b00      	cmp	r3, #0
 800518e:	d12e      	bne.n	80051ee <USBH_HID_Process+0x17a>
 8005190:	68fb      	ldr	r3, [r7, #12]
 8005192:	2b00      	cmp	r3, #0
 8005194:	d02b      	beq.n	80051ee <USBH_HID_Process+0x17a>
        {
          USBH_HID_FifoWrite(&HID_Handle->fifo, HID_Handle->pData, HID_Handle->length);
 8005196:	693b      	ldr	r3, [r7, #16]
 8005198:	f103 0008 	add.w	r0, r3, #8
 800519c:	693b      	ldr	r3, [r7, #16]
 800519e:	6959      	ldr	r1, [r3, #20]
 80051a0:	693b      	ldr	r3, [r7, #16]
 80051a2:	8b1b      	ldrh	r3, [r3, #24]
 80051a4:	461a      	mov	r2, r3
 80051a6:	f000 f9fb 	bl	80055a0 <USBH_HID_FifoWrite>
          HID_Handle->DataReady = 1U;
 80051aa:	693b      	ldr	r3, [r7, #16]
 80051ac:	2201      	movs	r2, #1
 80051ae:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
          USBH_HID_EventCallback(phost);
 80051b2:	6878      	ldr	r0, [r7, #4]
 80051b4:	f002 fd1e 	bl	8007bf4 <USBH_HID_EventCallback>
            /* Change state to issue next IN token */
            HID_Handle->state = HID_GET_DATA;
          }
        }
      }
      break;
 80051b8:	e019      	b.n	80051ee <USBH_HID_Process+0x17a>
        if (USBH_LL_GetURBState(phost, HID_Handle->InPipe) == USBH_URB_STALL)
 80051ba:	693b      	ldr	r3, [r7, #16]
 80051bc:	785b      	ldrb	r3, [r3, #1]
 80051be:	4619      	mov	r1, r3
 80051c0:	6878      	ldr	r0, [r7, #4]
 80051c2:	f002 fac5 	bl	8007750 <USBH_LL_GetURBState>
 80051c6:	4603      	mov	r3, r0
 80051c8:	2b05      	cmp	r3, #5
 80051ca:	d110      	bne.n	80051ee <USBH_HID_Process+0x17a>
          if (USBH_ClrFeature(phost, HID_Handle->ep_addr) == USBH_OK)
 80051cc:	693b      	ldr	r3, [r7, #16]
 80051ce:	7e9b      	ldrb	r3, [r3, #26]
 80051d0:	4619      	mov	r1, r3
 80051d2:	6878      	ldr	r0, [r7, #4]
 80051d4:	f001 fbc7 	bl	8006966 <USBH_ClrFeature>
 80051d8:	4603      	mov	r3, r0
 80051da:	2b00      	cmp	r3, #0
 80051dc:	d107      	bne.n	80051ee <USBH_HID_Process+0x17a>
            HID_Handle->state = HID_GET_DATA;
 80051de:	693b      	ldr	r3, [r7, #16]
 80051e0:	2204      	movs	r2, #4
 80051e2:	709a      	strb	r2, [r3, #2]
      break;
 80051e4:	e003      	b.n	80051ee <USBH_HID_Process+0x17a>

    default:
      break;
 80051e6:	bf00      	nop
 80051e8:	e002      	b.n	80051f0 <USBH_HID_Process+0x17c>
      break;
 80051ea:	bf00      	nop
 80051ec:	e000      	b.n	80051f0 <USBH_HID_Process+0x17c>
      break;
 80051ee:	bf00      	nop
  }

  return status;
 80051f0:	7dfb      	ldrb	r3, [r7, #23]
}
 80051f2:	4618      	mov	r0, r3
 80051f4:	3718      	adds	r7, #24
 80051f6:	46bd      	mov	sp, r7
 80051f8:	bd80      	pop	{r7, pc}
 80051fa:	bf00      	nop

080051fc <USBH_HID_SOFProcess>:
  *         The function is for managing the SOF Process
  * @param  phost: Host handle
  * @retval USBH Status
  */
static USBH_StatusTypeDef USBH_HID_SOFProcess(USBH_HandleTypeDef *phost)
{
 80051fc:	b480      	push	{r7}
 80051fe:	b085      	sub	sp, #20
 8005200:	af00      	add	r7, sp, #0
 8005202:	6078      	str	r0, [r7, #4]
  HID_HandleTypeDef *HID_Handle = (HID_HandleTypeDef *) phost->pActiveClass->pData;
 8005204:	687b      	ldr	r3, [r7, #4]
 8005206:	f8d3 3360 	ldr.w	r3, [r3, #864]	; 0x360
 800520a:	69db      	ldr	r3, [r3, #28]
 800520c:	60fb      	str	r3, [r7, #12]

  if (HID_Handle->state == HID_POLL)
 800520e:	68fb      	ldr	r3, [r7, #12]
 8005210:	789b      	ldrb	r3, [r3, #2]
 8005212:	2b06      	cmp	r3, #6
 8005214:	d10c      	bne.n	8005230 <USBH_HID_SOFProcess+0x34>
  {
    if ((phost->Timer - HID_Handle->timer) >= HID_Handle->poll)
 8005216:	687b      	ldr	r3, [r7, #4]
 8005218:	f8d3 23a8 	ldr.w	r2, [r3, #936]	; 0x3a8
 800521c:	68fb      	ldr	r3, [r7, #12]
 800521e:	6a1b      	ldr	r3, [r3, #32]
 8005220:	1ad3      	subs	r3, r2, r3
 8005222:	68fa      	ldr	r2, [r7, #12]
 8005224:	8b92      	ldrh	r2, [r2, #28]
 8005226:	4293      	cmp	r3, r2
 8005228:	d302      	bcc.n	8005230 <USBH_HID_SOFProcess+0x34>
    {
      HID_Handle->state = HID_GET_DATA;
 800522a:	68fb      	ldr	r3, [r7, #12]
 800522c:	2204      	movs	r2, #4
 800522e:	709a      	strb	r2, [r3, #2]
      (void)osMessageQueuePut(phost->os_event, &phost->os_msg, 0U, NULL);
#endif
#endif
    }
  }
  return USBH_OK;
 8005230:	2300      	movs	r3, #0
}
 8005232:	4618      	mov	r0, r3
 8005234:	3714      	adds	r7, #20
 8005236:	46bd      	mov	sp, r7
 8005238:	f85d 7b04 	ldr.w	r7, [sp], #4
 800523c:	4770      	bx	lr
	...

08005240 <USBH_HID_ParseHIDReportDesc>:

// dong
static void USBH_HID_ParseHIDReportDesc(USBH_HandleTypeDef *phost,
                                                   uint16_t length)
{
 8005240:	b580      	push	{r7, lr}
 8005242:	b086      	sub	sp, #24
 8005244:	af00      	add	r7, sp, #0
 8005246:	6078      	str	r0, [r7, #4]
 8005248:	460b      	mov	r3, r1
 800524a:	807b      	strh	r3, [r7, #2]
	//parsing
	uint8_t* raw = phost->device.Data;
 800524c:	687b      	ldr	r3, [r7, #4]
 800524e:	f503 738e 	add.w	r3, r3, #284	; 0x11c
 8005252:	613b      	str	r3, [r7, #16]
	uint8_t b0=0;
 8005254:	2300      	movs	r3, #0
 8005256:	73fb      	strb	r3, [r7, #15]
	uint8_t bsize=0;
 8005258:	2300      	movs	r3, #0
 800525a:	73bb      	strb	r3, [r7, #14]

	uint16_t i=0;
 800525c:	2300      	movs	r3, #0
 800525e:	82fb      	strh	r3, [r7, #22]
	while(i < length) {
 8005260:	e035      	b.n	80052ce <USBH_HID_ParseHIDReportDesc+0x8e>
		b0 = raw[i++];
 8005262:	8afb      	ldrh	r3, [r7, #22]
 8005264:	1c5a      	adds	r2, r3, #1
 8005266:	82fa      	strh	r2, [r7, #22]
 8005268:	461a      	mov	r2, r3
 800526a:	693b      	ldr	r3, [r7, #16]
 800526c:	4413      	add	r3, r2
 800526e:	781b      	ldrb	r3, [r3, #0]
 8005270:	73fb      	strb	r3, [r7, #15]
		bsize = b0 & 0x03;
 8005272:	7bfb      	ldrb	r3, [r7, #15]
 8005274:	f003 0303 	and.w	r3, r3, #3
 8005278:	73bb      	strb	r3, [r7, #14]
		bsize = (bsize == 3) ? 4 : bsize;
 800527a:	7bbb      	ldrb	r3, [r7, #14]
 800527c:	2b03      	cmp	r3, #3
 800527e:	d001      	beq.n	8005284 <USBH_HID_ParseHIDReportDesc+0x44>
 8005280:	7bbb      	ldrb	r3, [r7, #14]
 8005282:	e000      	b.n	8005286 <USBH_HID_ParseHIDReportDesc+0x46>
 8005284:	2304      	movs	r3, #4
 8005286:	73bb      	strb	r3, [r7, #14]
		printf("%02X, ", b0);
 8005288:	7bfb      	ldrb	r3, [r7, #15]
 800528a:	4619      	mov	r1, r3
 800528c:	4814      	ldr	r0, [pc, #80]	; (80052e0 <USBH_HID_ParseHIDReportDesc+0xa0>)
 800528e:	f002 fdb7 	bl	8007e00 <iprintf>

		for(uint8_t j=0;j<bsize;j++) {
 8005292:	2300      	movs	r3, #0
 8005294:	757b      	strb	r3, [r7, #21]
 8005296:	e011      	b.n	80052bc <USBH_HID_ParseHIDReportDesc+0x7c>
			if(i>=length) {
 8005298:	8afa      	ldrh	r2, [r7, #22]
 800529a:	887b      	ldrh	r3, [r7, #2]
 800529c:	429a      	cmp	r2, r3
 800529e:	d212      	bcs.n	80052c6 <USBH_HID_ParseHIDReportDesc+0x86>
				break;
			}
			printf("%02X, ", raw[i++]);
 80052a0:	8afb      	ldrh	r3, [r7, #22]
 80052a2:	1c5a      	adds	r2, r3, #1
 80052a4:	82fa      	strh	r2, [r7, #22]
 80052a6:	461a      	mov	r2, r3
 80052a8:	693b      	ldr	r3, [r7, #16]
 80052aa:	4413      	add	r3, r2
 80052ac:	781b      	ldrb	r3, [r3, #0]
 80052ae:	4619      	mov	r1, r3
 80052b0:	480b      	ldr	r0, [pc, #44]	; (80052e0 <USBH_HID_ParseHIDReportDesc+0xa0>)
 80052b2:	f002 fda5 	bl	8007e00 <iprintf>
		for(uint8_t j=0;j<bsize;j++) {
 80052b6:	7d7b      	ldrb	r3, [r7, #21]
 80052b8:	3301      	adds	r3, #1
 80052ba:	757b      	strb	r3, [r7, #21]
 80052bc:	7d7a      	ldrb	r2, [r7, #21]
 80052be:	7bbb      	ldrb	r3, [r7, #14]
 80052c0:	429a      	cmp	r2, r3
 80052c2:	d3e9      	bcc.n	8005298 <USBH_HID_ParseHIDReportDesc+0x58>
 80052c4:	e000      	b.n	80052c8 <USBH_HID_ParseHIDReportDesc+0x88>
				break;
 80052c6:	bf00      	nop
		}
		printf("\n");
 80052c8:	200a      	movs	r0, #10
 80052ca:	f002 fdb1 	bl	8007e30 <putchar>
	while(i < length) {
 80052ce:	8afa      	ldrh	r2, [r7, #22]
 80052d0:	887b      	ldrh	r3, [r7, #2]
 80052d2:	429a      	cmp	r2, r3
 80052d4:	d3c5      	bcc.n	8005262 <USBH_HID_ParseHIDReportDesc+0x22>
	}
}
 80052d6:	bf00      	nop
 80052d8:	bf00      	nop
 80052da:	3718      	adds	r7, #24
 80052dc:	46bd      	mov	sp, r7
 80052de:	bd80      	pop	{r7, pc}
 80052e0:	08008d80 	.word	0x08008d80

080052e4 <USBH_HID_GetHIDReportDescriptor>:
  * @param  Length : HID Report Descriptor Length
  * @retval USBH Status
  */
USBH_StatusTypeDef USBH_HID_GetHIDReportDescriptor(USBH_HandleTypeDef *phost,
                                                   uint16_t length)
{
 80052e4:	b580      	push	{r7, lr}
 80052e6:	b086      	sub	sp, #24
 80052e8:	af02      	add	r7, sp, #8
 80052ea:	6078      	str	r0, [r7, #4]
 80052ec:	460b      	mov	r3, r1
 80052ee:	807b      	strh	r3, [r7, #2]
  USBH_StatusTypeDef status;

  status = USBH_GetDescriptor(phost,
                              USB_REQ_RECIPIENT_INTERFACE | USB_REQ_TYPE_STANDARD,
                              USB_DESC_HID_REPORT,
                              phost->device.Data,
 80052f0:	687b      	ldr	r3, [r7, #4]
 80052f2:	f503 728e 	add.w	r2, r3, #284	; 0x11c
  status = USBH_GetDescriptor(phost,
 80052f6:	887b      	ldrh	r3, [r7, #2]
 80052f8:	9300      	str	r3, [sp, #0]
 80052fa:	4613      	mov	r3, r2
 80052fc:	f44f 5208 	mov.w	r2, #8704	; 0x2200
 8005300:	2101      	movs	r1, #1
 8005302:	6878      	ldr	r0, [r7, #4]
 8005304:	f001 fa8f 	bl	8006826 <USBH_GetDescriptor>
 8005308:	4603      	mov	r3, r0
 800530a:	73fb      	strb	r3, [r7, #15]
  In case of USB Boot Mode devices for In report handling ,
  HID report descriptor parsing is not required.
  In case, for supporting Non-Boot Protocol devices and output reports,
  user may parse the report descriptor*/
  // dong
  if(status == USBH_OK) {
 800530c:	7bfb      	ldrb	r3, [r7, #15]
 800530e:	2b00      	cmp	r3, #0
 8005310:	d104      	bne.n	800531c <USBH_HID_GetHIDReportDescriptor+0x38>
  	USBH_HID_ParseHIDReportDesc(phost, length);
 8005312:	887b      	ldrh	r3, [r7, #2]
 8005314:	4619      	mov	r1, r3
 8005316:	6878      	ldr	r0, [r7, #4]
 8005318:	f7ff ff92 	bl	8005240 <USBH_HID_ParseHIDReportDesc>
  }

  return status;
 800531c:	7bfb      	ldrb	r3, [r7, #15]
}
 800531e:	4618      	mov	r0, r3
 8005320:	3710      	adds	r7, #16
 8005322:	46bd      	mov	sp, r7
 8005324:	bd80      	pop	{r7, pc}

08005326 <USBH_HID_SetIdle>:
  * @retval USBH Status
  */
USBH_StatusTypeDef USBH_HID_SetIdle(USBH_HandleTypeDef *phost,
                                    uint8_t duration,
                                    uint8_t reportId)
{
 8005326:	b580      	push	{r7, lr}
 8005328:	b082      	sub	sp, #8
 800532a:	af00      	add	r7, sp, #0
 800532c:	6078      	str	r0, [r7, #4]
 800532e:	460b      	mov	r3, r1
 8005330:	70fb      	strb	r3, [r7, #3]
 8005332:	4613      	mov	r3, r2
 8005334:	70bb      	strb	r3, [r7, #2]

  phost->Control.setup.b.bmRequestType = USB_H2D | USB_REQ_RECIPIENT_INTERFACE | \
 8005336:	687b      	ldr	r3, [r7, #4]
 8005338:	2221      	movs	r2, #33	; 0x21
 800533a:	741a      	strb	r2, [r3, #16]
                                         USB_REQ_TYPE_CLASS;


  phost->Control.setup.b.bRequest = USB_HID_SET_IDLE;
 800533c:	687b      	ldr	r3, [r7, #4]
 800533e:	220a      	movs	r2, #10
 8005340:	745a      	strb	r2, [r3, #17]
  phost->Control.setup.b.wValue.w = (uint16_t)(((uint32_t)duration << 8U) | (uint32_t)reportId);
 8005342:	78fb      	ldrb	r3, [r7, #3]
 8005344:	b29b      	uxth	r3, r3
 8005346:	021b      	lsls	r3, r3, #8
 8005348:	b29a      	uxth	r2, r3
 800534a:	78bb      	ldrb	r3, [r7, #2]
 800534c:	b29b      	uxth	r3, r3
 800534e:	4313      	orrs	r3, r2
 8005350:	b29a      	uxth	r2, r3
 8005352:	687b      	ldr	r3, [r7, #4]
 8005354:	825a      	strh	r2, [r3, #18]

  phost->Control.setup.b.wIndex.w = 0U;
 8005356:	687b      	ldr	r3, [r7, #4]
 8005358:	2200      	movs	r2, #0
 800535a:	829a      	strh	r2, [r3, #20]
  phost->Control.setup.b.wLength.w = 0U;
 800535c:	687b      	ldr	r3, [r7, #4]
 800535e:	2200      	movs	r2, #0
 8005360:	82da      	strh	r2, [r3, #22]

  return USBH_CtlReq(phost, 0U, 0U);
 8005362:	2200      	movs	r2, #0
 8005364:	2100      	movs	r1, #0
 8005366:	6878      	ldr	r0, [r7, #4]
 8005368:	f001 fcdd 	bl	8006d26 <USBH_CtlReq>
 800536c:	4603      	mov	r3, r0
}
 800536e:	4618      	mov	r0, r3
 8005370:	3708      	adds	r7, #8
 8005372:	46bd      	mov	sp, r7
 8005374:	bd80      	pop	{r7, pc}

08005376 <USBH_HID_GetReport>:
USBH_StatusTypeDef USBH_HID_GetReport(USBH_HandleTypeDef *phost,
                                      uint8_t reportType,
                                      uint8_t reportId,
                                      uint8_t *reportBuff,
                                      uint8_t reportLen)
{
 8005376:	b580      	push	{r7, lr}
 8005378:	b084      	sub	sp, #16
 800537a:	af00      	add	r7, sp, #0
 800537c:	60f8      	str	r0, [r7, #12]
 800537e:	607b      	str	r3, [r7, #4]
 8005380:	460b      	mov	r3, r1
 8005382:	72fb      	strb	r3, [r7, #11]
 8005384:	4613      	mov	r3, r2
 8005386:	72bb      	strb	r3, [r7, #10]

  phost->Control.setup.b.bmRequestType = USB_D2H | USB_REQ_RECIPIENT_INTERFACE | \
 8005388:	68fb      	ldr	r3, [r7, #12]
 800538a:	22a1      	movs	r2, #161	; 0xa1
 800538c:	741a      	strb	r2, [r3, #16]
                                         USB_REQ_TYPE_CLASS;


  phost->Control.setup.b.bRequest = USB_HID_GET_REPORT;
 800538e:	68fb      	ldr	r3, [r7, #12]
 8005390:	2201      	movs	r2, #1
 8005392:	745a      	strb	r2, [r3, #17]
  phost->Control.setup.b.wValue.w = (uint16_t)(((uint32_t)reportType << 8U) | (uint32_t)reportId);
 8005394:	7afb      	ldrb	r3, [r7, #11]
 8005396:	b29b      	uxth	r3, r3
 8005398:	021b      	lsls	r3, r3, #8
 800539a:	b29a      	uxth	r2, r3
 800539c:	7abb      	ldrb	r3, [r7, #10]
 800539e:	b29b      	uxth	r3, r3
 80053a0:	4313      	orrs	r3, r2
 80053a2:	b29a      	uxth	r2, r3
 80053a4:	68fb      	ldr	r3, [r7, #12]
 80053a6:	825a      	strh	r2, [r3, #18]

  phost->Control.setup.b.wIndex.w = 0U;
 80053a8:	68fb      	ldr	r3, [r7, #12]
 80053aa:	2200      	movs	r2, #0
 80053ac:	829a      	strh	r2, [r3, #20]
  phost->Control.setup.b.wLength.w = reportLen;
 80053ae:	7e3b      	ldrb	r3, [r7, #24]
 80053b0:	b29a      	uxth	r2, r3
 80053b2:	68fb      	ldr	r3, [r7, #12]
 80053b4:	82da      	strh	r2, [r3, #22]

  return USBH_CtlReq(phost, reportBuff, (uint16_t)reportLen);
 80053b6:	7e3b      	ldrb	r3, [r7, #24]
 80053b8:	b29b      	uxth	r3, r3
 80053ba:	461a      	mov	r2, r3
 80053bc:	6879      	ldr	r1, [r7, #4]
 80053be:	68f8      	ldr	r0, [r7, #12]
 80053c0:	f001 fcb1 	bl	8006d26 <USBH_CtlReq>
 80053c4:	4603      	mov	r3, r0
}
 80053c6:	4618      	mov	r0, r3
 80053c8:	3710      	adds	r7, #16
 80053ca:	46bd      	mov	sp, r7
 80053cc:	bd80      	pop	{r7, pc}

080053ce <USBH_HID_SetProtocol>:
  * @param  protocol : Set Protocol for HID : boot/report protocol
  * @retval USBH Status
  */
USBH_StatusTypeDef USBH_HID_SetProtocol(USBH_HandleTypeDef *phost,
                                        uint8_t protocol)
{
 80053ce:	b580      	push	{r7, lr}
 80053d0:	b082      	sub	sp, #8
 80053d2:	af00      	add	r7, sp, #0
 80053d4:	6078      	str	r0, [r7, #4]
 80053d6:	460b      	mov	r3, r1
 80053d8:	70fb      	strb	r3, [r7, #3]
  phost->Control.setup.b.bmRequestType = USB_H2D | USB_REQ_RECIPIENT_INTERFACE
 80053da:	687b      	ldr	r3, [r7, #4]
 80053dc:	2221      	movs	r2, #33	; 0x21
 80053de:	741a      	strb	r2, [r3, #16]
                                         | USB_REQ_TYPE_CLASS;

  phost->Control.setup.b.bRequest = USB_HID_SET_PROTOCOL;
 80053e0:	687b      	ldr	r3, [r7, #4]
 80053e2:	220b      	movs	r2, #11
 80053e4:	745a      	strb	r2, [r3, #17]
  if (protocol)
 80053e6:	78fb      	ldrb	r3, [r7, #3]
 80053e8:	2b00      	cmp	r3, #0
 80053ea:	d003      	beq.n	80053f4 <USBH_HID_SetProtocol+0x26>
  {
    phost->Control.setup.b.wValue.w = 0U;
 80053ec:	687b      	ldr	r3, [r7, #4]
 80053ee:	2200      	movs	r2, #0
 80053f0:	825a      	strh	r2, [r3, #18]
 80053f2:	e002      	b.n	80053fa <USBH_HID_SetProtocol+0x2c>
  }
  else
  {
    phost->Control.setup.b.wValue.w = 1U;
 80053f4:	687b      	ldr	r3, [r7, #4]
 80053f6:	2201      	movs	r2, #1
 80053f8:	825a      	strh	r2, [r3, #18]
  }

  phost->Control.setup.b.wIndex.w = 0U;
 80053fa:	687b      	ldr	r3, [r7, #4]
 80053fc:	2200      	movs	r2, #0
 80053fe:	829a      	strh	r2, [r3, #20]
  phost->Control.setup.b.wLength.w = 0U;
 8005400:	687b      	ldr	r3, [r7, #4]
 8005402:	2200      	movs	r2, #0
 8005404:	82da      	strh	r2, [r3, #22]

  return USBH_CtlReq(phost, 0U, 0U);
 8005406:	2200      	movs	r2, #0
 8005408:	2100      	movs	r1, #0
 800540a:	6878      	ldr	r0, [r7, #4]
 800540c:	f001 fc8b 	bl	8006d26 <USBH_CtlReq>
 8005410:	4603      	mov	r3, r0

}
 8005412:	4618      	mov	r0, r3
 8005414:	3708      	adds	r7, #8
 8005416:	46bd      	mov	sp, r7
 8005418:	bd80      	pop	{r7, pc}

0800541a <USBH_HID_ParseHIDDesc>:
  * @param  desc: HID Descriptor
  * @param  buf: Buffer where the source descriptor is available
  * @retval None
  */
static void  USBH_HID_ParseHIDDesc(HID_DescTypeDef *desc, uint8_t *buf)
{
 800541a:	b580      	push	{r7, lr}
 800541c:	b084      	sub	sp, #16
 800541e:	af00      	add	r7, sp, #0
 8005420:	6078      	str	r0, [r7, #4]
 8005422:	6039      	str	r1, [r7, #0]
  USBH_DescHeader_t *pdesc = (USBH_DescHeader_t *)buf;
 8005424:	683b      	ldr	r3, [r7, #0]
 8005426:	60fb      	str	r3, [r7, #12]
  uint16_t CfgDescLen;
  uint16_t ptr;

  CfgDescLen = LE16(buf + 2U);
 8005428:	683b      	ldr	r3, [r7, #0]
 800542a:	3302      	adds	r3, #2
 800542c:	781b      	ldrb	r3, [r3, #0]
 800542e:	b29a      	uxth	r2, r3
 8005430:	683b      	ldr	r3, [r7, #0]
 8005432:	3303      	adds	r3, #3
 8005434:	781b      	ldrb	r3, [r3, #0]
 8005436:	b29b      	uxth	r3, r3
 8005438:	021b      	lsls	r3, r3, #8
 800543a:	b29b      	uxth	r3, r3
 800543c:	4313      	orrs	r3, r2
 800543e:	817b      	strh	r3, [r7, #10]

  if (CfgDescLen > USB_CONFIGURATION_DESC_SIZE)
 8005440:	897b      	ldrh	r3, [r7, #10]
 8005442:	2b09      	cmp	r3, #9
 8005444:	d943      	bls.n	80054ce <USBH_HID_ParseHIDDesc+0xb4>
  {
    ptr = USB_LEN_CFG_DESC;
 8005446:	2309      	movs	r3, #9
 8005448:	813b      	strh	r3, [r7, #8]

    while (ptr < CfgDescLen)
 800544a:	e03c      	b.n	80054c6 <USBH_HID_ParseHIDDesc+0xac>
    {
      pdesc = USBH_GetNextDesc((uint8_t *)pdesc, &ptr);
 800544c:	f107 0308 	add.w	r3, r7, #8
 8005450:	4619      	mov	r1, r3
 8005452:	68f8      	ldr	r0, [r7, #12]
 8005454:	f001 fc4c 	bl	8006cf0 <USBH_GetNextDesc>
 8005458:	60f8      	str	r0, [r7, #12]

      if (pdesc->bDescriptorType == USB_DESC_TYPE_HID)
 800545a:	68fb      	ldr	r3, [r7, #12]
 800545c:	785b      	ldrb	r3, [r3, #1]
 800545e:	2b21      	cmp	r3, #33	; 0x21
 8005460:	d131      	bne.n	80054c6 <USBH_HID_ParseHIDDesc+0xac>
      {
        desc->bLength = *(uint8_t *)((uint8_t *)pdesc + 0U);
 8005462:	68fb      	ldr	r3, [r7, #12]
 8005464:	781a      	ldrb	r2, [r3, #0]
 8005466:	687b      	ldr	r3, [r7, #4]
 8005468:	701a      	strb	r2, [r3, #0]
        desc->bDescriptorType = *(uint8_t *)((uint8_t *)pdesc + 1U);
 800546a:	68fb      	ldr	r3, [r7, #12]
 800546c:	785a      	ldrb	r2, [r3, #1]
 800546e:	687b      	ldr	r3, [r7, #4]
 8005470:	705a      	strb	r2, [r3, #1]
        desc->bcdHID = LE16((uint8_t *)pdesc + 2U);
 8005472:	68fb      	ldr	r3, [r7, #12]
 8005474:	3302      	adds	r3, #2
 8005476:	781b      	ldrb	r3, [r3, #0]
 8005478:	b29a      	uxth	r2, r3
 800547a:	68fb      	ldr	r3, [r7, #12]
 800547c:	3303      	adds	r3, #3
 800547e:	781b      	ldrb	r3, [r3, #0]
 8005480:	b29b      	uxth	r3, r3
 8005482:	021b      	lsls	r3, r3, #8
 8005484:	b29b      	uxth	r3, r3
 8005486:	4313      	orrs	r3, r2
 8005488:	b29a      	uxth	r2, r3
 800548a:	687b      	ldr	r3, [r7, #4]
 800548c:	805a      	strh	r2, [r3, #2]
        desc->bCountryCode = *(uint8_t *)((uint8_t *)pdesc + 4U);
 800548e:	68fb      	ldr	r3, [r7, #12]
 8005490:	791a      	ldrb	r2, [r3, #4]
 8005492:	687b      	ldr	r3, [r7, #4]
 8005494:	711a      	strb	r2, [r3, #4]
        desc->bNumDescriptors = *(uint8_t *)((uint8_t *)pdesc + 5U);
 8005496:	68fb      	ldr	r3, [r7, #12]
 8005498:	795a      	ldrb	r2, [r3, #5]
 800549a:	687b      	ldr	r3, [r7, #4]
 800549c:	715a      	strb	r2, [r3, #5]
        desc->bReportDescriptorType = *(uint8_t *)((uint8_t *)pdesc + 6U);
 800549e:	68fb      	ldr	r3, [r7, #12]
 80054a0:	799a      	ldrb	r2, [r3, #6]
 80054a2:	687b      	ldr	r3, [r7, #4]
 80054a4:	719a      	strb	r2, [r3, #6]
        desc->wItemLength = LE16((uint8_t *)pdesc + 7U);
 80054a6:	68fb      	ldr	r3, [r7, #12]
 80054a8:	3307      	adds	r3, #7
 80054aa:	781b      	ldrb	r3, [r3, #0]
 80054ac:	b29a      	uxth	r2, r3
 80054ae:	68fb      	ldr	r3, [r7, #12]
 80054b0:	3308      	adds	r3, #8
 80054b2:	781b      	ldrb	r3, [r3, #0]
 80054b4:	b29b      	uxth	r3, r3
 80054b6:	021b      	lsls	r3, r3, #8
 80054b8:	b29b      	uxth	r3, r3
 80054ba:	4313      	orrs	r3, r2
 80054bc:	b29a      	uxth	r2, r3
 80054be:	687b      	ldr	r3, [r7, #4]
 80054c0:	811a      	strh	r2, [r3, #8]
        break;
 80054c2:	bf00      	nop
      }
    }
  }
}
 80054c4:	e003      	b.n	80054ce <USBH_HID_ParseHIDDesc+0xb4>
    while (ptr < CfgDescLen)
 80054c6:	893b      	ldrh	r3, [r7, #8]
 80054c8:	897a      	ldrh	r2, [r7, #10]
 80054ca:	429a      	cmp	r2, r3
 80054cc:	d8be      	bhi.n	800544c <USBH_HID_ParseHIDDesc+0x32>
}
 80054ce:	bf00      	nop
 80054d0:	3710      	adds	r7, #16
 80054d2:	46bd      	mov	sp, r7
 80054d4:	bd80      	pop	{r7, pc}

080054d6 <USBH_HID_FifoInit>:
  * @param  buf: Fifo buffer
  * @param  size: Fifo Size
  * @retval none
  */
void USBH_HID_FifoInit(FIFO_TypeDef *f, uint8_t *buf, uint16_t size)
{
 80054d6:	b480      	push	{r7}
 80054d8:	b085      	sub	sp, #20
 80054da:	af00      	add	r7, sp, #0
 80054dc:	60f8      	str	r0, [r7, #12]
 80054de:	60b9      	str	r1, [r7, #8]
 80054e0:	4613      	mov	r3, r2
 80054e2:	80fb      	strh	r3, [r7, #6]
  f->head = 0U;
 80054e4:	68fb      	ldr	r3, [r7, #12]
 80054e6:	2200      	movs	r2, #0
 80054e8:	809a      	strh	r2, [r3, #4]
  f->tail = 0U;
 80054ea:	68fb      	ldr	r3, [r7, #12]
 80054ec:	2200      	movs	r2, #0
 80054ee:	80da      	strh	r2, [r3, #6]
  f->lock = 0U;
 80054f0:	68fb      	ldr	r3, [r7, #12]
 80054f2:	2200      	movs	r2, #0
 80054f4:	729a      	strb	r2, [r3, #10]
  f->size = size;
 80054f6:	68fb      	ldr	r3, [r7, #12]
 80054f8:	88fa      	ldrh	r2, [r7, #6]
 80054fa:	811a      	strh	r2, [r3, #8]
  f->buf = buf;
 80054fc:	68fb      	ldr	r3, [r7, #12]
 80054fe:	68ba      	ldr	r2, [r7, #8]
 8005500:	601a      	str	r2, [r3, #0]
}
 8005502:	bf00      	nop
 8005504:	3714      	adds	r7, #20
 8005506:	46bd      	mov	sp, r7
 8005508:	f85d 7b04 	ldr.w	r7, [sp], #4
 800550c:	4770      	bx	lr

0800550e <USBH_HID_FifoRead>:
  * @param  buf: read buffer
  * @param  nbytes: number of item to read
  * @retval number of read items
  */
uint16_t USBH_HID_FifoRead(FIFO_TypeDef *f, void *buf, uint16_t nbytes)
{
 800550e:	b480      	push	{r7}
 8005510:	b087      	sub	sp, #28
 8005512:	af00      	add	r7, sp, #0
 8005514:	60f8      	str	r0, [r7, #12]
 8005516:	60b9      	str	r1, [r7, #8]
 8005518:	4613      	mov	r3, r2
 800551a:	80fb      	strh	r3, [r7, #6]
  uint16_t i;
  uint8_t *p;

  p = (uint8_t *) buf;
 800551c:	68bb      	ldr	r3, [r7, #8]
 800551e:	613b      	str	r3, [r7, #16]

  if (f->lock == 0U)
 8005520:	68fb      	ldr	r3, [r7, #12]
 8005522:	7a9b      	ldrb	r3, [r3, #10]
 8005524:	2b00      	cmp	r3, #0
 8005526:	d131      	bne.n	800558c <USBH_HID_FifoRead+0x7e>
  {
    f->lock = 1U;
 8005528:	68fb      	ldr	r3, [r7, #12]
 800552a:	2201      	movs	r2, #1
 800552c:	729a      	strb	r2, [r3, #10]

    for (i = 0U; i < nbytes; i++)
 800552e:	2300      	movs	r3, #0
 8005530:	82fb      	strh	r3, [r7, #22]
 8005532:	e027      	b.n	8005584 <USBH_HID_FifoRead+0x76>
    {
      if (f->tail != f->head)
 8005534:	68fb      	ldr	r3, [r7, #12]
 8005536:	88da      	ldrh	r2, [r3, #6]
 8005538:	68fb      	ldr	r3, [r7, #12]
 800553a:	889b      	ldrh	r3, [r3, #4]
 800553c:	429a      	cmp	r2, r3
 800553e:	d019      	beq.n	8005574 <USBH_HID_FifoRead+0x66>
      {
        *p++ = f->buf[f->tail];
 8005540:	68fb      	ldr	r3, [r7, #12]
 8005542:	681b      	ldr	r3, [r3, #0]
 8005544:	68fa      	ldr	r2, [r7, #12]
 8005546:	88d2      	ldrh	r2, [r2, #6]
 8005548:	441a      	add	r2, r3
 800554a:	693b      	ldr	r3, [r7, #16]
 800554c:	1c59      	adds	r1, r3, #1
 800554e:	6139      	str	r1, [r7, #16]
 8005550:	7812      	ldrb	r2, [r2, #0]
 8005552:	701a      	strb	r2, [r3, #0]
        f->tail++;
 8005554:	68fb      	ldr	r3, [r7, #12]
 8005556:	88db      	ldrh	r3, [r3, #6]
 8005558:	3301      	adds	r3, #1
 800555a:	b29a      	uxth	r2, r3
 800555c:	68fb      	ldr	r3, [r7, #12]
 800555e:	80da      	strh	r2, [r3, #6]

        if (f->tail == f->size)
 8005560:	68fb      	ldr	r3, [r7, #12]
 8005562:	88da      	ldrh	r2, [r3, #6]
 8005564:	68fb      	ldr	r3, [r7, #12]
 8005566:	891b      	ldrh	r3, [r3, #8]
 8005568:	429a      	cmp	r2, r3
 800556a:	d108      	bne.n	800557e <USBH_HID_FifoRead+0x70>
        {
          f->tail = 0U;
 800556c:	68fb      	ldr	r3, [r7, #12]
 800556e:	2200      	movs	r2, #0
 8005570:	80da      	strh	r2, [r3, #6]
 8005572:	e004      	b.n	800557e <USBH_HID_FifoRead+0x70>
        }
      }
      else
      {
        f->lock = 0U;
 8005574:	68fb      	ldr	r3, [r7, #12]
 8005576:	2200      	movs	r2, #0
 8005578:	729a      	strb	r2, [r3, #10]
        return i;
 800557a:	8afb      	ldrh	r3, [r7, #22]
 800557c:	e00a      	b.n	8005594 <USBH_HID_FifoRead+0x86>
    for (i = 0U; i < nbytes; i++)
 800557e:	8afb      	ldrh	r3, [r7, #22]
 8005580:	3301      	adds	r3, #1
 8005582:	82fb      	strh	r3, [r7, #22]
 8005584:	8afa      	ldrh	r2, [r7, #22]
 8005586:	88fb      	ldrh	r3, [r7, #6]
 8005588:	429a      	cmp	r2, r3
 800558a:	d3d3      	bcc.n	8005534 <USBH_HID_FifoRead+0x26>
      }
    }
  }

  f->lock = 0U;
 800558c:	68fb      	ldr	r3, [r7, #12]
 800558e:	2200      	movs	r2, #0
 8005590:	729a      	strb	r2, [r3, #10]

  return nbytes;
 8005592:	88fb      	ldrh	r3, [r7, #6]
}
 8005594:	4618      	mov	r0, r3
 8005596:	371c      	adds	r7, #28
 8005598:	46bd      	mov	sp, r7
 800559a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800559e:	4770      	bx	lr

080055a0 <USBH_HID_FifoWrite>:
  * @param  buf: read buffer
  * @param  nbytes: number of item to write
  * @retval number of written items
  */
uint16_t USBH_HID_FifoWrite(FIFO_TypeDef *f, void *buf, uint16_t  nbytes)
{
 80055a0:	b480      	push	{r7}
 80055a2:	b087      	sub	sp, #28
 80055a4:	af00      	add	r7, sp, #0
 80055a6:	60f8      	str	r0, [r7, #12]
 80055a8:	60b9      	str	r1, [r7, #8]
 80055aa:	4613      	mov	r3, r2
 80055ac:	80fb      	strh	r3, [r7, #6]
  uint16_t i;
  uint8_t *p;

  p = (uint8_t *) buf;
 80055ae:	68bb      	ldr	r3, [r7, #8]
 80055b0:	613b      	str	r3, [r7, #16]

  if (f->lock == 0U)
 80055b2:	68fb      	ldr	r3, [r7, #12]
 80055b4:	7a9b      	ldrb	r3, [r3, #10]
 80055b6:	2b00      	cmp	r3, #0
 80055b8:	d13c      	bne.n	8005634 <USBH_HID_FifoWrite+0x94>
  {
    f->lock = 1U;
 80055ba:	68fb      	ldr	r3, [r7, #12]
 80055bc:	2201      	movs	r2, #1
 80055be:	729a      	strb	r2, [r3, #10]

    for (i = 0U; i < nbytes; i++)
 80055c0:	2300      	movs	r3, #0
 80055c2:	82fb      	strh	r3, [r7, #22]
 80055c4:	e032      	b.n	800562c <USBH_HID_FifoWrite+0x8c>
    {
      if ((f->head + 1U == f->tail) ||
 80055c6:	68fb      	ldr	r3, [r7, #12]
 80055c8:	889b      	ldrh	r3, [r3, #4]
 80055ca:	3301      	adds	r3, #1
 80055cc:	68fa      	ldr	r2, [r7, #12]
 80055ce:	88d2      	ldrh	r2, [r2, #6]
 80055d0:	4293      	cmp	r3, r2
 80055d2:	d00a      	beq.n	80055ea <USBH_HID_FifoWrite+0x4a>
          ((f->head + 1U == f->size) && (f->tail == 0U)))
 80055d4:	68fb      	ldr	r3, [r7, #12]
 80055d6:	889b      	ldrh	r3, [r3, #4]
 80055d8:	3301      	adds	r3, #1
 80055da:	68fa      	ldr	r2, [r7, #12]
 80055dc:	8912      	ldrh	r2, [r2, #8]
      if ((f->head + 1U == f->tail) ||
 80055de:	4293      	cmp	r3, r2
 80055e0:	d108      	bne.n	80055f4 <USBH_HID_FifoWrite+0x54>
          ((f->head + 1U == f->size) && (f->tail == 0U)))
 80055e2:	68fb      	ldr	r3, [r7, #12]
 80055e4:	88db      	ldrh	r3, [r3, #6]
 80055e6:	2b00      	cmp	r3, #0
 80055e8:	d104      	bne.n	80055f4 <USBH_HID_FifoWrite+0x54>
      {
        f->lock = 0U;
 80055ea:	68fb      	ldr	r3, [r7, #12]
 80055ec:	2200      	movs	r2, #0
 80055ee:	729a      	strb	r2, [r3, #10]
        return i;
 80055f0:	8afb      	ldrh	r3, [r7, #22]
 80055f2:	e023      	b.n	800563c <USBH_HID_FifoWrite+0x9c>
      }
      else
      {
        f->buf[f->head] = *p++;
 80055f4:	693b      	ldr	r3, [r7, #16]
 80055f6:	1c5a      	adds	r2, r3, #1
 80055f8:	613a      	str	r2, [r7, #16]
 80055fa:	68fa      	ldr	r2, [r7, #12]
 80055fc:	6812      	ldr	r2, [r2, #0]
 80055fe:	68f9      	ldr	r1, [r7, #12]
 8005600:	8889      	ldrh	r1, [r1, #4]
 8005602:	440a      	add	r2, r1
 8005604:	781b      	ldrb	r3, [r3, #0]
 8005606:	7013      	strb	r3, [r2, #0]
        f->head++;
 8005608:	68fb      	ldr	r3, [r7, #12]
 800560a:	889b      	ldrh	r3, [r3, #4]
 800560c:	3301      	adds	r3, #1
 800560e:	b29a      	uxth	r2, r3
 8005610:	68fb      	ldr	r3, [r7, #12]
 8005612:	809a      	strh	r2, [r3, #4]

        if (f->head == f->size)
 8005614:	68fb      	ldr	r3, [r7, #12]
 8005616:	889a      	ldrh	r2, [r3, #4]
 8005618:	68fb      	ldr	r3, [r7, #12]
 800561a:	891b      	ldrh	r3, [r3, #8]
 800561c:	429a      	cmp	r2, r3
 800561e:	d102      	bne.n	8005626 <USBH_HID_FifoWrite+0x86>
        {
          f->head = 0U;
 8005620:	68fb      	ldr	r3, [r7, #12]
 8005622:	2200      	movs	r2, #0
 8005624:	809a      	strh	r2, [r3, #4]
    for (i = 0U; i < nbytes; i++)
 8005626:	8afb      	ldrh	r3, [r7, #22]
 8005628:	3301      	adds	r3, #1
 800562a:	82fb      	strh	r3, [r7, #22]
 800562c:	8afa      	ldrh	r2, [r7, #22]
 800562e:	88fb      	ldrh	r3, [r7, #6]
 8005630:	429a      	cmp	r2, r3
 8005632:	d3c8      	bcc.n	80055c6 <USBH_HID_FifoWrite+0x26>
        }
      }
    }
  }

  f->lock = 0U;
 8005634:	68fb      	ldr	r3, [r7, #12]
 8005636:	2200      	movs	r2, #0
 8005638:	729a      	strb	r2, [r3, #10]

  return nbytes;
 800563a:	88fb      	ldrh	r3, [r7, #6]
}
 800563c:	4618      	mov	r0, r3
 800563e:	371c      	adds	r7, #28
 8005640:	46bd      	mov	sp, r7
 8005642:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005646:	4770      	bx	lr

08005648 <USBH_HID_KeybdInit>:
  *         The function init the HID keyboard.
  * @param  phost: Host handle
  * @retval USBH Status
  */
USBH_StatusTypeDef USBH_HID_KeybdInit(USBH_HandleTypeDef *phost)
{
 8005648:	b580      	push	{r7, lr}
 800564a:	b084      	sub	sp, #16
 800564c:	af00      	add	r7, sp, #0
 800564e:	6078      	str	r0, [r7, #4]
  uint32_t x;
  HID_HandleTypeDef *HID_Handle = (HID_HandleTypeDef *) phost->pActiveClass->pData;
 8005650:	687b      	ldr	r3, [r7, #4]
 8005652:	f8d3 3360 	ldr.w	r3, [r3, #864]	; 0x360
 8005656:	69db      	ldr	r3, [r3, #28]
 8005658:	60bb      	str	r3, [r7, #8]

  keybd_info.lctrl = keybd_info.lshift = 0U;
 800565a:	4b24      	ldr	r3, [pc, #144]	; (80056ec <USBH_HID_KeybdInit+0xa4>)
 800565c:	2200      	movs	r2, #0
 800565e:	709a      	strb	r2, [r3, #2]
 8005660:	4b22      	ldr	r3, [pc, #136]	; (80056ec <USBH_HID_KeybdInit+0xa4>)
 8005662:	789a      	ldrb	r2, [r3, #2]
 8005664:	4b21      	ldr	r3, [pc, #132]	; (80056ec <USBH_HID_KeybdInit+0xa4>)
 8005666:	705a      	strb	r2, [r3, #1]
  keybd_info.lalt = keybd_info.lgui = 0U;
 8005668:	4b20      	ldr	r3, [pc, #128]	; (80056ec <USBH_HID_KeybdInit+0xa4>)
 800566a:	2200      	movs	r2, #0
 800566c:	711a      	strb	r2, [r3, #4]
 800566e:	4b1f      	ldr	r3, [pc, #124]	; (80056ec <USBH_HID_KeybdInit+0xa4>)
 8005670:	791a      	ldrb	r2, [r3, #4]
 8005672:	4b1e      	ldr	r3, [pc, #120]	; (80056ec <USBH_HID_KeybdInit+0xa4>)
 8005674:	70da      	strb	r2, [r3, #3]
  keybd_info.rctrl = keybd_info.rshift = 0U;
 8005676:	4b1d      	ldr	r3, [pc, #116]	; (80056ec <USBH_HID_KeybdInit+0xa4>)
 8005678:	2200      	movs	r2, #0
 800567a:	719a      	strb	r2, [r3, #6]
 800567c:	4b1b      	ldr	r3, [pc, #108]	; (80056ec <USBH_HID_KeybdInit+0xa4>)
 800567e:	799a      	ldrb	r2, [r3, #6]
 8005680:	4b1a      	ldr	r3, [pc, #104]	; (80056ec <USBH_HID_KeybdInit+0xa4>)
 8005682:	715a      	strb	r2, [r3, #5]
  keybd_info.ralt = keybd_info.rgui = 0U;
 8005684:	4b19      	ldr	r3, [pc, #100]	; (80056ec <USBH_HID_KeybdInit+0xa4>)
 8005686:	2200      	movs	r2, #0
 8005688:	721a      	strb	r2, [r3, #8]
 800568a:	4b18      	ldr	r3, [pc, #96]	; (80056ec <USBH_HID_KeybdInit+0xa4>)
 800568c:	7a1a      	ldrb	r2, [r3, #8]
 800568e:	4b17      	ldr	r3, [pc, #92]	; (80056ec <USBH_HID_KeybdInit+0xa4>)
 8005690:	71da      	strb	r2, [r3, #7]


  for (x = 0U; x < (sizeof(keybd_report_data) / sizeof(uint32_t)); x++)
 8005692:	2300      	movs	r3, #0
 8005694:	60fb      	str	r3, [r7, #12]
 8005696:	e00c      	b.n	80056b2 <USBH_HID_KeybdInit+0x6a>
  {
    keybd_report_data[x] = 0U;
 8005698:	4a15      	ldr	r2, [pc, #84]	; (80056f0 <USBH_HID_KeybdInit+0xa8>)
 800569a:	68fb      	ldr	r3, [r7, #12]
 800569c:	2100      	movs	r1, #0
 800569e:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
    keybd_rx_report_buf[x] = 0U;
 80056a2:	4a14      	ldr	r2, [pc, #80]	; (80056f4 <USBH_HID_KeybdInit+0xac>)
 80056a4:	68fb      	ldr	r3, [r7, #12]
 80056a6:	2100      	movs	r1, #0
 80056a8:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
  for (x = 0U; x < (sizeof(keybd_report_data) / sizeof(uint32_t)); x++)
 80056ac:	68fb      	ldr	r3, [r7, #12]
 80056ae:	3301      	adds	r3, #1
 80056b0:	60fb      	str	r3, [r7, #12]
 80056b2:	68fb      	ldr	r3, [r7, #12]
 80056b4:	2b01      	cmp	r3, #1
 80056b6:	d9ef      	bls.n	8005698 <USBH_HID_KeybdInit+0x50>
  }

  if (HID_Handle->length > (sizeof(keybd_report_data)))
 80056b8:	68bb      	ldr	r3, [r7, #8]
 80056ba:	8b1b      	ldrh	r3, [r3, #24]
 80056bc:	2b08      	cmp	r3, #8
 80056be:	d902      	bls.n	80056c6 <USBH_HID_KeybdInit+0x7e>
  {
    HID_Handle->length = (sizeof(keybd_report_data));
 80056c0:	68bb      	ldr	r3, [r7, #8]
 80056c2:	2208      	movs	r2, #8
 80056c4:	831a      	strh	r2, [r3, #24]
  }
  HID_Handle->pData = (uint8_t *)(void *)keybd_rx_report_buf;
 80056c6:	68bb      	ldr	r3, [r7, #8]
 80056c8:	4a0a      	ldr	r2, [pc, #40]	; (80056f4 <USBH_HID_KeybdInit+0xac>)
 80056ca:	615a      	str	r2, [r3, #20]
  USBH_HID_FifoInit(&HID_Handle->fifo, phost->device.Data, HID_QUEUE_SIZE * sizeof(keybd_report_data));
 80056cc:	68bb      	ldr	r3, [r7, #8]
 80056ce:	f103 0008 	add.w	r0, r3, #8
 80056d2:	687b      	ldr	r3, [r7, #4]
 80056d4:	f503 738e 	add.w	r3, r3, #284	; 0x11c
 80056d8:	2250      	movs	r2, #80	; 0x50
 80056da:	4619      	mov	r1, r3
 80056dc:	f7ff fefb 	bl	80054d6 <USBH_HID_FifoInit>

  return USBH_OK;
 80056e0:	2300      	movs	r3, #0
}
 80056e2:	4618      	mov	r0, r3
 80056e4:	3710      	adds	r7, #16
 80056e6:	46bd      	mov	sp, r7
 80056e8:	bd80      	pop	{r7, pc}
 80056ea:	bf00      	nop
 80056ec:	2000017c 	.word	0x2000017c
 80056f0:	2000016c 	.word	0x2000016c
 80056f4:	20000174 	.word	0x20000174

080056f8 <USBH_HID_MouseInit>:
  *         The function init the HID mouse.
  * @param  phost: Host handle
  * @retval USBH Status
  */
USBH_StatusTypeDef USBH_HID_MouseInit(USBH_HandleTypeDef *phost)
{
 80056f8:	b580      	push	{r7, lr}
 80056fa:	b084      	sub	sp, #16
 80056fc:	af00      	add	r7, sp, #0
 80056fe:	6078      	str	r0, [r7, #4]
  uint32_t i;
  HID_HandleTypeDef *HID_Handle = (HID_HandleTypeDef *) phost->pActiveClass->pData;
 8005700:	687b      	ldr	r3, [r7, #4]
 8005702:	f8d3 3360 	ldr.w	r3, [r3, #864]	; 0x360
 8005706:	69db      	ldr	r3, [r3, #28]
 8005708:	60bb      	str	r3, [r7, #8]

  mouse_info.x = 0U;
 800570a:	4b1d      	ldr	r3, [pc, #116]	; (8005780 <USBH_HID_MouseInit+0x88>)
 800570c:	2200      	movs	r2, #0
 800570e:	701a      	strb	r2, [r3, #0]
  mouse_info.y = 0U;
 8005710:	4b1b      	ldr	r3, [pc, #108]	; (8005780 <USBH_HID_MouseInit+0x88>)
 8005712:	2200      	movs	r2, #0
 8005714:	705a      	strb	r2, [r3, #1]
  mouse_info.buttons[0] = 0U;
 8005716:	4b1a      	ldr	r3, [pc, #104]	; (8005780 <USBH_HID_MouseInit+0x88>)
 8005718:	2200      	movs	r2, #0
 800571a:	709a      	strb	r2, [r3, #2]
  mouse_info.buttons[1] = 0U;
 800571c:	4b18      	ldr	r3, [pc, #96]	; (8005780 <USBH_HID_MouseInit+0x88>)
 800571e:	2200      	movs	r2, #0
 8005720:	70da      	strb	r2, [r3, #3]
  mouse_info.buttons[2] = 0U;
 8005722:	4b17      	ldr	r3, [pc, #92]	; (8005780 <USBH_HID_MouseInit+0x88>)
 8005724:	2200      	movs	r2, #0
 8005726:	711a      	strb	r2, [r3, #4]

  for (i = 0U; i < (sizeof(mouse_report_data) / sizeof(uint32_t)); i++)
 8005728:	2300      	movs	r3, #0
 800572a:	60fb      	str	r3, [r7, #12]
 800572c:	e00c      	b.n	8005748 <USBH_HID_MouseInit+0x50>
  {
    mouse_report_data[i] = 0U;
 800572e:	4a15      	ldr	r2, [pc, #84]	; (8005784 <USBH_HID_MouseInit+0x8c>)
 8005730:	68fb      	ldr	r3, [r7, #12]
 8005732:	2100      	movs	r1, #0
 8005734:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
    mouse_rx_report_buf[i] = 0U;
 8005738:	4a13      	ldr	r2, [pc, #76]	; (8005788 <USBH_HID_MouseInit+0x90>)
 800573a:	68fb      	ldr	r3, [r7, #12]
 800573c:	2100      	movs	r1, #0
 800573e:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
  for (i = 0U; i < (sizeof(mouse_report_data) / sizeof(uint32_t)); i++)
 8005742:	68fb      	ldr	r3, [r7, #12]
 8005744:	3301      	adds	r3, #1
 8005746:	60fb      	str	r3, [r7, #12]
 8005748:	68fb      	ldr	r3, [r7, #12]
 800574a:	2b01      	cmp	r3, #1
 800574c:	d9ef      	bls.n	800572e <USBH_HID_MouseInit+0x36>
  }

  if (HID_Handle->length > sizeof(mouse_report_data))
 800574e:	68bb      	ldr	r3, [r7, #8]
 8005750:	8b1b      	ldrh	r3, [r3, #24]
 8005752:	2b08      	cmp	r3, #8
 8005754:	d902      	bls.n	800575c <USBH_HID_MouseInit+0x64>
  {
    HID_Handle->length = sizeof(mouse_report_data);
 8005756:	68bb      	ldr	r3, [r7, #8]
 8005758:	2208      	movs	r2, #8
 800575a:	831a      	strh	r2, [r3, #24]
  }
  HID_Handle->pData = (uint8_t *)(void *)mouse_rx_report_buf;
 800575c:	68bb      	ldr	r3, [r7, #8]
 800575e:	4a0a      	ldr	r2, [pc, #40]	; (8005788 <USBH_HID_MouseInit+0x90>)
 8005760:	615a      	str	r2, [r3, #20]
  USBH_HID_FifoInit(&HID_Handle->fifo, phost->device.Data, HID_QUEUE_SIZE * sizeof(mouse_report_data));
 8005762:	68bb      	ldr	r3, [r7, #8]
 8005764:	f103 0008 	add.w	r0, r3, #8
 8005768:	687b      	ldr	r3, [r7, #4]
 800576a:	f503 738e 	add.w	r3, r3, #284	; 0x11c
 800576e:	2250      	movs	r2, #80	; 0x50
 8005770:	4619      	mov	r1, r3
 8005772:	f7ff feb0 	bl	80054d6 <USBH_HID_FifoInit>

  return USBH_OK;
 8005776:	2300      	movs	r3, #0
}
 8005778:	4618      	mov	r0, r3
 800577a:	3710      	adds	r7, #16
 800577c:	46bd      	mov	sp, r7
 800577e:	bd80      	pop	{r7, pc}
 8005780:	2000018c 	.word	0x2000018c
 8005784:	20000194 	.word	0x20000194
 8005788:	2000019c 	.word	0x2000019c

0800578c <HID_ReadItem>:
  * @param  ri: report item
  * @param  ndx: report index
* @retval status (0 : fail / otherwise: item value)
  */
uint32_t HID_ReadItem(HID_Report_ItemTypedef *ri, uint8_t ndx)
{
 800578c:	b480      	push	{r7}
 800578e:	b089      	sub	sp, #36	; 0x24
 8005790:	af00      	add	r7, sp, #0
 8005792:	6078      	str	r0, [r7, #4]
 8005794:	460b      	mov	r3, r1
 8005796:	70fb      	strb	r3, [r7, #3]
  uint32_t val = 0U;
 8005798:	2300      	movs	r3, #0
 800579a:	61fb      	str	r3, [r7, #28]
  uint32_t x = 0U;
 800579c:	2300      	movs	r3, #0
 800579e:	61bb      	str	r3, [r7, #24]
  uint32_t bofs;
  uint8_t *data = ri->data;
 80057a0:	687b      	ldr	r3, [r7, #4]
 80057a2:	681b      	ldr	r3, [r3, #0]
 80057a4:	617b      	str	r3, [r7, #20]
  uint8_t shift = ri->shift;
 80057a6:	687b      	ldr	r3, [r7, #4]
 80057a8:	7a1b      	ldrb	r3, [r3, #8]
 80057aa:	74fb      	strb	r3, [r7, #19]

  /* get the logical value of the item */

  /* if this is an array, wee may need to offset ri->data.*/
  if (ri->count > 0U)
 80057ac:	687b      	ldr	r3, [r7, #4]
 80057ae:	7a5b      	ldrb	r3, [r3, #9]
 80057b0:	2b00      	cmp	r3, #0
 80057b2:	d01a      	beq.n	80057ea <HID_ReadItem+0x5e>
  {
    /* If app tries to read outside of the array. */
    if (ri->count <= ndx)
 80057b4:	687b      	ldr	r3, [r7, #4]
 80057b6:	7a5b      	ldrb	r3, [r3, #9]
 80057b8:	78fa      	ldrb	r2, [r7, #3]
 80057ba:	429a      	cmp	r2, r3
 80057bc:	d301      	bcc.n	80057c2 <HID_ReadItem+0x36>
    {
      return (0U);
 80057be:	2300      	movs	r3, #0
 80057c0:	e076      	b.n	80058b0 <HID_ReadItem+0x124>
    }

    /* calculate bit offset */
    bofs = ndx * ri->size;
 80057c2:	78fb      	ldrb	r3, [r7, #3]
 80057c4:	687a      	ldr	r2, [r7, #4]
 80057c6:	6852      	ldr	r2, [r2, #4]
 80057c8:	fb02 f303 	mul.w	r3, r2, r3
 80057cc:	60fb      	str	r3, [r7, #12]
    bofs += shift;
 80057ce:	7cfb      	ldrb	r3, [r7, #19]
 80057d0:	68fa      	ldr	r2, [r7, #12]
 80057d2:	4413      	add	r3, r2
 80057d4:	60fb      	str	r3, [r7, #12]
    /* calculate byte offset + shift pair from bit offset. */
    data += bofs / 8U;
 80057d6:	68fb      	ldr	r3, [r7, #12]
 80057d8:	08db      	lsrs	r3, r3, #3
 80057da:	697a      	ldr	r2, [r7, #20]
 80057dc:	4413      	add	r3, r2
 80057de:	617b      	str	r3, [r7, #20]
    shift = (uint8_t)(bofs % 8U);
 80057e0:	68fb      	ldr	r3, [r7, #12]
 80057e2:	b2db      	uxtb	r3, r3
 80057e4:	f003 0307 	and.w	r3, r3, #7
 80057e8:	74fb      	strb	r3, [r7, #19]
  }
  /* read data bytes in little endian order */
  for (x = 0U; x < ((ri->size & 0x7U) ? (ri->size / 8U) + 1U : (ri->size / 8U)); x++)
 80057ea:	2300      	movs	r3, #0
 80057ec:	61bb      	str	r3, [r7, #24]
 80057ee:	e00a      	b.n	8005806 <HID_ReadItem+0x7a>
  {
    val = (uint32_t)((uint32_t)(*data) << (x * 8U));
 80057f0:	697b      	ldr	r3, [r7, #20]
 80057f2:	781b      	ldrb	r3, [r3, #0]
 80057f4:	461a      	mov	r2, r3
 80057f6:	69bb      	ldr	r3, [r7, #24]
 80057f8:	00db      	lsls	r3, r3, #3
 80057fa:	fa02 f303 	lsl.w	r3, r2, r3
 80057fe:	61fb      	str	r3, [r7, #28]
  for (x = 0U; x < ((ri->size & 0x7U) ? (ri->size / 8U) + 1U : (ri->size / 8U)); x++)
 8005800:	69bb      	ldr	r3, [r7, #24]
 8005802:	3301      	adds	r3, #1
 8005804:	61bb      	str	r3, [r7, #24]
 8005806:	687b      	ldr	r3, [r7, #4]
 8005808:	685b      	ldr	r3, [r3, #4]
 800580a:	f003 0307 	and.w	r3, r3, #7
 800580e:	2b00      	cmp	r3, #0
 8005810:	d004      	beq.n	800581c <HID_ReadItem+0x90>
 8005812:	687b      	ldr	r3, [r7, #4]
 8005814:	685b      	ldr	r3, [r3, #4]
 8005816:	08db      	lsrs	r3, r3, #3
 8005818:	3301      	adds	r3, #1
 800581a:	e002      	b.n	8005822 <HID_ReadItem+0x96>
 800581c:	687b      	ldr	r3, [r7, #4]
 800581e:	685b      	ldr	r3, [r3, #4]
 8005820:	08db      	lsrs	r3, r3, #3
 8005822:	69ba      	ldr	r2, [r7, #24]
 8005824:	4293      	cmp	r3, r2
 8005826:	d8e3      	bhi.n	80057f0 <HID_ReadItem+0x64>
  }
  val = (val >> shift) & ((1U << ri->size) - 1U);
 8005828:	7cfb      	ldrb	r3, [r7, #19]
 800582a:	69fa      	ldr	r2, [r7, #28]
 800582c:	40da      	lsrs	r2, r3
 800582e:	687b      	ldr	r3, [r7, #4]
 8005830:	685b      	ldr	r3, [r3, #4]
 8005832:	2101      	movs	r1, #1
 8005834:	fa01 f303 	lsl.w	r3, r1, r3
 8005838:	3b01      	subs	r3, #1
 800583a:	4013      	ands	r3, r2
 800583c:	61fb      	str	r3, [r7, #28]

  if (val < ri->logical_min || val > ri->logical_max)
 800583e:	687b      	ldr	r3, [r7, #4]
 8005840:	68db      	ldr	r3, [r3, #12]
 8005842:	69fa      	ldr	r2, [r7, #28]
 8005844:	429a      	cmp	r2, r3
 8005846:	d304      	bcc.n	8005852 <HID_ReadItem+0xc6>
 8005848:	687b      	ldr	r3, [r7, #4]
 800584a:	691b      	ldr	r3, [r3, #16]
 800584c:	69fa      	ldr	r2, [r7, #28]
 800584e:	429a      	cmp	r2, r3
 8005850:	d901      	bls.n	8005856 <HID_ReadItem+0xca>
  {
    return (0U);
 8005852:	2300      	movs	r3, #0
 8005854:	e02c      	b.n	80058b0 <HID_ReadItem+0x124>
  }

  /* convert logical value to physical value */
  /* See if the number is negative or not. */
  if ((ri->sign) && (val & (1U << (ri->size - 1U))))
 8005856:	687b      	ldr	r3, [r7, #4]
 8005858:	7a9b      	ldrb	r3, [r3, #10]
 800585a:	2b00      	cmp	r3, #0
 800585c:	d01d      	beq.n	800589a <HID_ReadItem+0x10e>
 800585e:	687b      	ldr	r3, [r7, #4]
 8005860:	685b      	ldr	r3, [r3, #4]
 8005862:	3b01      	subs	r3, #1
 8005864:	2201      	movs	r2, #1
 8005866:	409a      	lsls	r2, r3
 8005868:	69fb      	ldr	r3, [r7, #28]
 800586a:	4013      	ands	r3, r2
 800586c:	2b00      	cmp	r3, #0
 800586e:	d014      	beq.n	800589a <HID_ReadItem+0x10e>
  {
    /* yes, so sign extend value to 32 bits. */
    uint32_t vs = (uint32_t)((0xffffffffU & ~((1U << (ri->size)) - 1U)) | val);
 8005870:	687b      	ldr	r3, [r7, #4]
 8005872:	685b      	ldr	r3, [r3, #4]
 8005874:	2201      	movs	r2, #1
 8005876:	fa02 f303 	lsl.w	r3, r2, r3
 800587a:	425b      	negs	r3, r3
 800587c:	69fa      	ldr	r2, [r7, #28]
 800587e:	4313      	orrs	r3, r2
 8005880:	60bb      	str	r3, [r7, #8]

    if (ri->resolution == 1U)
 8005882:	687b      	ldr	r3, [r7, #4]
 8005884:	69db      	ldr	r3, [r3, #28]
 8005886:	2b01      	cmp	r3, #1
 8005888:	d101      	bne.n	800588e <HID_ReadItem+0x102>
    {
      return ((uint32_t)vs);
 800588a:	68bb      	ldr	r3, [r7, #8]
 800588c:	e010      	b.n	80058b0 <HID_ReadItem+0x124>
    }
    return ((uint32_t)(vs * ri->resolution));
 800588e:	687b      	ldr	r3, [r7, #4]
 8005890:	69db      	ldr	r3, [r3, #28]
 8005892:	68ba      	ldr	r2, [r7, #8]
 8005894:	fb02 f303 	mul.w	r3, r2, r3
 8005898:	e00a      	b.n	80058b0 <HID_ReadItem+0x124>
  }
  else
  {
    if (ri->resolution == 1U)
 800589a:	687b      	ldr	r3, [r7, #4]
 800589c:	69db      	ldr	r3, [r3, #28]
 800589e:	2b01      	cmp	r3, #1
 80058a0:	d101      	bne.n	80058a6 <HID_ReadItem+0x11a>
    {
      return (val);
 80058a2:	69fb      	ldr	r3, [r7, #28]
 80058a4:	e004      	b.n	80058b0 <HID_ReadItem+0x124>
    }
    return (val * ri->resolution);
 80058a6:	687b      	ldr	r3, [r7, #4]
 80058a8:	69db      	ldr	r3, [r3, #28]
 80058aa:	69fa      	ldr	r2, [r7, #28]
 80058ac:	fb02 f303 	mul.w	r3, r2, r3
  }
}
 80058b0:	4618      	mov	r0, r3
 80058b2:	3724      	adds	r7, #36	; 0x24
 80058b4:	46bd      	mov	sp, r7
 80058b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80058ba:	4770      	bx	lr

080058bc <USBH_Init>:
 80058bc:	b580      	push	{r7, lr}
 80058be:	b084      	sub	sp, #16
 80058c0:	af00      	add	r7, sp, #0
 80058c2:	60f8      	str	r0, [r7, #12]
 80058c4:	60b9      	str	r1, [r7, #8]
 80058c6:	4613      	mov	r3, r2
 80058c8:	71fb      	strb	r3, [r7, #7]
 80058ca:	68fb      	ldr	r3, [r7, #12]
 80058cc:	2b00      	cmp	r3, #0
 80058ce:	d10a      	bne.n	80058e6 <USBH_Init+0x2a>
 80058d0:	481c      	ldr	r0, [pc, #112]	; (8005944 <USBH_Init+0x88>)
 80058d2:	f002 fa95 	bl	8007e00 <iprintf>
 80058d6:	481c      	ldr	r0, [pc, #112]	; (8005948 <USBH_Init+0x8c>)
 80058d8:	f002 fa92 	bl	8007e00 <iprintf>
 80058dc:	200a      	movs	r0, #10
 80058de:	f002 faa7 	bl	8007e30 <putchar>
 80058e2:	2302      	movs	r3, #2
 80058e4:	e029      	b.n	800593a <USBH_Init+0x7e>
 80058e6:	68fb      	ldr	r3, [r7, #12]
 80058e8:	79fa      	ldrb	r2, [r7, #7]
 80058ea:	f883 23b0 	strb.w	r2, [r3, #944]	; 0x3b0
 80058ee:	68fb      	ldr	r3, [r7, #12]
 80058f0:	2200      	movs	r2, #0
 80058f2:	f8c3 2360 	str.w	r2, [r3, #864]	; 0x360
 80058f6:	68fb      	ldr	r3, [r7, #12]
 80058f8:	2200      	movs	r2, #0
 80058fa:	f8c3 2364 	str.w	r2, [r3, #868]	; 0x364
 80058fe:	68f8      	ldr	r0, [r7, #12]
 8005900:	f000 f824 	bl	800594c <DeInitStateMachine>
 8005904:	68fb      	ldr	r3, [r7, #12]
 8005906:	2200      	movs	r2, #0
 8005908:	f883 2323 	strb.w	r2, [r3, #803]	; 0x323
 800590c:	68fb      	ldr	r3, [r7, #12]
 800590e:	2200      	movs	r2, #0
 8005910:	f883 2320 	strb.w	r2, [r3, #800]	; 0x320
 8005914:	68fb      	ldr	r3, [r7, #12]
 8005916:	2200      	movs	r2, #0
 8005918:	f883 2321 	strb.w	r2, [r3, #801]	; 0x321
 800591c:	68fb      	ldr	r3, [r7, #12]
 800591e:	2200      	movs	r2, #0
 8005920:	f883 2322 	strb.w	r2, [r3, #802]	; 0x322
 8005924:	68bb      	ldr	r3, [r7, #8]
 8005926:	2b00      	cmp	r3, #0
 8005928:	d003      	beq.n	8005932 <USBH_Init+0x76>
 800592a:	68fb      	ldr	r3, [r7, #12]
 800592c:	68ba      	ldr	r2, [r7, #8]
 800592e:	f8c3 23b8 	str.w	r2, [r3, #952]	; 0x3b8
 8005932:	68f8      	ldr	r0, [r7, #12]
 8005934:	f001 fdc6 	bl	80074c4 <USBH_LL_Init>
 8005938:	2300      	movs	r3, #0
 800593a:	4618      	mov	r0, r3
 800593c:	3710      	adds	r7, #16
 800593e:	46bd      	mov	sp, r7
 8005940:	bd80      	pop	{r7, pc}
 8005942:	bf00      	nop
 8005944:	08008d88 	.word	0x08008d88
 8005948:	08008d90 	.word	0x08008d90

0800594c <DeInitStateMachine>:
 800594c:	b480      	push	{r7}
 800594e:	b085      	sub	sp, #20
 8005950:	af00      	add	r7, sp, #0
 8005952:	6078      	str	r0, [r7, #4]
 8005954:	2300      	movs	r3, #0
 8005956:	60fb      	str	r3, [r7, #12]
 8005958:	2300      	movs	r3, #0
 800595a:	60fb      	str	r3, [r7, #12]
 800595c:	e008      	b.n	8005970 <DeInitStateMachine+0x24>
 800595e:	687b      	ldr	r3, [r7, #4]
 8005960:	68fa      	ldr	r2, [r7, #12]
 8005962:	32da      	adds	r2, #218	; 0xda
 8005964:	2100      	movs	r1, #0
 8005966:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800596a:	68fb      	ldr	r3, [r7, #12]
 800596c:	3301      	adds	r3, #1
 800596e:	60fb      	str	r3, [r7, #12]
 8005970:	68fb      	ldr	r3, [r7, #12]
 8005972:	2b0e      	cmp	r3, #14
 8005974:	d9f3      	bls.n	800595e <DeInitStateMachine+0x12>
 8005976:	2300      	movs	r3, #0
 8005978:	60fb      	str	r3, [r7, #12]
 800597a:	e009      	b.n	8005990 <DeInitStateMachine+0x44>
 800597c:	687a      	ldr	r2, [r7, #4]
 800597e:	68fb      	ldr	r3, [r7, #12]
 8005980:	4413      	add	r3, r2
 8005982:	f503 738e 	add.w	r3, r3, #284	; 0x11c
 8005986:	2200      	movs	r2, #0
 8005988:	701a      	strb	r2, [r3, #0]
 800598a:	68fb      	ldr	r3, [r7, #12]
 800598c:	3301      	adds	r3, #1
 800598e:	60fb      	str	r3, [r7, #12]
 8005990:	68fb      	ldr	r3, [r7, #12]
 8005992:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8005996:	d3f1      	bcc.n	800597c <DeInitStateMachine+0x30>
 8005998:	687b      	ldr	r3, [r7, #4]
 800599a:	2200      	movs	r2, #0
 800599c:	701a      	strb	r2, [r3, #0]
 800599e:	687b      	ldr	r3, [r7, #4]
 80059a0:	2200      	movs	r2, #0
 80059a2:	705a      	strb	r2, [r3, #1]
 80059a4:	687b      	ldr	r3, [r7, #4]
 80059a6:	2201      	movs	r2, #1
 80059a8:	709a      	strb	r2, [r3, #2]
 80059aa:	687b      	ldr	r3, [r7, #4]
 80059ac:	2200      	movs	r2, #0
 80059ae:	f8c3 23a8 	str.w	r2, [r3, #936]	; 0x3a8
 80059b2:	687b      	ldr	r3, [r7, #4]
 80059b4:	2201      	movs	r2, #1
 80059b6:	761a      	strb	r2, [r3, #24]
 80059b8:	687b      	ldr	r3, [r7, #4]
 80059ba:	2240      	movs	r2, #64	; 0x40
 80059bc:	719a      	strb	r2, [r3, #6]
 80059be:	687b      	ldr	r3, [r7, #4]
 80059c0:	2200      	movs	r2, #0
 80059c2:	765a      	strb	r2, [r3, #25]
 80059c4:	687b      	ldr	r3, [r7, #4]
 80059c6:	2200      	movs	r2, #0
 80059c8:	f883 231c 	strb.w	r2, [r3, #796]	; 0x31c
 80059cc:	687b      	ldr	r3, [r7, #4]
 80059ce:	2201      	movs	r2, #1
 80059d0:	f883 231d 	strb.w	r2, [r3, #797]	; 0x31d
 80059d4:	687b      	ldr	r3, [r7, #4]
 80059d6:	2200      	movs	r2, #0
 80059d8:	f883 231f 	strb.w	r2, [r3, #799]	; 0x31f
 80059dc:	687b      	ldr	r3, [r7, #4]
 80059de:	2200      	movs	r2, #0
 80059e0:	f883 231e 	strb.w	r2, [r3, #798]	; 0x31e
 80059e4:	2300      	movs	r3, #0
 80059e6:	4618      	mov	r0, r3
 80059e8:	3714      	adds	r7, #20
 80059ea:	46bd      	mov	sp, r7
 80059ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80059f0:	4770      	bx	lr
	...

080059f4 <USBH_RegisterClass>:
 80059f4:	b580      	push	{r7, lr}
 80059f6:	b084      	sub	sp, #16
 80059f8:	af00      	add	r7, sp, #0
 80059fa:	6078      	str	r0, [r7, #4]
 80059fc:	6039      	str	r1, [r7, #0]
 80059fe:	2300      	movs	r3, #0
 8005a00:	73fb      	strb	r3, [r7, #15]
 8005a02:	683b      	ldr	r3, [r7, #0]
 8005a04:	2b00      	cmp	r3, #0
 8005a06:	d020      	beq.n	8005a4a <USBH_RegisterClass+0x56>
 8005a08:	687b      	ldr	r3, [r7, #4]
 8005a0a:	f8d3 3364 	ldr.w	r3, [r3, #868]	; 0x364
 8005a0e:	2b00      	cmp	r3, #0
 8005a10:	d10f      	bne.n	8005a32 <USBH_RegisterClass+0x3e>
 8005a12:	687b      	ldr	r3, [r7, #4]
 8005a14:	f8d3 3364 	ldr.w	r3, [r3, #868]	; 0x364
 8005a18:	1c59      	adds	r1, r3, #1
 8005a1a:	687a      	ldr	r2, [r7, #4]
 8005a1c:	f8c2 1364 	str.w	r1, [r2, #868]	; 0x364
 8005a20:	687a      	ldr	r2, [r7, #4]
 8005a22:	33d6      	adds	r3, #214	; 0xd6
 8005a24:	009b      	lsls	r3, r3, #2
 8005a26:	4413      	add	r3, r2
 8005a28:	683a      	ldr	r2, [r7, #0]
 8005a2a:	605a      	str	r2, [r3, #4]
 8005a2c:	2300      	movs	r3, #0
 8005a2e:	73fb      	strb	r3, [r7, #15]
 8005a30:	e016      	b.n	8005a60 <USBH_RegisterClass+0x6c>
 8005a32:	480e      	ldr	r0, [pc, #56]	; (8005a6c <USBH_RegisterClass+0x78>)
 8005a34:	f002 f9e4 	bl	8007e00 <iprintf>
 8005a38:	480d      	ldr	r0, [pc, #52]	; (8005a70 <USBH_RegisterClass+0x7c>)
 8005a3a:	f002 f9e1 	bl	8007e00 <iprintf>
 8005a3e:	200a      	movs	r0, #10
 8005a40:	f002 f9f6 	bl	8007e30 <putchar>
 8005a44:	2302      	movs	r3, #2
 8005a46:	73fb      	strb	r3, [r7, #15]
 8005a48:	e00a      	b.n	8005a60 <USBH_RegisterClass+0x6c>
 8005a4a:	4808      	ldr	r0, [pc, #32]	; (8005a6c <USBH_RegisterClass+0x78>)
 8005a4c:	f002 f9d8 	bl	8007e00 <iprintf>
 8005a50:	4808      	ldr	r0, [pc, #32]	; (8005a74 <USBH_RegisterClass+0x80>)
 8005a52:	f002 f9d5 	bl	8007e00 <iprintf>
 8005a56:	200a      	movs	r0, #10
 8005a58:	f002 f9ea 	bl	8007e30 <putchar>
 8005a5c:	2302      	movs	r3, #2
 8005a5e:	73fb      	strb	r3, [r7, #15]
 8005a60:	7bfb      	ldrb	r3, [r7, #15]
 8005a62:	4618      	mov	r0, r3
 8005a64:	3710      	adds	r7, #16
 8005a66:	46bd      	mov	sp, r7
 8005a68:	bd80      	pop	{r7, pc}
 8005a6a:	bf00      	nop
 8005a6c:	08008d88 	.word	0x08008d88
 8005a70:	08008da4 	.word	0x08008da4
 8005a74:	08008dc0 	.word	0x08008dc0

08005a78 <USBH_SelectInterface>:
 8005a78:	b580      	push	{r7, lr}
 8005a7a:	b084      	sub	sp, #16
 8005a7c:	af00      	add	r7, sp, #0
 8005a7e:	6078      	str	r0, [r7, #4]
 8005a80:	460b      	mov	r3, r1
 8005a82:	70fb      	strb	r3, [r7, #3]
 8005a84:	2300      	movs	r3, #0
 8005a86:	73fb      	strb	r3, [r7, #15]
 8005a88:	687b      	ldr	r3, [r7, #4]
 8005a8a:	f893 333c 	ldrb.w	r3, [r3, #828]	; 0x33c
 8005a8e:	78fa      	ldrb	r2, [r7, #3]
 8005a90:	429a      	cmp	r2, r3
 8005a92:	d23c      	bcs.n	8005b0e <USBH_SelectInterface+0x96>
 8005a94:	687b      	ldr	r3, [r7, #4]
 8005a96:	78fa      	ldrb	r2, [r7, #3]
 8005a98:	f883 2324 	strb.w	r2, [r3, #804]	; 0x324
 8005a9c:	78fb      	ldrb	r3, [r7, #3]
 8005a9e:	4619      	mov	r1, r3
 8005aa0:	4823      	ldr	r0, [pc, #140]	; (8005b30 <USBH_SelectInterface+0xb8>)
 8005aa2:	f002 f9ad 	bl	8007e00 <iprintf>
 8005aa6:	200a      	movs	r0, #10
 8005aa8:	f002 f9c2 	bl	8007e30 <putchar>
 8005aac:	78fb      	ldrb	r3, [r7, #3]
 8005aae:	687a      	ldr	r2, [r7, #4]
 8005ab0:	211a      	movs	r1, #26
 8005ab2:	fb01 f303 	mul.w	r3, r1, r3
 8005ab6:	4413      	add	r3, r2
 8005ab8:	f203 3347 	addw	r3, r3, #839	; 0x347
 8005abc:	781b      	ldrb	r3, [r3, #0]
 8005abe:	4619      	mov	r1, r3
 8005ac0:	481c      	ldr	r0, [pc, #112]	; (8005b34 <USBH_SelectInterface+0xbc>)
 8005ac2:	f002 f99d 	bl	8007e00 <iprintf>
 8005ac6:	200a      	movs	r0, #10
 8005ac8:	f002 f9b2 	bl	8007e30 <putchar>
 8005acc:	78fb      	ldrb	r3, [r7, #3]
 8005ace:	687a      	ldr	r2, [r7, #4]
 8005ad0:	211a      	movs	r1, #26
 8005ad2:	fb01 f303 	mul.w	r3, r1, r3
 8005ad6:	4413      	add	r3, r2
 8005ad8:	f503 7352 	add.w	r3, r3, #840	; 0x348
 8005adc:	781b      	ldrb	r3, [r3, #0]
 8005ade:	4619      	mov	r1, r3
 8005ae0:	4815      	ldr	r0, [pc, #84]	; (8005b38 <USBH_SelectInterface+0xc0>)
 8005ae2:	f002 f98d 	bl	8007e00 <iprintf>
 8005ae6:	200a      	movs	r0, #10
 8005ae8:	f002 f9a2 	bl	8007e30 <putchar>
 8005aec:	78fb      	ldrb	r3, [r7, #3]
 8005aee:	687a      	ldr	r2, [r7, #4]
 8005af0:	211a      	movs	r1, #26
 8005af2:	fb01 f303 	mul.w	r3, r1, r3
 8005af6:	4413      	add	r3, r2
 8005af8:	f203 3349 	addw	r3, r3, #841	; 0x349
 8005afc:	781b      	ldrb	r3, [r3, #0]
 8005afe:	4619      	mov	r1, r3
 8005b00:	480e      	ldr	r0, [pc, #56]	; (8005b3c <USBH_SelectInterface+0xc4>)
 8005b02:	f002 f97d 	bl	8007e00 <iprintf>
 8005b06:	200a      	movs	r0, #10
 8005b08:	f002 f992 	bl	8007e30 <putchar>
 8005b0c:	e00a      	b.n	8005b24 <USBH_SelectInterface+0xac>
 8005b0e:	480c      	ldr	r0, [pc, #48]	; (8005b40 <USBH_SelectInterface+0xc8>)
 8005b10:	f002 f976 	bl	8007e00 <iprintf>
 8005b14:	480b      	ldr	r0, [pc, #44]	; (8005b44 <USBH_SelectInterface+0xcc>)
 8005b16:	f002 f973 	bl	8007e00 <iprintf>
 8005b1a:	200a      	movs	r0, #10
 8005b1c:	f002 f988 	bl	8007e30 <putchar>
 8005b20:	2302      	movs	r3, #2
 8005b22:	73fb      	strb	r3, [r7, #15]
 8005b24:	7bfb      	ldrb	r3, [r7, #15]
 8005b26:	4618      	mov	r0, r3
 8005b28:	3710      	adds	r7, #16
 8005b2a:	46bd      	mov	sp, r7
 8005b2c:	bd80      	pop	{r7, pc}
 8005b2e:	bf00      	nop
 8005b30:	08008dd8 	.word	0x08008dd8
 8005b34:	08008df8 	.word	0x08008df8
 8005b38:	08008e08 	.word	0x08008e08
 8005b3c:	08008e18 	.word	0x08008e18
 8005b40:	08008d88 	.word	0x08008d88
 8005b44:	08008e28 	.word	0x08008e28

08005b48 <USBH_FindInterface>:
 8005b48:	b480      	push	{r7}
 8005b4a:	b087      	sub	sp, #28
 8005b4c:	af00      	add	r7, sp, #0
 8005b4e:	6078      	str	r0, [r7, #4]
 8005b50:	4608      	mov	r0, r1
 8005b52:	4611      	mov	r1, r2
 8005b54:	461a      	mov	r2, r3
 8005b56:	4603      	mov	r3, r0
 8005b58:	70fb      	strb	r3, [r7, #3]
 8005b5a:	460b      	mov	r3, r1
 8005b5c:	70bb      	strb	r3, [r7, #2]
 8005b5e:	4613      	mov	r3, r2
 8005b60:	707b      	strb	r3, [r7, #1]
 8005b62:	2300      	movs	r3, #0
 8005b64:	75fb      	strb	r3, [r7, #23]
 8005b66:	2300      	movs	r3, #0
 8005b68:	613b      	str	r3, [r7, #16]
 8005b6a:	687b      	ldr	r3, [r7, #4]
 8005b6c:	f503 734e 	add.w	r3, r3, #824	; 0x338
 8005b70:	60fb      	str	r3, [r7, #12]
 8005b72:	e025      	b.n	8005bc0 <USBH_FindInterface+0x78>
 8005b74:	7dfb      	ldrb	r3, [r7, #23]
 8005b76:	221a      	movs	r2, #26
 8005b78:	fb02 f303 	mul.w	r3, r2, r3
 8005b7c:	3308      	adds	r3, #8
 8005b7e:	68fa      	ldr	r2, [r7, #12]
 8005b80:	4413      	add	r3, r2
 8005b82:	3302      	adds	r3, #2
 8005b84:	613b      	str	r3, [r7, #16]
 8005b86:	693b      	ldr	r3, [r7, #16]
 8005b88:	795b      	ldrb	r3, [r3, #5]
 8005b8a:	78fa      	ldrb	r2, [r7, #3]
 8005b8c:	429a      	cmp	r2, r3
 8005b8e:	d002      	beq.n	8005b96 <USBH_FindInterface+0x4e>
 8005b90:	78fb      	ldrb	r3, [r7, #3]
 8005b92:	2bff      	cmp	r3, #255	; 0xff
 8005b94:	d111      	bne.n	8005bba <USBH_FindInterface+0x72>
 8005b96:	693b      	ldr	r3, [r7, #16]
 8005b98:	799b      	ldrb	r3, [r3, #6]
 8005b9a:	78ba      	ldrb	r2, [r7, #2]
 8005b9c:	429a      	cmp	r2, r3
 8005b9e:	d002      	beq.n	8005ba6 <USBH_FindInterface+0x5e>
 8005ba0:	78bb      	ldrb	r3, [r7, #2]
 8005ba2:	2bff      	cmp	r3, #255	; 0xff
 8005ba4:	d109      	bne.n	8005bba <USBH_FindInterface+0x72>
 8005ba6:	693b      	ldr	r3, [r7, #16]
 8005ba8:	79db      	ldrb	r3, [r3, #7]
 8005baa:	787a      	ldrb	r2, [r7, #1]
 8005bac:	429a      	cmp	r2, r3
 8005bae:	d002      	beq.n	8005bb6 <USBH_FindInterface+0x6e>
 8005bb0:	787b      	ldrb	r3, [r7, #1]
 8005bb2:	2bff      	cmp	r3, #255	; 0xff
 8005bb4:	d101      	bne.n	8005bba <USBH_FindInterface+0x72>
 8005bb6:	7dfb      	ldrb	r3, [r7, #23]
 8005bb8:	e006      	b.n	8005bc8 <USBH_FindInterface+0x80>
 8005bba:	7dfb      	ldrb	r3, [r7, #23]
 8005bbc:	3301      	adds	r3, #1
 8005bbe:	75fb      	strb	r3, [r7, #23]
 8005bc0:	7dfb      	ldrb	r3, [r7, #23]
 8005bc2:	2b00      	cmp	r3, #0
 8005bc4:	d0d6      	beq.n	8005b74 <USBH_FindInterface+0x2c>
 8005bc6:	23ff      	movs	r3, #255	; 0xff
 8005bc8:	4618      	mov	r0, r3
 8005bca:	371c      	adds	r7, #28
 8005bcc:	46bd      	mov	sp, r7
 8005bce:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005bd2:	4770      	bx	lr

08005bd4 <USBH_Start>:
 8005bd4:	b580      	push	{r7, lr}
 8005bd6:	b082      	sub	sp, #8
 8005bd8:	af00      	add	r7, sp, #0
 8005bda:	6078      	str	r0, [r7, #4]
 8005bdc:	6878      	ldr	r0, [r7, #4]
 8005bde:	f001 fcad 	bl	800753c <USBH_LL_Start>
 8005be2:	2101      	movs	r1, #1
 8005be4:	6878      	ldr	r0, [r7, #4]
 8005be6:	f001 fdc6 	bl	8007776 <USBH_LL_DriverVBUS>
 8005bea:	2300      	movs	r3, #0
 8005bec:	4618      	mov	r0, r3
 8005bee:	3708      	adds	r7, #8
 8005bf0:	46bd      	mov	sp, r7
 8005bf2:	bd80      	pop	{r7, pc}

08005bf4 <USBH_Process>:
 8005bf4:	b580      	push	{r7, lr}
 8005bf6:	b088      	sub	sp, #32
 8005bf8:	af04      	add	r7, sp, #16
 8005bfa:	6078      	str	r0, [r7, #4]
 8005bfc:	2302      	movs	r3, #2
 8005bfe:	73bb      	strb	r3, [r7, #14]
 8005c00:	2300      	movs	r3, #0
 8005c02:	73fb      	strb	r3, [r7, #15]
 8005c04:	687b      	ldr	r3, [r7, #4]
 8005c06:	f893 3321 	ldrb.w	r3, [r3, #801]	; 0x321
 8005c0a:	b2db      	uxtb	r3, r3
 8005c0c:	2b01      	cmp	r3, #1
 8005c0e:	d102      	bne.n	8005c16 <USBH_Process+0x22>
 8005c10:	687b      	ldr	r3, [r7, #4]
 8005c12:	2203      	movs	r2, #3
 8005c14:	701a      	strb	r2, [r3, #0]
 8005c16:	687b      	ldr	r3, [r7, #4]
 8005c18:	781b      	ldrb	r3, [r3, #0]
 8005c1a:	b2db      	uxtb	r3, r3
 8005c1c:	2b0b      	cmp	r3, #11
 8005c1e:	f200 822d 	bhi.w	800607c <USBH_Process+0x488>
 8005c22:	a201      	add	r2, pc, #4	; (adr r2, 8005c28 <USBH_Process+0x34>)
 8005c24:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005c28:	08005c59 	.word	0x08005c59
 8005c2c:	08005c97 	.word	0x08005c97
 8005c30:	08005d17 	.word	0x08005d17
 8005c34:	0800600b 	.word	0x0800600b
 8005c38:	0800607d 	.word	0x0800607d
 8005c3c:	08005dbb 	.word	0x08005dbb
 8005c40:	08005f8d 	.word	0x08005f8d
 8005c44:	08005e09 	.word	0x08005e09
 8005c48:	08005e29 	.word	0x08005e29
 8005c4c:	08005e55 	.word	0x08005e55
 8005c50:	08005e8f 	.word	0x08005e8f
 8005c54:	08005ff3 	.word	0x08005ff3
 8005c58:	687b      	ldr	r3, [r7, #4]
 8005c5a:	f893 3320 	ldrb.w	r3, [r3, #800]	; 0x320
 8005c5e:	b2db      	uxtb	r3, r3
 8005c60:	2b00      	cmp	r3, #0
 8005c62:	f000 820d 	beq.w	8006080 <USBH_Process+0x48c>
 8005c66:	48ba      	ldr	r0, [pc, #744]	; (8005f50 <USBH_Process+0x35c>)
 8005c68:	f002 f8ca 	bl	8007e00 <iprintf>
 8005c6c:	200a      	movs	r0, #10
 8005c6e:	f002 f8df 	bl	8007e30 <putchar>
 8005c72:	687b      	ldr	r3, [r7, #4]
 8005c74:	2201      	movs	r2, #1
 8005c76:	701a      	strb	r2, [r3, #0]
 8005c78:	20c8      	movs	r0, #200	; 0xc8
 8005c7a:	f001 fdba 	bl	80077f2 <USBH_Delay>
 8005c7e:	6878      	ldr	r0, [r7, #4]
 8005c80:	f001 fcb9 	bl	80075f6 <USBH_LL_ResetPort>
 8005c84:	687b      	ldr	r3, [r7, #4]
 8005c86:	2200      	movs	r2, #0
 8005c88:	f883 231c 	strb.w	r2, [r3, #796]	; 0x31c
 8005c8c:	687b      	ldr	r3, [r7, #4]
 8005c8e:	2200      	movs	r2, #0
 8005c90:	f8c3 23ac 	str.w	r2, [r3, #940]	; 0x3ac
 8005c94:	e1f4      	b.n	8006080 <USBH_Process+0x48c>
 8005c96:	687b      	ldr	r3, [r7, #4]
 8005c98:	f893 3323 	ldrb.w	r3, [r3, #803]	; 0x323
 8005c9c:	2b01      	cmp	r3, #1
 8005c9e:	d10d      	bne.n	8005cbc <USBH_Process+0xc8>
 8005ca0:	48ac      	ldr	r0, [pc, #688]	; (8005f54 <USBH_Process+0x360>)
 8005ca2:	f002 f8ad 	bl	8007e00 <iprintf>
 8005ca6:	200a      	movs	r0, #10
 8005ca8:	f002 f8c2 	bl	8007e30 <putchar>
 8005cac:	687b      	ldr	r3, [r7, #4]
 8005cae:	2200      	movs	r2, #0
 8005cb0:	f883 231f 	strb.w	r2, [r3, #799]	; 0x31f
 8005cb4:	687b      	ldr	r3, [r7, #4]
 8005cb6:	2202      	movs	r2, #2
 8005cb8:	701a      	strb	r2, [r3, #0]
 8005cba:	e1ee      	b.n	800609a <USBH_Process+0x4a6>
 8005cbc:	687b      	ldr	r3, [r7, #4]
 8005cbe:	f8d3 33ac 	ldr.w	r3, [r3, #940]	; 0x3ac
 8005cc2:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8005cc6:	d91a      	bls.n	8005cfe <USBH_Process+0x10a>
 8005cc8:	687b      	ldr	r3, [r7, #4]
 8005cca:	f893 331f 	ldrb.w	r3, [r3, #799]	; 0x31f
 8005cce:	3301      	adds	r3, #1
 8005cd0:	b2da      	uxtb	r2, r3
 8005cd2:	687b      	ldr	r3, [r7, #4]
 8005cd4:	f883 231f 	strb.w	r2, [r3, #799]	; 0x31f
 8005cd8:	687b      	ldr	r3, [r7, #4]
 8005cda:	f893 331f 	ldrb.w	r3, [r3, #799]	; 0x31f
 8005cde:	2b03      	cmp	r3, #3
 8005ce0:	d909      	bls.n	8005cf6 <USBH_Process+0x102>
 8005ce2:	489d      	ldr	r0, [pc, #628]	; (8005f58 <USBH_Process+0x364>)
 8005ce4:	f002 f88c 	bl	8007e00 <iprintf>
 8005ce8:	200a      	movs	r0, #10
 8005cea:	f002 f8a1 	bl	8007e30 <putchar>
 8005cee:	687b      	ldr	r3, [r7, #4]
 8005cf0:	220d      	movs	r2, #13
 8005cf2:	701a      	strb	r2, [r3, #0]
 8005cf4:	e1d1      	b.n	800609a <USBH_Process+0x4a6>
 8005cf6:	687b      	ldr	r3, [r7, #4]
 8005cf8:	2200      	movs	r2, #0
 8005cfa:	701a      	strb	r2, [r3, #0]
 8005cfc:	e1cd      	b.n	800609a <USBH_Process+0x4a6>
 8005cfe:	687b      	ldr	r3, [r7, #4]
 8005d00:	f8d3 33ac 	ldr.w	r3, [r3, #940]	; 0x3ac
 8005d04:	f103 020a 	add.w	r2, r3, #10
 8005d08:	687b      	ldr	r3, [r7, #4]
 8005d0a:	f8c3 23ac 	str.w	r2, [r3, #940]	; 0x3ac
 8005d0e:	200a      	movs	r0, #10
 8005d10:	f001 fd6f 	bl	80077f2 <USBH_Delay>
 8005d14:	e1c1      	b.n	800609a <USBH_Process+0x4a6>
 8005d16:	687b      	ldr	r3, [r7, #4]
 8005d18:	f8d3 33b8 	ldr.w	r3, [r3, #952]	; 0x3b8
 8005d1c:	2b00      	cmp	r3, #0
 8005d1e:	d005      	beq.n	8005d2c <USBH_Process+0x138>
 8005d20:	687b      	ldr	r3, [r7, #4]
 8005d22:	f8d3 33b8 	ldr.w	r3, [r3, #952]	; 0x3b8
 8005d26:	2104      	movs	r1, #4
 8005d28:	6878      	ldr	r0, [r7, #4]
 8005d2a:	4798      	blx	r3
 8005d2c:	2064      	movs	r0, #100	; 0x64
 8005d2e:	f001 fd60 	bl	80077f2 <USBH_Delay>
 8005d32:	6878      	ldr	r0, [r7, #4]
 8005d34:	f001 fc38 	bl	80075a8 <USBH_LL_GetSpeed>
 8005d38:	4603      	mov	r3, r0
 8005d3a:	461a      	mov	r2, r3
 8005d3c:	687b      	ldr	r3, [r7, #4]
 8005d3e:	f883 231d 	strb.w	r2, [r3, #797]	; 0x31d
 8005d42:	687b      	ldr	r3, [r7, #4]
 8005d44:	2205      	movs	r2, #5
 8005d46:	701a      	strb	r2, [r3, #0]
 8005d48:	2100      	movs	r1, #0
 8005d4a:	6878      	ldr	r0, [r7, #4]
 8005d4c:	f001 fa55 	bl	80071fa <USBH_AllocPipe>
 8005d50:	4603      	mov	r3, r0
 8005d52:	461a      	mov	r2, r3
 8005d54:	687b      	ldr	r3, [r7, #4]
 8005d56:	715a      	strb	r2, [r3, #5]
 8005d58:	2180      	movs	r1, #128	; 0x80
 8005d5a:	6878      	ldr	r0, [r7, #4]
 8005d5c:	f001 fa4d 	bl	80071fa <USBH_AllocPipe>
 8005d60:	4603      	mov	r3, r0
 8005d62:	461a      	mov	r2, r3
 8005d64:	687b      	ldr	r3, [r7, #4]
 8005d66:	711a      	strb	r2, [r3, #4]
 8005d68:	687b      	ldr	r3, [r7, #4]
 8005d6a:	7919      	ldrb	r1, [r3, #4]
 8005d6c:	687b      	ldr	r3, [r7, #4]
 8005d6e:	f893 031c 	ldrb.w	r0, [r3, #796]	; 0x31c
 8005d72:	687b      	ldr	r3, [r7, #4]
 8005d74:	f893 331d 	ldrb.w	r3, [r3, #797]	; 0x31d
 8005d78:	687a      	ldr	r2, [r7, #4]
 8005d7a:	7992      	ldrb	r2, [r2, #6]
 8005d7c:	b292      	uxth	r2, r2
 8005d7e:	9202      	str	r2, [sp, #8]
 8005d80:	2200      	movs	r2, #0
 8005d82:	9201      	str	r2, [sp, #4]
 8005d84:	9300      	str	r3, [sp, #0]
 8005d86:	4603      	mov	r3, r0
 8005d88:	2280      	movs	r2, #128	; 0x80
 8005d8a:	6878      	ldr	r0, [r7, #4]
 8005d8c:	f001 fa06 	bl	800719c <USBH_OpenPipe>
 8005d90:	687b      	ldr	r3, [r7, #4]
 8005d92:	7959      	ldrb	r1, [r3, #5]
 8005d94:	687b      	ldr	r3, [r7, #4]
 8005d96:	f893 031c 	ldrb.w	r0, [r3, #796]	; 0x31c
 8005d9a:	687b      	ldr	r3, [r7, #4]
 8005d9c:	f893 331d 	ldrb.w	r3, [r3, #797]	; 0x31d
 8005da0:	687a      	ldr	r2, [r7, #4]
 8005da2:	7992      	ldrb	r2, [r2, #6]
 8005da4:	b292      	uxth	r2, r2
 8005da6:	9202      	str	r2, [sp, #8]
 8005da8:	2200      	movs	r2, #0
 8005daa:	9201      	str	r2, [sp, #4]
 8005dac:	9300      	str	r3, [sp, #0]
 8005dae:	4603      	mov	r3, r0
 8005db0:	2200      	movs	r2, #0
 8005db2:	6878      	ldr	r0, [r7, #4]
 8005db4:	f001 f9f2 	bl	800719c <USBH_OpenPipe>
 8005db8:	e16f      	b.n	800609a <USBH_Process+0x4a6>
 8005dba:	6878      	ldr	r0, [r7, #4]
 8005dbc:	f000 f97c 	bl	80060b8 <USBH_HandleEnum>
 8005dc0:	4603      	mov	r3, r0
 8005dc2:	73bb      	strb	r3, [r7, #14]
 8005dc4:	7bbb      	ldrb	r3, [r7, #14]
 8005dc6:	b2db      	uxtb	r3, r3
 8005dc8:	2b00      	cmp	r3, #0
 8005dca:	f040 815b 	bne.w	8006084 <USBH_Process+0x490>
 8005dce:	4863      	ldr	r0, [pc, #396]	; (8005f5c <USBH_Process+0x368>)
 8005dd0:	f002 f816 	bl	8007e00 <iprintf>
 8005dd4:	200a      	movs	r0, #10
 8005dd6:	f002 f82b 	bl	8007e30 <putchar>
 8005dda:	687b      	ldr	r3, [r7, #4]
 8005ddc:	2200      	movs	r2, #0
 8005dde:	f883 2324 	strb.w	r2, [r3, #804]	; 0x324
 8005de2:	687b      	ldr	r3, [r7, #4]
 8005de4:	f893 3337 	ldrb.w	r3, [r3, #823]	; 0x337
 8005de8:	2b01      	cmp	r3, #1
 8005dea:	d109      	bne.n	8005e00 <USBH_Process+0x20c>
 8005dec:	485c      	ldr	r0, [pc, #368]	; (8005f60 <USBH_Process+0x36c>)
 8005dee:	f002 f807 	bl	8007e00 <iprintf>
 8005df2:	200a      	movs	r0, #10
 8005df4:	f002 f81c 	bl	8007e30 <putchar>
 8005df8:	687b      	ldr	r3, [r7, #4]
 8005dfa:	2208      	movs	r2, #8
 8005dfc:	701a      	strb	r2, [r3, #0]
 8005dfe:	e141      	b.n	8006084 <USBH_Process+0x490>
 8005e00:	687b      	ldr	r3, [r7, #4]
 8005e02:	2207      	movs	r2, #7
 8005e04:	701a      	strb	r2, [r3, #0]
 8005e06:	e13d      	b.n	8006084 <USBH_Process+0x490>
 8005e08:	687b      	ldr	r3, [r7, #4]
 8005e0a:	f8d3 33b8 	ldr.w	r3, [r3, #952]	; 0x3b8
 8005e0e:	2b00      	cmp	r3, #0
 8005e10:	f000 813a 	beq.w	8006088 <USBH_Process+0x494>
 8005e14:	687b      	ldr	r3, [r7, #4]
 8005e16:	f8d3 33b8 	ldr.w	r3, [r3, #952]	; 0x3b8
 8005e1a:	2101      	movs	r1, #1
 8005e1c:	6878      	ldr	r0, [r7, #4]
 8005e1e:	4798      	blx	r3
 8005e20:	687b      	ldr	r3, [r7, #4]
 8005e22:	2208      	movs	r2, #8
 8005e24:	701a      	strb	r2, [r3, #0]
 8005e26:	e12f      	b.n	8006088 <USBH_Process+0x494>
 8005e28:	687b      	ldr	r3, [r7, #4]
 8005e2a:	f893 333d 	ldrb.w	r3, [r3, #829]	; 0x33d
 8005e2e:	b29b      	uxth	r3, r3
 8005e30:	4619      	mov	r1, r3
 8005e32:	6878      	ldr	r0, [r7, #4]
 8005e34:	f000 fd50 	bl	80068d8 <USBH_SetCfg>
 8005e38:	4603      	mov	r3, r0
 8005e3a:	2b00      	cmp	r3, #0
 8005e3c:	f040 8126 	bne.w	800608c <USBH_Process+0x498>
 8005e40:	687b      	ldr	r3, [r7, #4]
 8005e42:	2209      	movs	r2, #9
 8005e44:	701a      	strb	r2, [r3, #0]
 8005e46:	4847      	ldr	r0, [pc, #284]	; (8005f64 <USBH_Process+0x370>)
 8005e48:	f001 ffda 	bl	8007e00 <iprintf>
 8005e4c:	200a      	movs	r0, #10
 8005e4e:	f001 ffef 	bl	8007e30 <putchar>
 8005e52:	e11b      	b.n	800608c <USBH_Process+0x498>
 8005e54:	687b      	ldr	r3, [r7, #4]
 8005e56:	f893 333f 	ldrb.w	r3, [r3, #831]	; 0x33f
 8005e5a:	f003 0320 	and.w	r3, r3, #32
 8005e5e:	2b00      	cmp	r3, #0
 8005e60:	d011      	beq.n	8005e86 <USBH_Process+0x292>
 8005e62:	2101      	movs	r1, #1
 8005e64:	6878      	ldr	r0, [r7, #4]
 8005e66:	f000 fd5a 	bl	800691e <USBH_SetFeature>
 8005e6a:	4603      	mov	r3, r0
 8005e6c:	2b00      	cmp	r3, #0
 8005e6e:	f040 810f 	bne.w	8006090 <USBH_Process+0x49c>
 8005e72:	483d      	ldr	r0, [pc, #244]	; (8005f68 <USBH_Process+0x374>)
 8005e74:	f001 ffc4 	bl	8007e00 <iprintf>
 8005e78:	200a      	movs	r0, #10
 8005e7a:	f001 ffd9 	bl	8007e30 <putchar>
 8005e7e:	687b      	ldr	r3, [r7, #4]
 8005e80:	220a      	movs	r2, #10
 8005e82:	701a      	strb	r2, [r3, #0]
 8005e84:	e104      	b.n	8006090 <USBH_Process+0x49c>
 8005e86:	687b      	ldr	r3, [r7, #4]
 8005e88:	220a      	movs	r2, #10
 8005e8a:	701a      	strb	r2, [r3, #0]
 8005e8c:	e100      	b.n	8006090 <USBH_Process+0x49c>
 8005e8e:	687b      	ldr	r3, [r7, #4]
 8005e90:	f8d3 3364 	ldr.w	r3, [r3, #868]	; 0x364
 8005e94:	2b00      	cmp	r3, #0
 8005e96:	d106      	bne.n	8005ea6 <USBH_Process+0x2b2>
 8005e98:	4834      	ldr	r0, [pc, #208]	; (8005f6c <USBH_Process+0x378>)
 8005e9a:	f001 ffb1 	bl	8007e00 <iprintf>
 8005e9e:	200a      	movs	r0, #10
 8005ea0:	f001 ffc6 	bl	8007e30 <putchar>
 8005ea4:	e0f9      	b.n	800609a <USBH_Process+0x4a6>
 8005ea6:	687b      	ldr	r3, [r7, #4]
 8005ea8:	2200      	movs	r2, #0
 8005eaa:	f8c3 2360 	str.w	r2, [r3, #864]	; 0x360
 8005eae:	2300      	movs	r3, #0
 8005eb0:	73fb      	strb	r3, [r7, #15]
 8005eb2:	e018      	b.n	8005ee6 <USBH_Process+0x2f2>
 8005eb4:	7bfb      	ldrb	r3, [r7, #15]
 8005eb6:	687a      	ldr	r2, [r7, #4]
 8005eb8:	33d6      	adds	r3, #214	; 0xd6
 8005eba:	009b      	lsls	r3, r3, #2
 8005ebc:	4413      	add	r3, r2
 8005ebe:	685b      	ldr	r3, [r3, #4]
 8005ec0:	791a      	ldrb	r2, [r3, #4]
 8005ec2:	687b      	ldr	r3, [r7, #4]
 8005ec4:	f893 3347 	ldrb.w	r3, [r3, #839]	; 0x347
 8005ec8:	429a      	cmp	r2, r3
 8005eca:	d109      	bne.n	8005ee0 <USBH_Process+0x2ec>
 8005ecc:	7bfb      	ldrb	r3, [r7, #15]
 8005ece:	687a      	ldr	r2, [r7, #4]
 8005ed0:	33d6      	adds	r3, #214	; 0xd6
 8005ed2:	009b      	lsls	r3, r3, #2
 8005ed4:	4413      	add	r3, r2
 8005ed6:	685a      	ldr	r2, [r3, #4]
 8005ed8:	687b      	ldr	r3, [r7, #4]
 8005eda:	f8c3 2360 	str.w	r2, [r3, #864]	; 0x360
 8005ede:	e005      	b.n	8005eec <USBH_Process+0x2f8>
 8005ee0:	7bfb      	ldrb	r3, [r7, #15]
 8005ee2:	3301      	adds	r3, #1
 8005ee4:	73fb      	strb	r3, [r7, #15]
 8005ee6:	7bfb      	ldrb	r3, [r7, #15]
 8005ee8:	2b00      	cmp	r3, #0
 8005eea:	d0e3      	beq.n	8005eb4 <USBH_Process+0x2c0>
 8005eec:	687b      	ldr	r3, [r7, #4]
 8005eee:	f8d3 3360 	ldr.w	r3, [r3, #864]	; 0x360
 8005ef2:	2b00      	cmp	r3, #0
 8005ef4:	d040      	beq.n	8005f78 <USBH_Process+0x384>
 8005ef6:	687b      	ldr	r3, [r7, #4]
 8005ef8:	f8d3 3360 	ldr.w	r3, [r3, #864]	; 0x360
 8005efc:	689b      	ldr	r3, [r3, #8]
 8005efe:	6878      	ldr	r0, [r7, #4]
 8005f00:	4798      	blx	r3
 8005f02:	4603      	mov	r3, r0
 8005f04:	2b00      	cmp	r3, #0
 8005f06:	d114      	bne.n	8005f32 <USBH_Process+0x33e>
 8005f08:	687b      	ldr	r3, [r7, #4]
 8005f0a:	2206      	movs	r2, #6
 8005f0c:	701a      	strb	r2, [r3, #0]
 8005f0e:	687b      	ldr	r3, [r7, #4]
 8005f10:	f8d3 3360 	ldr.w	r3, [r3, #864]	; 0x360
 8005f14:	681b      	ldr	r3, [r3, #0]
 8005f16:	4619      	mov	r1, r3
 8005f18:	4815      	ldr	r0, [pc, #84]	; (8005f70 <USBH_Process+0x37c>)
 8005f1a:	f001 ff71 	bl	8007e00 <iprintf>
 8005f1e:	200a      	movs	r0, #10
 8005f20:	f001 ff86 	bl	8007e30 <putchar>
 8005f24:	687b      	ldr	r3, [r7, #4]
 8005f26:	f8d3 33b8 	ldr.w	r3, [r3, #952]	; 0x3b8
 8005f2a:	2103      	movs	r1, #3
 8005f2c:	6878      	ldr	r0, [r7, #4]
 8005f2e:	4798      	blx	r3
 8005f30:	e0b3      	b.n	800609a <USBH_Process+0x4a6>
 8005f32:	687b      	ldr	r3, [r7, #4]
 8005f34:	220d      	movs	r2, #13
 8005f36:	701a      	strb	r2, [r3, #0]
 8005f38:	687b      	ldr	r3, [r7, #4]
 8005f3a:	f8d3 3360 	ldr.w	r3, [r3, #864]	; 0x360
 8005f3e:	681b      	ldr	r3, [r3, #0]
 8005f40:	4619      	mov	r1, r3
 8005f42:	480c      	ldr	r0, [pc, #48]	; (8005f74 <USBH_Process+0x380>)
 8005f44:	f001 ff5c 	bl	8007e00 <iprintf>
 8005f48:	200a      	movs	r0, #10
 8005f4a:	f001 ff71 	bl	8007e30 <putchar>
 8005f4e:	e0a4      	b.n	800609a <USBH_Process+0x4a6>
 8005f50:	08008e48 	.word	0x08008e48
 8005f54:	08008e60 	.word	0x08008e60
 8005f58:	08008e7c 	.word	0x08008e7c
 8005f5c:	08008ea8 	.word	0x08008ea8
 8005f60:	08008ebc 	.word	0x08008ebc
 8005f64:	08008ee4 	.word	0x08008ee4
 8005f68:	08008f00 	.word	0x08008f00
 8005f6c:	08008f20 	.word	0x08008f20
 8005f70:	08008f40 	.word	0x08008f40
 8005f74:	08008f54 	.word	0x08008f54
 8005f78:	687b      	ldr	r3, [r7, #4]
 8005f7a:	220d      	movs	r2, #13
 8005f7c:	701a      	strb	r2, [r3, #0]
 8005f7e:	4849      	ldr	r0, [pc, #292]	; (80060a4 <USBH_Process+0x4b0>)
 8005f80:	f001 ff3e 	bl	8007e00 <iprintf>
 8005f84:	200a      	movs	r0, #10
 8005f86:	f001 ff53 	bl	8007e30 <putchar>
 8005f8a:	e086      	b.n	800609a <USBH_Process+0x4a6>
 8005f8c:	687b      	ldr	r3, [r7, #4]
 8005f8e:	f8d3 3360 	ldr.w	r3, [r3, #864]	; 0x360
 8005f92:	2b00      	cmp	r3, #0
 8005f94:	d020      	beq.n	8005fd8 <USBH_Process+0x3e4>
 8005f96:	687b      	ldr	r3, [r7, #4]
 8005f98:	f8d3 3360 	ldr.w	r3, [r3, #864]	; 0x360
 8005f9c:	691b      	ldr	r3, [r3, #16]
 8005f9e:	6878      	ldr	r0, [r7, #4]
 8005fa0:	4798      	blx	r3
 8005fa2:	4603      	mov	r3, r0
 8005fa4:	73bb      	strb	r3, [r7, #14]
 8005fa6:	7bbb      	ldrb	r3, [r7, #14]
 8005fa8:	b2db      	uxtb	r3, r3
 8005faa:	2b00      	cmp	r3, #0
 8005fac:	d103      	bne.n	8005fb6 <USBH_Process+0x3c2>
 8005fae:	687b      	ldr	r3, [r7, #4]
 8005fb0:	220b      	movs	r2, #11
 8005fb2:	701a      	strb	r2, [r3, #0]
 8005fb4:	e06e      	b.n	8006094 <USBH_Process+0x4a0>
 8005fb6:	7bbb      	ldrb	r3, [r7, #14]
 8005fb8:	b2db      	uxtb	r3, r3
 8005fba:	2b02      	cmp	r3, #2
 8005fbc:	d16a      	bne.n	8006094 <USBH_Process+0x4a0>
 8005fbe:	687b      	ldr	r3, [r7, #4]
 8005fc0:	220d      	movs	r2, #13
 8005fc2:	701a      	strb	r2, [r3, #0]
 8005fc4:	4838      	ldr	r0, [pc, #224]	; (80060a8 <USBH_Process+0x4b4>)
 8005fc6:	f001 ff1b 	bl	8007e00 <iprintf>
 8005fca:	4838      	ldr	r0, [pc, #224]	; (80060ac <USBH_Process+0x4b8>)
 8005fcc:	f001 ff18 	bl	8007e00 <iprintf>
 8005fd0:	200a      	movs	r0, #10
 8005fd2:	f001 ff2d 	bl	8007e30 <putchar>
 8005fd6:	e05d      	b.n	8006094 <USBH_Process+0x4a0>
 8005fd8:	687b      	ldr	r3, [r7, #4]
 8005fda:	220d      	movs	r2, #13
 8005fdc:	701a      	strb	r2, [r3, #0]
 8005fde:	4832      	ldr	r0, [pc, #200]	; (80060a8 <USBH_Process+0x4b4>)
 8005fe0:	f001 ff0e 	bl	8007e00 <iprintf>
 8005fe4:	4832      	ldr	r0, [pc, #200]	; (80060b0 <USBH_Process+0x4bc>)
 8005fe6:	f001 ff0b 	bl	8007e00 <iprintf>
 8005fea:	200a      	movs	r0, #10
 8005fec:	f001 ff20 	bl	8007e30 <putchar>
 8005ff0:	e050      	b.n	8006094 <USBH_Process+0x4a0>
 8005ff2:	687b      	ldr	r3, [r7, #4]
 8005ff4:	f8d3 3360 	ldr.w	r3, [r3, #864]	; 0x360
 8005ff8:	2b00      	cmp	r3, #0
 8005ffa:	d04d      	beq.n	8006098 <USBH_Process+0x4a4>
 8005ffc:	687b      	ldr	r3, [r7, #4]
 8005ffe:	f8d3 3360 	ldr.w	r3, [r3, #864]	; 0x360
 8006002:	695b      	ldr	r3, [r3, #20]
 8006004:	6878      	ldr	r0, [r7, #4]
 8006006:	4798      	blx	r3
 8006008:	e046      	b.n	8006098 <USBH_Process+0x4a4>
 800600a:	687b      	ldr	r3, [r7, #4]
 800600c:	2200      	movs	r2, #0
 800600e:	f883 2321 	strb.w	r2, [r3, #801]	; 0x321
 8006012:	6878      	ldr	r0, [r7, #4]
 8006014:	f7ff fc9a 	bl	800594c <DeInitStateMachine>
 8006018:	687b      	ldr	r3, [r7, #4]
 800601a:	f8d3 3360 	ldr.w	r3, [r3, #864]	; 0x360
 800601e:	2b00      	cmp	r3, #0
 8006020:	d009      	beq.n	8006036 <USBH_Process+0x442>
 8006022:	687b      	ldr	r3, [r7, #4]
 8006024:	f8d3 3360 	ldr.w	r3, [r3, #864]	; 0x360
 8006028:	68db      	ldr	r3, [r3, #12]
 800602a:	6878      	ldr	r0, [r7, #4]
 800602c:	4798      	blx	r3
 800602e:	687b      	ldr	r3, [r7, #4]
 8006030:	2200      	movs	r2, #0
 8006032:	f8c3 2360 	str.w	r2, [r3, #864]	; 0x360
 8006036:	687b      	ldr	r3, [r7, #4]
 8006038:	f8d3 33b8 	ldr.w	r3, [r3, #952]	; 0x3b8
 800603c:	2b00      	cmp	r3, #0
 800603e:	d005      	beq.n	800604c <USBH_Process+0x458>
 8006040:	687b      	ldr	r3, [r7, #4]
 8006042:	f8d3 33b8 	ldr.w	r3, [r3, #952]	; 0x3b8
 8006046:	2105      	movs	r1, #5
 8006048:	6878      	ldr	r0, [r7, #4]
 800604a:	4798      	blx	r3
 800604c:	4819      	ldr	r0, [pc, #100]	; (80060b4 <USBH_Process+0x4c0>)
 800604e:	f001 fed7 	bl	8007e00 <iprintf>
 8006052:	200a      	movs	r0, #10
 8006054:	f001 feec 	bl	8007e30 <putchar>
 8006058:	687b      	ldr	r3, [r7, #4]
 800605a:	f893 3322 	ldrb.w	r3, [r3, #802]	; 0x322
 800605e:	b2db      	uxtb	r3, r3
 8006060:	2b01      	cmp	r3, #1
 8006062:	d107      	bne.n	8006074 <USBH_Process+0x480>
 8006064:	687b      	ldr	r3, [r7, #4]
 8006066:	2200      	movs	r2, #0
 8006068:	f883 2322 	strb.w	r2, [r3, #802]	; 0x322
 800606c:	6878      	ldr	r0, [r7, #4]
 800606e:	f7ff fdb1 	bl	8005bd4 <USBH_Start>
 8006072:	e012      	b.n	800609a <USBH_Process+0x4a6>
 8006074:	6878      	ldr	r0, [r7, #4]
 8006076:	f001 fa61 	bl	800753c <USBH_LL_Start>
 800607a:	e00e      	b.n	800609a <USBH_Process+0x4a6>
 800607c:	bf00      	nop
 800607e:	e00c      	b.n	800609a <USBH_Process+0x4a6>
 8006080:	bf00      	nop
 8006082:	e00a      	b.n	800609a <USBH_Process+0x4a6>
 8006084:	bf00      	nop
 8006086:	e008      	b.n	800609a <USBH_Process+0x4a6>
 8006088:	bf00      	nop
 800608a:	e006      	b.n	800609a <USBH_Process+0x4a6>
 800608c:	bf00      	nop
 800608e:	e004      	b.n	800609a <USBH_Process+0x4a6>
 8006090:	bf00      	nop
 8006092:	e002      	b.n	800609a <USBH_Process+0x4a6>
 8006094:	bf00      	nop
 8006096:	e000      	b.n	800609a <USBH_Process+0x4a6>
 8006098:	bf00      	nop
 800609a:	2300      	movs	r3, #0
 800609c:	4618      	mov	r0, r3
 800609e:	3710      	adds	r7, #16
 80060a0:	46bd      	mov	sp, r7
 80060a2:	bd80      	pop	{r7, pc}
 80060a4:	08008f74 	.word	0x08008f74
 80060a8:	08008d88 	.word	0x08008d88
 80060ac:	08008f9c 	.word	0x08008f9c
 80060b0:	08008fc4 	.word	0x08008fc4
 80060b4:	08008fdc 	.word	0x08008fdc

080060b8 <USBH_HandleEnum>:
 80060b8:	b580      	push	{r7, lr}
 80060ba:	b088      	sub	sp, #32
 80060bc:	af04      	add	r7, sp, #16
 80060be:	6078      	str	r0, [r7, #4]
 80060c0:	2301      	movs	r3, #1
 80060c2:	73fb      	strb	r3, [r7, #15]
 80060c4:	2301      	movs	r3, #1
 80060c6:	73bb      	strb	r3, [r7, #14]
 80060c8:	687b      	ldr	r3, [r7, #4]
 80060ca:	785b      	ldrb	r3, [r3, #1]
 80060cc:	2b07      	cmp	r3, #7
 80060ce:	f200 8280 	bhi.w	80065d2 <USBH_HandleEnum+0x51a>
 80060d2:	a201      	add	r2, pc, #4	; (adr r2, 80060d8 <USBH_HandleEnum+0x20>)
 80060d4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80060d8:	080060f9 	.word	0x080060f9
 80060dc:	080061d5 	.word	0x080061d5
 80060e0:	08006285 	.word	0x08006285
 80060e4:	08006345 	.word	0x08006345
 80060e8:	080063cd 	.word	0x080063cd
 80060ec:	08006481 	.word	0x08006481
 80060f0:	080064f5 	.word	0x080064f5
 80060f4:	08006567 	.word	0x08006567
 80060f8:	2108      	movs	r1, #8
 80060fa:	6878      	ldr	r0, [r7, #4]
 80060fc:	f000 fb1c 	bl	8006738 <USBH_Get_DevDesc>
 8006100:	4603      	mov	r3, r0
 8006102:	73bb      	strb	r3, [r7, #14]
 8006104:	7bbb      	ldrb	r3, [r7, #14]
 8006106:	2b00      	cmp	r3, #0
 8006108:	d130      	bne.n	800616c <USBH_HandleEnum+0xb4>
 800610a:	687b      	ldr	r3, [r7, #4]
 800610c:	f893 232d 	ldrb.w	r2, [r3, #813]	; 0x32d
 8006110:	687b      	ldr	r3, [r7, #4]
 8006112:	719a      	strb	r2, [r3, #6]
 8006114:	687b      	ldr	r3, [r7, #4]
 8006116:	2201      	movs	r2, #1
 8006118:	705a      	strb	r2, [r3, #1]
 800611a:	687b      	ldr	r3, [r7, #4]
 800611c:	7919      	ldrb	r1, [r3, #4]
 800611e:	687b      	ldr	r3, [r7, #4]
 8006120:	f893 031c 	ldrb.w	r0, [r3, #796]	; 0x31c
 8006124:	687b      	ldr	r3, [r7, #4]
 8006126:	f893 331d 	ldrb.w	r3, [r3, #797]	; 0x31d
 800612a:	687a      	ldr	r2, [r7, #4]
 800612c:	7992      	ldrb	r2, [r2, #6]
 800612e:	b292      	uxth	r2, r2
 8006130:	9202      	str	r2, [sp, #8]
 8006132:	2200      	movs	r2, #0
 8006134:	9201      	str	r2, [sp, #4]
 8006136:	9300      	str	r3, [sp, #0]
 8006138:	4603      	mov	r3, r0
 800613a:	2280      	movs	r2, #128	; 0x80
 800613c:	6878      	ldr	r0, [r7, #4]
 800613e:	f001 f82d 	bl	800719c <USBH_OpenPipe>
 8006142:	687b      	ldr	r3, [r7, #4]
 8006144:	7959      	ldrb	r1, [r3, #5]
 8006146:	687b      	ldr	r3, [r7, #4]
 8006148:	f893 031c 	ldrb.w	r0, [r3, #796]	; 0x31c
 800614c:	687b      	ldr	r3, [r7, #4]
 800614e:	f893 331d 	ldrb.w	r3, [r3, #797]	; 0x31d
 8006152:	687a      	ldr	r2, [r7, #4]
 8006154:	7992      	ldrb	r2, [r2, #6]
 8006156:	b292      	uxth	r2, r2
 8006158:	9202      	str	r2, [sp, #8]
 800615a:	2200      	movs	r2, #0
 800615c:	9201      	str	r2, [sp, #4]
 800615e:	9300      	str	r3, [sp, #0]
 8006160:	4603      	mov	r3, r0
 8006162:	2200      	movs	r2, #0
 8006164:	6878      	ldr	r0, [r7, #4]
 8006166:	f001 f819 	bl	800719c <USBH_OpenPipe>
 800616a:	e234      	b.n	80065d6 <USBH_HandleEnum+0x51e>
 800616c:	7bbb      	ldrb	r3, [r7, #14]
 800616e:	2b03      	cmp	r3, #3
 8006170:	f040 8231 	bne.w	80065d6 <USBH_HandleEnum+0x51e>
 8006174:	48b9      	ldr	r0, [pc, #740]	; (800645c <USBH_HandleEnum+0x3a4>)
 8006176:	f001 fe43 	bl	8007e00 <iprintf>
 800617a:	48b9      	ldr	r0, [pc, #740]	; (8006460 <USBH_HandleEnum+0x3a8>)
 800617c:	f001 fe40 	bl	8007e00 <iprintf>
 8006180:	200a      	movs	r0, #10
 8006182:	f001 fe55 	bl	8007e30 <putchar>
 8006186:	687b      	ldr	r3, [r7, #4]
 8006188:	f893 331e 	ldrb.w	r3, [r3, #798]	; 0x31e
 800618c:	3301      	adds	r3, #1
 800618e:	b2da      	uxtb	r2, r3
 8006190:	687b      	ldr	r3, [r7, #4]
 8006192:	f883 231e 	strb.w	r2, [r3, #798]	; 0x31e
 8006196:	687b      	ldr	r3, [r7, #4]
 8006198:	f893 331e 	ldrb.w	r3, [r3, #798]	; 0x31e
 800619c:	2b03      	cmp	r3, #3
 800619e:	d909      	bls.n	80061b4 <USBH_HandleEnum+0xfc>
 80061a0:	48b0      	ldr	r0, [pc, #704]	; (8006464 <USBH_HandleEnum+0x3ac>)
 80061a2:	f001 fe2d 	bl	8007e00 <iprintf>
 80061a6:	200a      	movs	r0, #10
 80061a8:	f001 fe42 	bl	8007e30 <putchar>
 80061ac:	687b      	ldr	r3, [r7, #4]
 80061ae:	220d      	movs	r2, #13
 80061b0:	701a      	strb	r2, [r3, #0]
 80061b2:	e210      	b.n	80065d6 <USBH_HandleEnum+0x51e>
 80061b4:	687b      	ldr	r3, [r7, #4]
 80061b6:	795b      	ldrb	r3, [r3, #5]
 80061b8:	4619      	mov	r1, r3
 80061ba:	6878      	ldr	r0, [r7, #4]
 80061bc:	f001 f83d 	bl	800723a <USBH_FreePipe>
 80061c0:	687b      	ldr	r3, [r7, #4]
 80061c2:	791b      	ldrb	r3, [r3, #4]
 80061c4:	4619      	mov	r1, r3
 80061c6:	6878      	ldr	r0, [r7, #4]
 80061c8:	f001 f837 	bl	800723a <USBH_FreePipe>
 80061cc:	687b      	ldr	r3, [r7, #4]
 80061ce:	2200      	movs	r2, #0
 80061d0:	701a      	strb	r2, [r3, #0]
 80061d2:	e200      	b.n	80065d6 <USBH_HandleEnum+0x51e>
 80061d4:	2112      	movs	r1, #18
 80061d6:	6878      	ldr	r0, [r7, #4]
 80061d8:	f000 faae 	bl	8006738 <USBH_Get_DevDesc>
 80061dc:	4603      	mov	r3, r0
 80061de:	73bb      	strb	r3, [r7, #14]
 80061e0:	7bbb      	ldrb	r3, [r7, #14]
 80061e2:	2b00      	cmp	r3, #0
 80061e4:	d117      	bne.n	8006216 <USBH_HandleEnum+0x15e>
 80061e6:	687b      	ldr	r3, [r7, #4]
 80061e8:	f8b3 3330 	ldrh.w	r3, [r3, #816]	; 0x330
 80061ec:	4619      	mov	r1, r3
 80061ee:	489e      	ldr	r0, [pc, #632]	; (8006468 <USBH_HandleEnum+0x3b0>)
 80061f0:	f001 fe06 	bl	8007e00 <iprintf>
 80061f4:	200a      	movs	r0, #10
 80061f6:	f001 fe1b 	bl	8007e30 <putchar>
 80061fa:	687b      	ldr	r3, [r7, #4]
 80061fc:	f8b3 332e 	ldrh.w	r3, [r3, #814]	; 0x32e
 8006200:	4619      	mov	r1, r3
 8006202:	489a      	ldr	r0, [pc, #616]	; (800646c <USBH_HandleEnum+0x3b4>)
 8006204:	f001 fdfc 	bl	8007e00 <iprintf>
 8006208:	200a      	movs	r0, #10
 800620a:	f001 fe11 	bl	8007e30 <putchar>
 800620e:	687b      	ldr	r3, [r7, #4]
 8006210:	2202      	movs	r2, #2
 8006212:	705a      	strb	r2, [r3, #1]
 8006214:	e1e1      	b.n	80065da <USBH_HandleEnum+0x522>
 8006216:	7bbb      	ldrb	r3, [r7, #14]
 8006218:	2b03      	cmp	r3, #3
 800621a:	f040 81de 	bne.w	80065da <USBH_HandleEnum+0x522>
 800621e:	488f      	ldr	r0, [pc, #572]	; (800645c <USBH_HandleEnum+0x3a4>)
 8006220:	f001 fdee 	bl	8007e00 <iprintf>
 8006224:	4892      	ldr	r0, [pc, #584]	; (8006470 <USBH_HandleEnum+0x3b8>)
 8006226:	f001 fdeb 	bl	8007e00 <iprintf>
 800622a:	200a      	movs	r0, #10
 800622c:	f001 fe00 	bl	8007e30 <putchar>
 8006230:	687b      	ldr	r3, [r7, #4]
 8006232:	f893 331e 	ldrb.w	r3, [r3, #798]	; 0x31e
 8006236:	3301      	adds	r3, #1
 8006238:	b2da      	uxtb	r2, r3
 800623a:	687b      	ldr	r3, [r7, #4]
 800623c:	f883 231e 	strb.w	r2, [r3, #798]	; 0x31e
 8006240:	687b      	ldr	r3, [r7, #4]
 8006242:	f893 331e 	ldrb.w	r3, [r3, #798]	; 0x31e
 8006246:	2b03      	cmp	r3, #3
 8006248:	d909      	bls.n	800625e <USBH_HandleEnum+0x1a6>
 800624a:	4886      	ldr	r0, [pc, #536]	; (8006464 <USBH_HandleEnum+0x3ac>)
 800624c:	f001 fdd8 	bl	8007e00 <iprintf>
 8006250:	200a      	movs	r0, #10
 8006252:	f001 fded 	bl	8007e30 <putchar>
 8006256:	687b      	ldr	r3, [r7, #4]
 8006258:	220d      	movs	r2, #13
 800625a:	701a      	strb	r2, [r3, #0]
 800625c:	e1bd      	b.n	80065da <USBH_HandleEnum+0x522>
 800625e:	687b      	ldr	r3, [r7, #4]
 8006260:	795b      	ldrb	r3, [r3, #5]
 8006262:	4619      	mov	r1, r3
 8006264:	6878      	ldr	r0, [r7, #4]
 8006266:	f000 ffe8 	bl	800723a <USBH_FreePipe>
 800626a:	687b      	ldr	r3, [r7, #4]
 800626c:	791b      	ldrb	r3, [r3, #4]
 800626e:	4619      	mov	r1, r3
 8006270:	6878      	ldr	r0, [r7, #4]
 8006272:	f000 ffe2 	bl	800723a <USBH_FreePipe>
 8006276:	687b      	ldr	r3, [r7, #4]
 8006278:	2200      	movs	r2, #0
 800627a:	705a      	strb	r2, [r3, #1]
 800627c:	687b      	ldr	r3, [r7, #4]
 800627e:	2200      	movs	r2, #0
 8006280:	701a      	strb	r2, [r3, #0]
 8006282:	e1aa      	b.n	80065da <USBH_HandleEnum+0x522>
 8006284:	2101      	movs	r1, #1
 8006286:	6878      	ldr	r0, [r7, #4]
 8006288:	f000 fb02 	bl	8006890 <USBH_SetAddress>
 800628c:	4603      	mov	r3, r0
 800628e:	73bb      	strb	r3, [r7, #14]
 8006290:	7bbb      	ldrb	r3, [r7, #14]
 8006292:	2b00      	cmp	r3, #0
 8006294:	d13c      	bne.n	8006310 <USBH_HandleEnum+0x258>
 8006296:	2002      	movs	r0, #2
 8006298:	f001 faab 	bl	80077f2 <USBH_Delay>
 800629c:	687b      	ldr	r3, [r7, #4]
 800629e:	2201      	movs	r2, #1
 80062a0:	f883 231c 	strb.w	r2, [r3, #796]	; 0x31c
 80062a4:	687b      	ldr	r3, [r7, #4]
 80062a6:	f893 331c 	ldrb.w	r3, [r3, #796]	; 0x31c
 80062aa:	4619      	mov	r1, r3
 80062ac:	4871      	ldr	r0, [pc, #452]	; (8006474 <USBH_HandleEnum+0x3bc>)
 80062ae:	f001 fda7 	bl	8007e00 <iprintf>
 80062b2:	200a      	movs	r0, #10
 80062b4:	f001 fdbc 	bl	8007e30 <putchar>
 80062b8:	687b      	ldr	r3, [r7, #4]
 80062ba:	2203      	movs	r2, #3
 80062bc:	705a      	strb	r2, [r3, #1]
 80062be:	687b      	ldr	r3, [r7, #4]
 80062c0:	7919      	ldrb	r1, [r3, #4]
 80062c2:	687b      	ldr	r3, [r7, #4]
 80062c4:	f893 031c 	ldrb.w	r0, [r3, #796]	; 0x31c
 80062c8:	687b      	ldr	r3, [r7, #4]
 80062ca:	f893 331d 	ldrb.w	r3, [r3, #797]	; 0x31d
 80062ce:	687a      	ldr	r2, [r7, #4]
 80062d0:	7992      	ldrb	r2, [r2, #6]
 80062d2:	b292      	uxth	r2, r2
 80062d4:	9202      	str	r2, [sp, #8]
 80062d6:	2200      	movs	r2, #0
 80062d8:	9201      	str	r2, [sp, #4]
 80062da:	9300      	str	r3, [sp, #0]
 80062dc:	4603      	mov	r3, r0
 80062de:	2280      	movs	r2, #128	; 0x80
 80062e0:	6878      	ldr	r0, [r7, #4]
 80062e2:	f000 ff5b 	bl	800719c <USBH_OpenPipe>
 80062e6:	687b      	ldr	r3, [r7, #4]
 80062e8:	7959      	ldrb	r1, [r3, #5]
 80062ea:	687b      	ldr	r3, [r7, #4]
 80062ec:	f893 031c 	ldrb.w	r0, [r3, #796]	; 0x31c
 80062f0:	687b      	ldr	r3, [r7, #4]
 80062f2:	f893 331d 	ldrb.w	r3, [r3, #797]	; 0x31d
 80062f6:	687a      	ldr	r2, [r7, #4]
 80062f8:	7992      	ldrb	r2, [r2, #6]
 80062fa:	b292      	uxth	r2, r2
 80062fc:	9202      	str	r2, [sp, #8]
 80062fe:	2200      	movs	r2, #0
 8006300:	9201      	str	r2, [sp, #4]
 8006302:	9300      	str	r3, [sp, #0]
 8006304:	4603      	mov	r3, r0
 8006306:	2200      	movs	r2, #0
 8006308:	6878      	ldr	r0, [r7, #4]
 800630a:	f000 ff47 	bl	800719c <USBH_OpenPipe>
 800630e:	e166      	b.n	80065de <USBH_HandleEnum+0x526>
 8006310:	7bbb      	ldrb	r3, [r7, #14]
 8006312:	2b03      	cmp	r3, #3
 8006314:	f040 8163 	bne.w	80065de <USBH_HandleEnum+0x526>
 8006318:	4850      	ldr	r0, [pc, #320]	; (800645c <USBH_HandleEnum+0x3a4>)
 800631a:	f001 fd71 	bl	8007e00 <iprintf>
 800631e:	4856      	ldr	r0, [pc, #344]	; (8006478 <USBH_HandleEnum+0x3c0>)
 8006320:	f001 fd6e 	bl	8007e00 <iprintf>
 8006324:	200a      	movs	r0, #10
 8006326:	f001 fd83 	bl	8007e30 <putchar>
 800632a:	484e      	ldr	r0, [pc, #312]	; (8006464 <USBH_HandleEnum+0x3ac>)
 800632c:	f001 fd68 	bl	8007e00 <iprintf>
 8006330:	200a      	movs	r0, #10
 8006332:	f001 fd7d 	bl	8007e30 <putchar>
 8006336:	687b      	ldr	r3, [r7, #4]
 8006338:	220d      	movs	r2, #13
 800633a:	701a      	strb	r2, [r3, #0]
 800633c:	687b      	ldr	r3, [r7, #4]
 800633e:	2200      	movs	r2, #0
 8006340:	705a      	strb	r2, [r3, #1]
 8006342:	e14c      	b.n	80065de <USBH_HandleEnum+0x526>
 8006344:	2109      	movs	r1, #9
 8006346:	6878      	ldr	r0, [r7, #4]
 8006348:	f000 fa1e 	bl	8006788 <USBH_Get_CfgDesc>
 800634c:	4603      	mov	r3, r0
 800634e:	73bb      	strb	r3, [r7, #14]
 8006350:	7bbb      	ldrb	r3, [r7, #14]
 8006352:	2b00      	cmp	r3, #0
 8006354:	d103      	bne.n	800635e <USBH_HandleEnum+0x2a6>
 8006356:	687b      	ldr	r3, [r7, #4]
 8006358:	2204      	movs	r2, #4
 800635a:	705a      	strb	r2, [r3, #1]
 800635c:	e141      	b.n	80065e2 <USBH_HandleEnum+0x52a>
 800635e:	7bbb      	ldrb	r3, [r7, #14]
 8006360:	2b03      	cmp	r3, #3
 8006362:	f040 813e 	bne.w	80065e2 <USBH_HandleEnum+0x52a>
 8006366:	483d      	ldr	r0, [pc, #244]	; (800645c <USBH_HandleEnum+0x3a4>)
 8006368:	f001 fd4a 	bl	8007e00 <iprintf>
 800636c:	4843      	ldr	r0, [pc, #268]	; (800647c <USBH_HandleEnum+0x3c4>)
 800636e:	f001 fd47 	bl	8007e00 <iprintf>
 8006372:	200a      	movs	r0, #10
 8006374:	f001 fd5c 	bl	8007e30 <putchar>
 8006378:	687b      	ldr	r3, [r7, #4]
 800637a:	f893 331e 	ldrb.w	r3, [r3, #798]	; 0x31e
 800637e:	3301      	adds	r3, #1
 8006380:	b2da      	uxtb	r2, r3
 8006382:	687b      	ldr	r3, [r7, #4]
 8006384:	f883 231e 	strb.w	r2, [r3, #798]	; 0x31e
 8006388:	687b      	ldr	r3, [r7, #4]
 800638a:	f893 331e 	ldrb.w	r3, [r3, #798]	; 0x31e
 800638e:	2b03      	cmp	r3, #3
 8006390:	d909      	bls.n	80063a6 <USBH_HandleEnum+0x2ee>
 8006392:	4834      	ldr	r0, [pc, #208]	; (8006464 <USBH_HandleEnum+0x3ac>)
 8006394:	f001 fd34 	bl	8007e00 <iprintf>
 8006398:	200a      	movs	r0, #10
 800639a:	f001 fd49 	bl	8007e30 <putchar>
 800639e:	687b      	ldr	r3, [r7, #4]
 80063a0:	220d      	movs	r2, #13
 80063a2:	701a      	strb	r2, [r3, #0]
 80063a4:	e11d      	b.n	80065e2 <USBH_HandleEnum+0x52a>
 80063a6:	687b      	ldr	r3, [r7, #4]
 80063a8:	795b      	ldrb	r3, [r3, #5]
 80063aa:	4619      	mov	r1, r3
 80063ac:	6878      	ldr	r0, [r7, #4]
 80063ae:	f000 ff44 	bl	800723a <USBH_FreePipe>
 80063b2:	687b      	ldr	r3, [r7, #4]
 80063b4:	791b      	ldrb	r3, [r3, #4]
 80063b6:	4619      	mov	r1, r3
 80063b8:	6878      	ldr	r0, [r7, #4]
 80063ba:	f000 ff3e 	bl	800723a <USBH_FreePipe>
 80063be:	687b      	ldr	r3, [r7, #4]
 80063c0:	2200      	movs	r2, #0
 80063c2:	705a      	strb	r2, [r3, #1]
 80063c4:	687b      	ldr	r3, [r7, #4]
 80063c6:	2200      	movs	r2, #0
 80063c8:	701a      	strb	r2, [r3, #0]
 80063ca:	e10a      	b.n	80065e2 <USBH_HandleEnum+0x52a>
 80063cc:	687b      	ldr	r3, [r7, #4]
 80063ce:	f8b3 333a 	ldrh.w	r3, [r3, #826]	; 0x33a
 80063d2:	4619      	mov	r1, r3
 80063d4:	6878      	ldr	r0, [r7, #4]
 80063d6:	f000 f9d7 	bl	8006788 <USBH_Get_CfgDesc>
 80063da:	4603      	mov	r3, r0
 80063dc:	73bb      	strb	r3, [r7, #14]
 80063de:	7bbb      	ldrb	r3, [r7, #14]
 80063e0:	2b00      	cmp	r3, #0
 80063e2:	d103      	bne.n	80063ec <USBH_HandleEnum+0x334>
 80063e4:	687b      	ldr	r3, [r7, #4]
 80063e6:	2205      	movs	r2, #5
 80063e8:	705a      	strb	r2, [r3, #1]
 80063ea:	e0fc      	b.n	80065e6 <USBH_HandleEnum+0x52e>
 80063ec:	7bbb      	ldrb	r3, [r7, #14]
 80063ee:	2b03      	cmp	r3, #3
 80063f0:	f040 80f9 	bne.w	80065e6 <USBH_HandleEnum+0x52e>
 80063f4:	4819      	ldr	r0, [pc, #100]	; (800645c <USBH_HandleEnum+0x3a4>)
 80063f6:	f001 fd03 	bl	8007e00 <iprintf>
 80063fa:	4820      	ldr	r0, [pc, #128]	; (800647c <USBH_HandleEnum+0x3c4>)
 80063fc:	f001 fd00 	bl	8007e00 <iprintf>
 8006400:	200a      	movs	r0, #10
 8006402:	f001 fd15 	bl	8007e30 <putchar>
 8006406:	687b      	ldr	r3, [r7, #4]
 8006408:	f893 331e 	ldrb.w	r3, [r3, #798]	; 0x31e
 800640c:	3301      	adds	r3, #1
 800640e:	b2da      	uxtb	r2, r3
 8006410:	687b      	ldr	r3, [r7, #4]
 8006412:	f883 231e 	strb.w	r2, [r3, #798]	; 0x31e
 8006416:	687b      	ldr	r3, [r7, #4]
 8006418:	f893 331e 	ldrb.w	r3, [r3, #798]	; 0x31e
 800641c:	2b03      	cmp	r3, #3
 800641e:	d909      	bls.n	8006434 <USBH_HandleEnum+0x37c>
 8006420:	4810      	ldr	r0, [pc, #64]	; (8006464 <USBH_HandleEnum+0x3ac>)
 8006422:	f001 fced 	bl	8007e00 <iprintf>
 8006426:	200a      	movs	r0, #10
 8006428:	f001 fd02 	bl	8007e30 <putchar>
 800642c:	687b      	ldr	r3, [r7, #4]
 800642e:	220d      	movs	r2, #13
 8006430:	701a      	strb	r2, [r3, #0]
 8006432:	e0d8      	b.n	80065e6 <USBH_HandleEnum+0x52e>
 8006434:	687b      	ldr	r3, [r7, #4]
 8006436:	795b      	ldrb	r3, [r3, #5]
 8006438:	4619      	mov	r1, r3
 800643a:	6878      	ldr	r0, [r7, #4]
 800643c:	f000 fefd 	bl	800723a <USBH_FreePipe>
 8006440:	687b      	ldr	r3, [r7, #4]
 8006442:	791b      	ldrb	r3, [r3, #4]
 8006444:	4619      	mov	r1, r3
 8006446:	6878      	ldr	r0, [r7, #4]
 8006448:	f000 fef7 	bl	800723a <USBH_FreePipe>
 800644c:	687b      	ldr	r3, [r7, #4]
 800644e:	2200      	movs	r2, #0
 8006450:	705a      	strb	r2, [r3, #1]
 8006452:	687b      	ldr	r3, [r7, #4]
 8006454:	2200      	movs	r2, #0
 8006456:	701a      	strb	r2, [r3, #0]
 8006458:	e0c5      	b.n	80065e6 <USBH_HandleEnum+0x52e>
 800645a:	bf00      	nop
 800645c:	08008d88 	.word	0x08008d88
 8006460:	08008ff4 	.word	0x08008ff4
 8006464:	08009028 	.word	0x08009028
 8006468:	08009068 	.word	0x08009068
 800646c:	08009074 	.word	0x08009074
 8006470:	08009080 	.word	0x08009080
 8006474:	080090bc 	.word	0x080090bc
 8006478:	080090d4 	.word	0x080090d4
 800647c:	08009108 	.word	0x08009108
 8006480:	687b      	ldr	r3, [r7, #4]
 8006482:	f893 3334 	ldrb.w	r3, [r3, #820]	; 0x334
 8006486:	2b00      	cmp	r3, #0
 8006488:	d02a      	beq.n	80064e0 <USBH_HandleEnum+0x428>
 800648a:	687b      	ldr	r3, [r7, #4]
 800648c:	f893 1334 	ldrb.w	r1, [r3, #820]	; 0x334
 8006490:	687b      	ldr	r3, [r7, #4]
 8006492:	f503 728e 	add.w	r2, r3, #284	; 0x11c
 8006496:	23ff      	movs	r3, #255	; 0xff
 8006498:	6878      	ldr	r0, [r7, #4]
 800649a:	f000 f999 	bl	80067d0 <USBH_Get_StringDesc>
 800649e:	4603      	mov	r3, r0
 80064a0:	73bb      	strb	r3, [r7, #14]
 80064a2:	7bbb      	ldrb	r3, [r7, #14]
 80064a4:	2b00      	cmp	r3, #0
 80064a6:	d10d      	bne.n	80064c4 <USBH_HandleEnum+0x40c>
 80064a8:	687b      	ldr	r3, [r7, #4]
 80064aa:	f503 738e 	add.w	r3, r3, #284	; 0x11c
 80064ae:	4619      	mov	r1, r3
 80064b0:	4853      	ldr	r0, [pc, #332]	; (8006600 <USBH_HandleEnum+0x548>)
 80064b2:	f001 fca5 	bl	8007e00 <iprintf>
 80064b6:	200a      	movs	r0, #10
 80064b8:	f001 fcba 	bl	8007e30 <putchar>
 80064bc:	687b      	ldr	r3, [r7, #4]
 80064be:	2206      	movs	r2, #6
 80064c0:	705a      	strb	r2, [r3, #1]
 80064c2:	e092      	b.n	80065ea <USBH_HandleEnum+0x532>
 80064c4:	7bbb      	ldrb	r3, [r7, #14]
 80064c6:	2b03      	cmp	r3, #3
 80064c8:	f040 808f 	bne.w	80065ea <USBH_HandleEnum+0x532>
 80064cc:	484d      	ldr	r0, [pc, #308]	; (8006604 <USBH_HandleEnum+0x54c>)
 80064ce:	f001 fc97 	bl	8007e00 <iprintf>
 80064d2:	200a      	movs	r0, #10
 80064d4:	f001 fcac 	bl	8007e30 <putchar>
 80064d8:	687b      	ldr	r3, [r7, #4]
 80064da:	2206      	movs	r2, #6
 80064dc:	705a      	strb	r2, [r3, #1]
 80064de:	e084      	b.n	80065ea <USBH_HandleEnum+0x532>
 80064e0:	4848      	ldr	r0, [pc, #288]	; (8006604 <USBH_HandleEnum+0x54c>)
 80064e2:	f001 fc8d 	bl	8007e00 <iprintf>
 80064e6:	200a      	movs	r0, #10
 80064e8:	f001 fca2 	bl	8007e30 <putchar>
 80064ec:	687b      	ldr	r3, [r7, #4]
 80064ee:	2206      	movs	r2, #6
 80064f0:	705a      	strb	r2, [r3, #1]
 80064f2:	e07a      	b.n	80065ea <USBH_HandleEnum+0x532>
 80064f4:	687b      	ldr	r3, [r7, #4]
 80064f6:	f893 3335 	ldrb.w	r3, [r3, #821]	; 0x335
 80064fa:	2b00      	cmp	r3, #0
 80064fc:	d029      	beq.n	8006552 <USBH_HandleEnum+0x49a>
 80064fe:	687b      	ldr	r3, [r7, #4]
 8006500:	f893 1335 	ldrb.w	r1, [r3, #821]	; 0x335
 8006504:	687b      	ldr	r3, [r7, #4]
 8006506:	f503 728e 	add.w	r2, r3, #284	; 0x11c
 800650a:	23ff      	movs	r3, #255	; 0xff
 800650c:	6878      	ldr	r0, [r7, #4]
 800650e:	f000 f95f 	bl	80067d0 <USBH_Get_StringDesc>
 8006512:	4603      	mov	r3, r0
 8006514:	73bb      	strb	r3, [r7, #14]
 8006516:	7bbb      	ldrb	r3, [r7, #14]
 8006518:	2b00      	cmp	r3, #0
 800651a:	d10d      	bne.n	8006538 <USBH_HandleEnum+0x480>
 800651c:	687b      	ldr	r3, [r7, #4]
 800651e:	f503 738e 	add.w	r3, r3, #284	; 0x11c
 8006522:	4619      	mov	r1, r3
 8006524:	4838      	ldr	r0, [pc, #224]	; (8006608 <USBH_HandleEnum+0x550>)
 8006526:	f001 fc6b 	bl	8007e00 <iprintf>
 800652a:	200a      	movs	r0, #10
 800652c:	f001 fc80 	bl	8007e30 <putchar>
 8006530:	687b      	ldr	r3, [r7, #4]
 8006532:	2207      	movs	r2, #7
 8006534:	705a      	strb	r2, [r3, #1]
 8006536:	e05a      	b.n	80065ee <USBH_HandleEnum+0x536>
 8006538:	7bbb      	ldrb	r3, [r7, #14]
 800653a:	2b03      	cmp	r3, #3
 800653c:	d157      	bne.n	80065ee <USBH_HandleEnum+0x536>
 800653e:	4833      	ldr	r0, [pc, #204]	; (800660c <USBH_HandleEnum+0x554>)
 8006540:	f001 fc5e 	bl	8007e00 <iprintf>
 8006544:	200a      	movs	r0, #10
 8006546:	f001 fc73 	bl	8007e30 <putchar>
 800654a:	687b      	ldr	r3, [r7, #4]
 800654c:	2207      	movs	r2, #7
 800654e:	705a      	strb	r2, [r3, #1]
 8006550:	e04d      	b.n	80065ee <USBH_HandleEnum+0x536>
 8006552:	482e      	ldr	r0, [pc, #184]	; (800660c <USBH_HandleEnum+0x554>)
 8006554:	f001 fc54 	bl	8007e00 <iprintf>
 8006558:	200a      	movs	r0, #10
 800655a:	f001 fc69 	bl	8007e30 <putchar>
 800655e:	687b      	ldr	r3, [r7, #4]
 8006560:	2207      	movs	r2, #7
 8006562:	705a      	strb	r2, [r3, #1]
 8006564:	e043      	b.n	80065ee <USBH_HandleEnum+0x536>
 8006566:	687b      	ldr	r3, [r7, #4]
 8006568:	f893 3336 	ldrb.w	r3, [r3, #822]	; 0x336
 800656c:	2b00      	cmp	r3, #0
 800656e:	d027      	beq.n	80065c0 <USBH_HandleEnum+0x508>
 8006570:	687b      	ldr	r3, [r7, #4]
 8006572:	f893 1336 	ldrb.w	r1, [r3, #822]	; 0x336
 8006576:	687b      	ldr	r3, [r7, #4]
 8006578:	f503 728e 	add.w	r2, r3, #284	; 0x11c
 800657c:	23ff      	movs	r3, #255	; 0xff
 800657e:	6878      	ldr	r0, [r7, #4]
 8006580:	f000 f926 	bl	80067d0 <USBH_Get_StringDesc>
 8006584:	4603      	mov	r3, r0
 8006586:	73bb      	strb	r3, [r7, #14]
 8006588:	7bbb      	ldrb	r3, [r7, #14]
 800658a:	2b00      	cmp	r3, #0
 800658c:	d10c      	bne.n	80065a8 <USBH_HandleEnum+0x4f0>
 800658e:	687b      	ldr	r3, [r7, #4]
 8006590:	f503 738e 	add.w	r3, r3, #284	; 0x11c
 8006594:	4619      	mov	r1, r3
 8006596:	481e      	ldr	r0, [pc, #120]	; (8006610 <USBH_HandleEnum+0x558>)
 8006598:	f001 fc32 	bl	8007e00 <iprintf>
 800659c:	200a      	movs	r0, #10
 800659e:	f001 fc47 	bl	8007e30 <putchar>
 80065a2:	2300      	movs	r3, #0
 80065a4:	73fb      	strb	r3, [r7, #15]
 80065a6:	e024      	b.n	80065f2 <USBH_HandleEnum+0x53a>
 80065a8:	7bbb      	ldrb	r3, [r7, #14]
 80065aa:	2b03      	cmp	r3, #3
 80065ac:	d121      	bne.n	80065f2 <USBH_HandleEnum+0x53a>
 80065ae:	4819      	ldr	r0, [pc, #100]	; (8006614 <USBH_HandleEnum+0x55c>)
 80065b0:	f001 fc26 	bl	8007e00 <iprintf>
 80065b4:	200a      	movs	r0, #10
 80065b6:	f001 fc3b 	bl	8007e30 <putchar>
 80065ba:	2300      	movs	r3, #0
 80065bc:	73fb      	strb	r3, [r7, #15]
 80065be:	e018      	b.n	80065f2 <USBH_HandleEnum+0x53a>
 80065c0:	4814      	ldr	r0, [pc, #80]	; (8006614 <USBH_HandleEnum+0x55c>)
 80065c2:	f001 fc1d 	bl	8007e00 <iprintf>
 80065c6:	200a      	movs	r0, #10
 80065c8:	f001 fc32 	bl	8007e30 <putchar>
 80065cc:	2300      	movs	r3, #0
 80065ce:	73fb      	strb	r3, [r7, #15]
 80065d0:	e00f      	b.n	80065f2 <USBH_HandleEnum+0x53a>
 80065d2:	bf00      	nop
 80065d4:	e00e      	b.n	80065f4 <USBH_HandleEnum+0x53c>
 80065d6:	bf00      	nop
 80065d8:	e00c      	b.n	80065f4 <USBH_HandleEnum+0x53c>
 80065da:	bf00      	nop
 80065dc:	e00a      	b.n	80065f4 <USBH_HandleEnum+0x53c>
 80065de:	bf00      	nop
 80065e0:	e008      	b.n	80065f4 <USBH_HandleEnum+0x53c>
 80065e2:	bf00      	nop
 80065e4:	e006      	b.n	80065f4 <USBH_HandleEnum+0x53c>
 80065e6:	bf00      	nop
 80065e8:	e004      	b.n	80065f4 <USBH_HandleEnum+0x53c>
 80065ea:	bf00      	nop
 80065ec:	e002      	b.n	80065f4 <USBH_HandleEnum+0x53c>
 80065ee:	bf00      	nop
 80065f0:	e000      	b.n	80065f4 <USBH_HandleEnum+0x53c>
 80065f2:	bf00      	nop
 80065f4:	7bfb      	ldrb	r3, [r7, #15]
 80065f6:	4618      	mov	r0, r3
 80065f8:	3710      	adds	r7, #16
 80065fa:	46bd      	mov	sp, r7
 80065fc:	bd80      	pop	{r7, pc}
 80065fe:	bf00      	nop
 8006600:	0800914c 	.word	0x0800914c
 8006604:	08009160 	.word	0x08009160
 8006608:	08009174 	.word	0x08009174
 800660c:	08009184 	.word	0x08009184
 8006610:	08009194 	.word	0x08009194
 8006614:	080091a8 	.word	0x080091a8

08006618 <USBH_LL_SetTimer>:
 8006618:	b480      	push	{r7}
 800661a:	b083      	sub	sp, #12
 800661c:	af00      	add	r7, sp, #0
 800661e:	6078      	str	r0, [r7, #4]
 8006620:	6039      	str	r1, [r7, #0]
 8006622:	687b      	ldr	r3, [r7, #4]
 8006624:	683a      	ldr	r2, [r7, #0]
 8006626:	f8c3 23a8 	str.w	r2, [r3, #936]	; 0x3a8
 800662a:	bf00      	nop
 800662c:	370c      	adds	r7, #12
 800662e:	46bd      	mov	sp, r7
 8006630:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006634:	4770      	bx	lr

08006636 <USBH_LL_IncTimer>:
 8006636:	b580      	push	{r7, lr}
 8006638:	b082      	sub	sp, #8
 800663a:	af00      	add	r7, sp, #0
 800663c:	6078      	str	r0, [r7, #4]
 800663e:	687b      	ldr	r3, [r7, #4]
 8006640:	f8d3 33a8 	ldr.w	r3, [r3, #936]	; 0x3a8
 8006644:	1c5a      	adds	r2, r3, #1
 8006646:	687b      	ldr	r3, [r7, #4]
 8006648:	f8c3 23a8 	str.w	r2, [r3, #936]	; 0x3a8
 800664c:	6878      	ldr	r0, [r7, #4]
 800664e:	f000 f804 	bl	800665a <USBH_HandleSof>
 8006652:	bf00      	nop
 8006654:	3708      	adds	r7, #8
 8006656:	46bd      	mov	sp, r7
 8006658:	bd80      	pop	{r7, pc}

0800665a <USBH_HandleSof>:
 800665a:	b580      	push	{r7, lr}
 800665c:	b082      	sub	sp, #8
 800665e:	af00      	add	r7, sp, #0
 8006660:	6078      	str	r0, [r7, #4]
 8006662:	687b      	ldr	r3, [r7, #4]
 8006664:	781b      	ldrb	r3, [r3, #0]
 8006666:	b2db      	uxtb	r3, r3
 8006668:	2b0b      	cmp	r3, #11
 800666a:	d10a      	bne.n	8006682 <USBH_HandleSof+0x28>
 800666c:	687b      	ldr	r3, [r7, #4]
 800666e:	f8d3 3360 	ldr.w	r3, [r3, #864]	; 0x360
 8006672:	2b00      	cmp	r3, #0
 8006674:	d005      	beq.n	8006682 <USBH_HandleSof+0x28>
 8006676:	687b      	ldr	r3, [r7, #4]
 8006678:	f8d3 3360 	ldr.w	r3, [r3, #864]	; 0x360
 800667c:	699b      	ldr	r3, [r3, #24]
 800667e:	6878      	ldr	r0, [r7, #4]
 8006680:	4798      	blx	r3
 8006682:	bf00      	nop
 8006684:	3708      	adds	r7, #8
 8006686:	46bd      	mov	sp, r7
 8006688:	bd80      	pop	{r7, pc}

0800668a <USBH_LL_PortEnabled>:
 800668a:	b480      	push	{r7}
 800668c:	b083      	sub	sp, #12
 800668e:	af00      	add	r7, sp, #0
 8006690:	6078      	str	r0, [r7, #4]
 8006692:	687b      	ldr	r3, [r7, #4]
 8006694:	2201      	movs	r2, #1
 8006696:	f883 2323 	strb.w	r2, [r3, #803]	; 0x323
 800669a:	bf00      	nop
 800669c:	370c      	adds	r7, #12
 800669e:	46bd      	mov	sp, r7
 80066a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80066a4:	4770      	bx	lr

080066a6 <USBH_LL_PortDisabled>:
 80066a6:	b480      	push	{r7}
 80066a8:	b083      	sub	sp, #12
 80066aa:	af00      	add	r7, sp, #0
 80066ac:	6078      	str	r0, [r7, #4]
 80066ae:	687b      	ldr	r3, [r7, #4]
 80066b0:	2200      	movs	r2, #0
 80066b2:	f883 2323 	strb.w	r2, [r3, #803]	; 0x323
 80066b6:	bf00      	nop
 80066b8:	370c      	adds	r7, #12
 80066ba:	46bd      	mov	sp, r7
 80066bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80066c0:	4770      	bx	lr

080066c2 <USBH_LL_Connect>:
 80066c2:	b480      	push	{r7}
 80066c4:	b083      	sub	sp, #12
 80066c6:	af00      	add	r7, sp, #0
 80066c8:	6078      	str	r0, [r7, #4]
 80066ca:	687b      	ldr	r3, [r7, #4]
 80066cc:	2201      	movs	r2, #1
 80066ce:	f883 2320 	strb.w	r2, [r3, #800]	; 0x320
 80066d2:	687b      	ldr	r3, [r7, #4]
 80066d4:	2200      	movs	r2, #0
 80066d6:	f883 2321 	strb.w	r2, [r3, #801]	; 0x321
 80066da:	687b      	ldr	r3, [r7, #4]
 80066dc:	2200      	movs	r2, #0
 80066de:	f883 2322 	strb.w	r2, [r3, #802]	; 0x322
 80066e2:	2300      	movs	r3, #0
 80066e4:	4618      	mov	r0, r3
 80066e6:	370c      	adds	r7, #12
 80066e8:	46bd      	mov	sp, r7
 80066ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80066ee:	4770      	bx	lr

080066f0 <USBH_LL_Disconnect>:
 80066f0:	b580      	push	{r7, lr}
 80066f2:	b082      	sub	sp, #8
 80066f4:	af00      	add	r7, sp, #0
 80066f6:	6078      	str	r0, [r7, #4]
 80066f8:	687b      	ldr	r3, [r7, #4]
 80066fa:	2201      	movs	r2, #1
 80066fc:	f883 2321 	strb.w	r2, [r3, #801]	; 0x321
 8006700:	687b      	ldr	r3, [r7, #4]
 8006702:	2200      	movs	r2, #0
 8006704:	f883 2320 	strb.w	r2, [r3, #800]	; 0x320
 8006708:	687b      	ldr	r3, [r7, #4]
 800670a:	2200      	movs	r2, #0
 800670c:	f883 2323 	strb.w	r2, [r3, #803]	; 0x323
 8006710:	6878      	ldr	r0, [r7, #4]
 8006712:	f000 ff2e 	bl	8007572 <USBH_LL_Stop>
 8006716:	687b      	ldr	r3, [r7, #4]
 8006718:	791b      	ldrb	r3, [r3, #4]
 800671a:	4619      	mov	r1, r3
 800671c:	6878      	ldr	r0, [r7, #4]
 800671e:	f000 fd8c 	bl	800723a <USBH_FreePipe>
 8006722:	687b      	ldr	r3, [r7, #4]
 8006724:	795b      	ldrb	r3, [r3, #5]
 8006726:	4619      	mov	r1, r3
 8006728:	6878      	ldr	r0, [r7, #4]
 800672a:	f000 fd86 	bl	800723a <USBH_FreePipe>
 800672e:	2300      	movs	r3, #0
 8006730:	4618      	mov	r0, r3
 8006732:	3708      	adds	r7, #8
 8006734:	46bd      	mov	sp, r7
 8006736:	bd80      	pop	{r7, pc}

08006738 <USBH_Get_DevDesc>:
 8006738:	b580      	push	{r7, lr}
 800673a:	b086      	sub	sp, #24
 800673c:	af02      	add	r7, sp, #8
 800673e:	6078      	str	r0, [r7, #4]
 8006740:	460b      	mov	r3, r1
 8006742:	70fb      	strb	r3, [r7, #3]
 8006744:	687b      	ldr	r3, [r7, #4]
 8006746:	f503 728e 	add.w	r2, r3, #284	; 0x11c
 800674a:	78fb      	ldrb	r3, [r7, #3]
 800674c:	b29b      	uxth	r3, r3
 800674e:	9300      	str	r3, [sp, #0]
 8006750:	4613      	mov	r3, r2
 8006752:	f44f 7280 	mov.w	r2, #256	; 0x100
 8006756:	2100      	movs	r1, #0
 8006758:	6878      	ldr	r0, [r7, #4]
 800675a:	f000 f864 	bl	8006826 <USBH_GetDescriptor>
 800675e:	4603      	mov	r3, r0
 8006760:	73fb      	strb	r3, [r7, #15]
 8006762:	7bfb      	ldrb	r3, [r7, #15]
 8006764:	2b00      	cmp	r3, #0
 8006766:	d10a      	bne.n	800677e <USBH_Get_DevDesc+0x46>
 8006768:	687b      	ldr	r3, [r7, #4]
 800676a:	f203 3026 	addw	r0, r3, #806	; 0x326
 800676e:	687b      	ldr	r3, [r7, #4]
 8006770:	f503 738e 	add.w	r3, r3, #284	; 0x11c
 8006774:	78fa      	ldrb	r2, [r7, #3]
 8006776:	b292      	uxth	r2, r2
 8006778:	4619      	mov	r1, r3
 800677a:	f000 f918 	bl	80069ae <USBH_ParseDevDesc>
 800677e:	7bfb      	ldrb	r3, [r7, #15]
 8006780:	4618      	mov	r0, r3
 8006782:	3710      	adds	r7, #16
 8006784:	46bd      	mov	sp, r7
 8006786:	bd80      	pop	{r7, pc}

08006788 <USBH_Get_CfgDesc>:
 8006788:	b580      	push	{r7, lr}
 800678a:	b086      	sub	sp, #24
 800678c:	af02      	add	r7, sp, #8
 800678e:	6078      	str	r0, [r7, #4]
 8006790:	460b      	mov	r3, r1
 8006792:	807b      	strh	r3, [r7, #2]
 8006794:	687b      	ldr	r3, [r7, #4]
 8006796:	331c      	adds	r3, #28
 8006798:	60fb      	str	r3, [r7, #12]
 800679a:	887b      	ldrh	r3, [r7, #2]
 800679c:	9300      	str	r3, [sp, #0]
 800679e:	68fb      	ldr	r3, [r7, #12]
 80067a0:	f44f 7200 	mov.w	r2, #512	; 0x200
 80067a4:	2100      	movs	r1, #0
 80067a6:	6878      	ldr	r0, [r7, #4]
 80067a8:	f000 f83d 	bl	8006826 <USBH_GetDescriptor>
 80067ac:	4603      	mov	r3, r0
 80067ae:	72fb      	strb	r3, [r7, #11]
 80067b0:	7afb      	ldrb	r3, [r7, #11]
 80067b2:	2b00      	cmp	r3, #0
 80067b4:	d107      	bne.n	80067c6 <USBH_Get_CfgDesc+0x3e>
 80067b6:	687b      	ldr	r3, [r7, #4]
 80067b8:	f503 734e 	add.w	r3, r3, #824	; 0x338
 80067bc:	887a      	ldrh	r2, [r7, #2]
 80067be:	68f9      	ldr	r1, [r7, #12]
 80067c0:	4618      	mov	r0, r3
 80067c2:	f000 f964 	bl	8006a8e <USBH_ParseCfgDesc>
 80067c6:	7afb      	ldrb	r3, [r7, #11]
 80067c8:	4618      	mov	r0, r3
 80067ca:	3710      	adds	r7, #16
 80067cc:	46bd      	mov	sp, r7
 80067ce:	bd80      	pop	{r7, pc}

080067d0 <USBH_Get_StringDesc>:
 80067d0:	b580      	push	{r7, lr}
 80067d2:	b088      	sub	sp, #32
 80067d4:	af02      	add	r7, sp, #8
 80067d6:	60f8      	str	r0, [r7, #12]
 80067d8:	607a      	str	r2, [r7, #4]
 80067da:	461a      	mov	r2, r3
 80067dc:	460b      	mov	r3, r1
 80067de:	72fb      	strb	r3, [r7, #11]
 80067e0:	4613      	mov	r3, r2
 80067e2:	813b      	strh	r3, [r7, #8]
 80067e4:	7afb      	ldrb	r3, [r7, #11]
 80067e6:	b29b      	uxth	r3, r3
 80067e8:	f443 7340 	orr.w	r3, r3, #768	; 0x300
 80067ec:	b29a      	uxth	r2, r3
 80067ee:	68fb      	ldr	r3, [r7, #12]
 80067f0:	f503 718e 	add.w	r1, r3, #284	; 0x11c
 80067f4:	893b      	ldrh	r3, [r7, #8]
 80067f6:	9300      	str	r3, [sp, #0]
 80067f8:	460b      	mov	r3, r1
 80067fa:	2100      	movs	r1, #0
 80067fc:	68f8      	ldr	r0, [r7, #12]
 80067fe:	f000 f812 	bl	8006826 <USBH_GetDescriptor>
 8006802:	4603      	mov	r3, r0
 8006804:	75fb      	strb	r3, [r7, #23]
 8006806:	7dfb      	ldrb	r3, [r7, #23]
 8006808:	2b00      	cmp	r3, #0
 800680a:	d107      	bne.n	800681c <USBH_Get_StringDesc+0x4c>
 800680c:	68fb      	ldr	r3, [r7, #12]
 800680e:	f503 738e 	add.w	r3, r3, #284	; 0x11c
 8006812:	893a      	ldrh	r2, [r7, #8]
 8006814:	6879      	ldr	r1, [r7, #4]
 8006816:	4618      	mov	r0, r3
 8006818:	f000 fa37 	bl	8006c8a <USBH_ParseStringDesc>
 800681c:	7dfb      	ldrb	r3, [r7, #23]
 800681e:	4618      	mov	r0, r3
 8006820:	3718      	adds	r7, #24
 8006822:	46bd      	mov	sp, r7
 8006824:	bd80      	pop	{r7, pc}

08006826 <USBH_GetDescriptor>:
 8006826:	b580      	push	{r7, lr}
 8006828:	b084      	sub	sp, #16
 800682a:	af00      	add	r7, sp, #0
 800682c:	60f8      	str	r0, [r7, #12]
 800682e:	607b      	str	r3, [r7, #4]
 8006830:	460b      	mov	r3, r1
 8006832:	72fb      	strb	r3, [r7, #11]
 8006834:	4613      	mov	r3, r2
 8006836:	813b      	strh	r3, [r7, #8]
 8006838:	68fb      	ldr	r3, [r7, #12]
 800683a:	789b      	ldrb	r3, [r3, #2]
 800683c:	2b01      	cmp	r3, #1
 800683e:	d11c      	bne.n	800687a <USBH_GetDescriptor+0x54>
 8006840:	7afb      	ldrb	r3, [r7, #11]
 8006842:	f063 037f 	orn	r3, r3, #127	; 0x7f
 8006846:	b2da      	uxtb	r2, r3
 8006848:	68fb      	ldr	r3, [r7, #12]
 800684a:	741a      	strb	r2, [r3, #16]
 800684c:	68fb      	ldr	r3, [r7, #12]
 800684e:	2206      	movs	r2, #6
 8006850:	745a      	strb	r2, [r3, #17]
 8006852:	68fb      	ldr	r3, [r7, #12]
 8006854:	893a      	ldrh	r2, [r7, #8]
 8006856:	825a      	strh	r2, [r3, #18]
 8006858:	893b      	ldrh	r3, [r7, #8]
 800685a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 800685e:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8006862:	d104      	bne.n	800686e <USBH_GetDescriptor+0x48>
 8006864:	68fb      	ldr	r3, [r7, #12]
 8006866:	f240 4209 	movw	r2, #1033	; 0x409
 800686a:	829a      	strh	r2, [r3, #20]
 800686c:	e002      	b.n	8006874 <USBH_GetDescriptor+0x4e>
 800686e:	68fb      	ldr	r3, [r7, #12]
 8006870:	2200      	movs	r2, #0
 8006872:	829a      	strh	r2, [r3, #20]
 8006874:	68fb      	ldr	r3, [r7, #12]
 8006876:	8b3a      	ldrh	r2, [r7, #24]
 8006878:	82da      	strh	r2, [r3, #22]
 800687a:	8b3b      	ldrh	r3, [r7, #24]
 800687c:	461a      	mov	r2, r3
 800687e:	6879      	ldr	r1, [r7, #4]
 8006880:	68f8      	ldr	r0, [r7, #12]
 8006882:	f000 fa50 	bl	8006d26 <USBH_CtlReq>
 8006886:	4603      	mov	r3, r0
 8006888:	4618      	mov	r0, r3
 800688a:	3710      	adds	r7, #16
 800688c:	46bd      	mov	sp, r7
 800688e:	bd80      	pop	{r7, pc}

08006890 <USBH_SetAddress>:
 8006890:	b580      	push	{r7, lr}
 8006892:	b082      	sub	sp, #8
 8006894:	af00      	add	r7, sp, #0
 8006896:	6078      	str	r0, [r7, #4]
 8006898:	460b      	mov	r3, r1
 800689a:	70fb      	strb	r3, [r7, #3]
 800689c:	687b      	ldr	r3, [r7, #4]
 800689e:	789b      	ldrb	r3, [r3, #2]
 80068a0:	2b01      	cmp	r3, #1
 80068a2:	d10f      	bne.n	80068c4 <USBH_SetAddress+0x34>
 80068a4:	687b      	ldr	r3, [r7, #4]
 80068a6:	2200      	movs	r2, #0
 80068a8:	741a      	strb	r2, [r3, #16]
 80068aa:	687b      	ldr	r3, [r7, #4]
 80068ac:	2205      	movs	r2, #5
 80068ae:	745a      	strb	r2, [r3, #17]
 80068b0:	78fb      	ldrb	r3, [r7, #3]
 80068b2:	b29a      	uxth	r2, r3
 80068b4:	687b      	ldr	r3, [r7, #4]
 80068b6:	825a      	strh	r2, [r3, #18]
 80068b8:	687b      	ldr	r3, [r7, #4]
 80068ba:	2200      	movs	r2, #0
 80068bc:	829a      	strh	r2, [r3, #20]
 80068be:	687b      	ldr	r3, [r7, #4]
 80068c0:	2200      	movs	r2, #0
 80068c2:	82da      	strh	r2, [r3, #22]
 80068c4:	2200      	movs	r2, #0
 80068c6:	2100      	movs	r1, #0
 80068c8:	6878      	ldr	r0, [r7, #4]
 80068ca:	f000 fa2c 	bl	8006d26 <USBH_CtlReq>
 80068ce:	4603      	mov	r3, r0
 80068d0:	4618      	mov	r0, r3
 80068d2:	3708      	adds	r7, #8
 80068d4:	46bd      	mov	sp, r7
 80068d6:	bd80      	pop	{r7, pc}

080068d8 <USBH_SetCfg>:
 80068d8:	b580      	push	{r7, lr}
 80068da:	b082      	sub	sp, #8
 80068dc:	af00      	add	r7, sp, #0
 80068de:	6078      	str	r0, [r7, #4]
 80068e0:	460b      	mov	r3, r1
 80068e2:	807b      	strh	r3, [r7, #2]
 80068e4:	687b      	ldr	r3, [r7, #4]
 80068e6:	789b      	ldrb	r3, [r3, #2]
 80068e8:	2b01      	cmp	r3, #1
 80068ea:	d10e      	bne.n	800690a <USBH_SetCfg+0x32>
 80068ec:	687b      	ldr	r3, [r7, #4]
 80068ee:	2200      	movs	r2, #0
 80068f0:	741a      	strb	r2, [r3, #16]
 80068f2:	687b      	ldr	r3, [r7, #4]
 80068f4:	2209      	movs	r2, #9
 80068f6:	745a      	strb	r2, [r3, #17]
 80068f8:	687b      	ldr	r3, [r7, #4]
 80068fa:	887a      	ldrh	r2, [r7, #2]
 80068fc:	825a      	strh	r2, [r3, #18]
 80068fe:	687b      	ldr	r3, [r7, #4]
 8006900:	2200      	movs	r2, #0
 8006902:	829a      	strh	r2, [r3, #20]
 8006904:	687b      	ldr	r3, [r7, #4]
 8006906:	2200      	movs	r2, #0
 8006908:	82da      	strh	r2, [r3, #22]
 800690a:	2200      	movs	r2, #0
 800690c:	2100      	movs	r1, #0
 800690e:	6878      	ldr	r0, [r7, #4]
 8006910:	f000 fa09 	bl	8006d26 <USBH_CtlReq>
 8006914:	4603      	mov	r3, r0
 8006916:	4618      	mov	r0, r3
 8006918:	3708      	adds	r7, #8
 800691a:	46bd      	mov	sp, r7
 800691c:	bd80      	pop	{r7, pc}

0800691e <USBH_SetFeature>:
 800691e:	b580      	push	{r7, lr}
 8006920:	b082      	sub	sp, #8
 8006922:	af00      	add	r7, sp, #0
 8006924:	6078      	str	r0, [r7, #4]
 8006926:	460b      	mov	r3, r1
 8006928:	70fb      	strb	r3, [r7, #3]
 800692a:	687b      	ldr	r3, [r7, #4]
 800692c:	789b      	ldrb	r3, [r3, #2]
 800692e:	2b01      	cmp	r3, #1
 8006930:	d10f      	bne.n	8006952 <USBH_SetFeature+0x34>
 8006932:	687b      	ldr	r3, [r7, #4]
 8006934:	2200      	movs	r2, #0
 8006936:	741a      	strb	r2, [r3, #16]
 8006938:	687b      	ldr	r3, [r7, #4]
 800693a:	2203      	movs	r2, #3
 800693c:	745a      	strb	r2, [r3, #17]
 800693e:	78fb      	ldrb	r3, [r7, #3]
 8006940:	b29a      	uxth	r2, r3
 8006942:	687b      	ldr	r3, [r7, #4]
 8006944:	825a      	strh	r2, [r3, #18]
 8006946:	687b      	ldr	r3, [r7, #4]
 8006948:	2200      	movs	r2, #0
 800694a:	829a      	strh	r2, [r3, #20]
 800694c:	687b      	ldr	r3, [r7, #4]
 800694e:	2200      	movs	r2, #0
 8006950:	82da      	strh	r2, [r3, #22]
 8006952:	2200      	movs	r2, #0
 8006954:	2100      	movs	r1, #0
 8006956:	6878      	ldr	r0, [r7, #4]
 8006958:	f000 f9e5 	bl	8006d26 <USBH_CtlReq>
 800695c:	4603      	mov	r3, r0
 800695e:	4618      	mov	r0, r3
 8006960:	3708      	adds	r7, #8
 8006962:	46bd      	mov	sp, r7
 8006964:	bd80      	pop	{r7, pc}

08006966 <USBH_ClrFeature>:
 8006966:	b580      	push	{r7, lr}
 8006968:	b082      	sub	sp, #8
 800696a:	af00      	add	r7, sp, #0
 800696c:	6078      	str	r0, [r7, #4]
 800696e:	460b      	mov	r3, r1
 8006970:	70fb      	strb	r3, [r7, #3]
 8006972:	687b      	ldr	r3, [r7, #4]
 8006974:	789b      	ldrb	r3, [r3, #2]
 8006976:	2b01      	cmp	r3, #1
 8006978:	d10f      	bne.n	800699a <USBH_ClrFeature+0x34>
 800697a:	687b      	ldr	r3, [r7, #4]
 800697c:	2202      	movs	r2, #2
 800697e:	741a      	strb	r2, [r3, #16]
 8006980:	687b      	ldr	r3, [r7, #4]
 8006982:	2201      	movs	r2, #1
 8006984:	745a      	strb	r2, [r3, #17]
 8006986:	687b      	ldr	r3, [r7, #4]
 8006988:	2200      	movs	r2, #0
 800698a:	825a      	strh	r2, [r3, #18]
 800698c:	78fb      	ldrb	r3, [r7, #3]
 800698e:	b29a      	uxth	r2, r3
 8006990:	687b      	ldr	r3, [r7, #4]
 8006992:	829a      	strh	r2, [r3, #20]
 8006994:	687b      	ldr	r3, [r7, #4]
 8006996:	2200      	movs	r2, #0
 8006998:	82da      	strh	r2, [r3, #22]
 800699a:	2200      	movs	r2, #0
 800699c:	2100      	movs	r1, #0
 800699e:	6878      	ldr	r0, [r7, #4]
 80069a0:	f000 f9c1 	bl	8006d26 <USBH_CtlReq>
 80069a4:	4603      	mov	r3, r0
 80069a6:	4618      	mov	r0, r3
 80069a8:	3708      	adds	r7, #8
 80069aa:	46bd      	mov	sp, r7
 80069ac:	bd80      	pop	{r7, pc}

080069ae <USBH_ParseDevDesc>:
 80069ae:	b480      	push	{r7}
 80069b0:	b085      	sub	sp, #20
 80069b2:	af00      	add	r7, sp, #0
 80069b4:	60f8      	str	r0, [r7, #12]
 80069b6:	60b9      	str	r1, [r7, #8]
 80069b8:	4613      	mov	r3, r2
 80069ba:	80fb      	strh	r3, [r7, #6]
 80069bc:	68bb      	ldr	r3, [r7, #8]
 80069be:	781a      	ldrb	r2, [r3, #0]
 80069c0:	68fb      	ldr	r3, [r7, #12]
 80069c2:	701a      	strb	r2, [r3, #0]
 80069c4:	68bb      	ldr	r3, [r7, #8]
 80069c6:	785a      	ldrb	r2, [r3, #1]
 80069c8:	68fb      	ldr	r3, [r7, #12]
 80069ca:	705a      	strb	r2, [r3, #1]
 80069cc:	68bb      	ldr	r3, [r7, #8]
 80069ce:	3302      	adds	r3, #2
 80069d0:	781b      	ldrb	r3, [r3, #0]
 80069d2:	b29a      	uxth	r2, r3
 80069d4:	68bb      	ldr	r3, [r7, #8]
 80069d6:	3303      	adds	r3, #3
 80069d8:	781b      	ldrb	r3, [r3, #0]
 80069da:	b29b      	uxth	r3, r3
 80069dc:	021b      	lsls	r3, r3, #8
 80069de:	b29b      	uxth	r3, r3
 80069e0:	4313      	orrs	r3, r2
 80069e2:	b29a      	uxth	r2, r3
 80069e4:	68fb      	ldr	r3, [r7, #12]
 80069e6:	805a      	strh	r2, [r3, #2]
 80069e8:	68bb      	ldr	r3, [r7, #8]
 80069ea:	791a      	ldrb	r2, [r3, #4]
 80069ec:	68fb      	ldr	r3, [r7, #12]
 80069ee:	711a      	strb	r2, [r3, #4]
 80069f0:	68bb      	ldr	r3, [r7, #8]
 80069f2:	795a      	ldrb	r2, [r3, #5]
 80069f4:	68fb      	ldr	r3, [r7, #12]
 80069f6:	715a      	strb	r2, [r3, #5]
 80069f8:	68bb      	ldr	r3, [r7, #8]
 80069fa:	799a      	ldrb	r2, [r3, #6]
 80069fc:	68fb      	ldr	r3, [r7, #12]
 80069fe:	719a      	strb	r2, [r3, #6]
 8006a00:	68bb      	ldr	r3, [r7, #8]
 8006a02:	79da      	ldrb	r2, [r3, #7]
 8006a04:	68fb      	ldr	r3, [r7, #12]
 8006a06:	71da      	strb	r2, [r3, #7]
 8006a08:	88fb      	ldrh	r3, [r7, #6]
 8006a0a:	2b08      	cmp	r3, #8
 8006a0c:	d939      	bls.n	8006a82 <USBH_ParseDevDesc+0xd4>
 8006a0e:	68bb      	ldr	r3, [r7, #8]
 8006a10:	3308      	adds	r3, #8
 8006a12:	781b      	ldrb	r3, [r3, #0]
 8006a14:	b29a      	uxth	r2, r3
 8006a16:	68bb      	ldr	r3, [r7, #8]
 8006a18:	3309      	adds	r3, #9
 8006a1a:	781b      	ldrb	r3, [r3, #0]
 8006a1c:	b29b      	uxth	r3, r3
 8006a1e:	021b      	lsls	r3, r3, #8
 8006a20:	b29b      	uxth	r3, r3
 8006a22:	4313      	orrs	r3, r2
 8006a24:	b29a      	uxth	r2, r3
 8006a26:	68fb      	ldr	r3, [r7, #12]
 8006a28:	811a      	strh	r2, [r3, #8]
 8006a2a:	68bb      	ldr	r3, [r7, #8]
 8006a2c:	330a      	adds	r3, #10
 8006a2e:	781b      	ldrb	r3, [r3, #0]
 8006a30:	b29a      	uxth	r2, r3
 8006a32:	68bb      	ldr	r3, [r7, #8]
 8006a34:	330b      	adds	r3, #11
 8006a36:	781b      	ldrb	r3, [r3, #0]
 8006a38:	b29b      	uxth	r3, r3
 8006a3a:	021b      	lsls	r3, r3, #8
 8006a3c:	b29b      	uxth	r3, r3
 8006a3e:	4313      	orrs	r3, r2
 8006a40:	b29a      	uxth	r2, r3
 8006a42:	68fb      	ldr	r3, [r7, #12]
 8006a44:	815a      	strh	r2, [r3, #10]
 8006a46:	68bb      	ldr	r3, [r7, #8]
 8006a48:	330c      	adds	r3, #12
 8006a4a:	781b      	ldrb	r3, [r3, #0]
 8006a4c:	b29a      	uxth	r2, r3
 8006a4e:	68bb      	ldr	r3, [r7, #8]
 8006a50:	330d      	adds	r3, #13
 8006a52:	781b      	ldrb	r3, [r3, #0]
 8006a54:	b29b      	uxth	r3, r3
 8006a56:	021b      	lsls	r3, r3, #8
 8006a58:	b29b      	uxth	r3, r3
 8006a5a:	4313      	orrs	r3, r2
 8006a5c:	b29a      	uxth	r2, r3
 8006a5e:	68fb      	ldr	r3, [r7, #12]
 8006a60:	819a      	strh	r2, [r3, #12]
 8006a62:	68bb      	ldr	r3, [r7, #8]
 8006a64:	7b9a      	ldrb	r2, [r3, #14]
 8006a66:	68fb      	ldr	r3, [r7, #12]
 8006a68:	739a      	strb	r2, [r3, #14]
 8006a6a:	68bb      	ldr	r3, [r7, #8]
 8006a6c:	7bda      	ldrb	r2, [r3, #15]
 8006a6e:	68fb      	ldr	r3, [r7, #12]
 8006a70:	73da      	strb	r2, [r3, #15]
 8006a72:	68bb      	ldr	r3, [r7, #8]
 8006a74:	7c1a      	ldrb	r2, [r3, #16]
 8006a76:	68fb      	ldr	r3, [r7, #12]
 8006a78:	741a      	strb	r2, [r3, #16]
 8006a7a:	68bb      	ldr	r3, [r7, #8]
 8006a7c:	7c5a      	ldrb	r2, [r3, #17]
 8006a7e:	68fb      	ldr	r3, [r7, #12]
 8006a80:	745a      	strb	r2, [r3, #17]
 8006a82:	bf00      	nop
 8006a84:	3714      	adds	r7, #20
 8006a86:	46bd      	mov	sp, r7
 8006a88:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a8c:	4770      	bx	lr

08006a8e <USBH_ParseCfgDesc>:
 8006a8e:	b580      	push	{r7, lr}
 8006a90:	b08a      	sub	sp, #40	; 0x28
 8006a92:	af00      	add	r7, sp, #0
 8006a94:	60f8      	str	r0, [r7, #12]
 8006a96:	60b9      	str	r1, [r7, #8]
 8006a98:	4613      	mov	r3, r2
 8006a9a:	80fb      	strh	r3, [r7, #6]
 8006a9c:	68bb      	ldr	r3, [r7, #8]
 8006a9e:	627b      	str	r3, [r7, #36]	; 0x24
 8006aa0:	2300      	movs	r3, #0
 8006aa2:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8006aa6:	2300      	movs	r3, #0
 8006aa8:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
 8006aac:	68bb      	ldr	r3, [r7, #8]
 8006aae:	627b      	str	r3, [r7, #36]	; 0x24
 8006ab0:	68bb      	ldr	r3, [r7, #8]
 8006ab2:	781a      	ldrb	r2, [r3, #0]
 8006ab4:	68fb      	ldr	r3, [r7, #12]
 8006ab6:	701a      	strb	r2, [r3, #0]
 8006ab8:	68bb      	ldr	r3, [r7, #8]
 8006aba:	785a      	ldrb	r2, [r3, #1]
 8006abc:	68fb      	ldr	r3, [r7, #12]
 8006abe:	705a      	strb	r2, [r3, #1]
 8006ac0:	68bb      	ldr	r3, [r7, #8]
 8006ac2:	3302      	adds	r3, #2
 8006ac4:	781b      	ldrb	r3, [r3, #0]
 8006ac6:	b29a      	uxth	r2, r3
 8006ac8:	68bb      	ldr	r3, [r7, #8]
 8006aca:	3303      	adds	r3, #3
 8006acc:	781b      	ldrb	r3, [r3, #0]
 8006ace:	b29b      	uxth	r3, r3
 8006ad0:	021b      	lsls	r3, r3, #8
 8006ad2:	b29b      	uxth	r3, r3
 8006ad4:	4313      	orrs	r3, r2
 8006ad6:	b29a      	uxth	r2, r3
 8006ad8:	68fb      	ldr	r3, [r7, #12]
 8006ada:	805a      	strh	r2, [r3, #2]
 8006adc:	68bb      	ldr	r3, [r7, #8]
 8006ade:	791a      	ldrb	r2, [r3, #4]
 8006ae0:	68fb      	ldr	r3, [r7, #12]
 8006ae2:	711a      	strb	r2, [r3, #4]
 8006ae4:	68bb      	ldr	r3, [r7, #8]
 8006ae6:	795a      	ldrb	r2, [r3, #5]
 8006ae8:	68fb      	ldr	r3, [r7, #12]
 8006aea:	715a      	strb	r2, [r3, #5]
 8006aec:	68bb      	ldr	r3, [r7, #8]
 8006aee:	799a      	ldrb	r2, [r3, #6]
 8006af0:	68fb      	ldr	r3, [r7, #12]
 8006af2:	719a      	strb	r2, [r3, #6]
 8006af4:	68bb      	ldr	r3, [r7, #8]
 8006af6:	79da      	ldrb	r2, [r3, #7]
 8006af8:	68fb      	ldr	r3, [r7, #12]
 8006afa:	71da      	strb	r2, [r3, #7]
 8006afc:	68bb      	ldr	r3, [r7, #8]
 8006afe:	7a1a      	ldrb	r2, [r3, #8]
 8006b00:	68fb      	ldr	r3, [r7, #12]
 8006b02:	721a      	strb	r2, [r3, #8]
 8006b04:	88fb      	ldrh	r3, [r7, #6]
 8006b06:	2b09      	cmp	r3, #9
 8006b08:	d95f      	bls.n	8006bca <USBH_ParseCfgDesc+0x13c>
 8006b0a:	2309      	movs	r3, #9
 8006b0c:	82fb      	strh	r3, [r7, #22]
 8006b0e:	2300      	movs	r3, #0
 8006b10:	61fb      	str	r3, [r7, #28]
 8006b12:	e051      	b.n	8006bb8 <USBH_ParseCfgDesc+0x12a>
 8006b14:	f107 0316 	add.w	r3, r7, #22
 8006b18:	4619      	mov	r1, r3
 8006b1a:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8006b1c:	f000 f8e8 	bl	8006cf0 <USBH_GetNextDesc>
 8006b20:	6278      	str	r0, [r7, #36]	; 0x24
 8006b22:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006b24:	785b      	ldrb	r3, [r3, #1]
 8006b26:	2b04      	cmp	r3, #4
 8006b28:	d146      	bne.n	8006bb8 <USBH_ParseCfgDesc+0x12a>
 8006b2a:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8006b2e:	221a      	movs	r2, #26
 8006b30:	fb02 f303 	mul.w	r3, r2, r3
 8006b34:	3308      	adds	r3, #8
 8006b36:	68fa      	ldr	r2, [r7, #12]
 8006b38:	4413      	add	r3, r2
 8006b3a:	3302      	adds	r3, #2
 8006b3c:	61fb      	str	r3, [r7, #28]
 8006b3e:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8006b40:	69f8      	ldr	r0, [r7, #28]
 8006b42:	f000 f846 	bl	8006bd2 <USBH_ParseInterfaceDesc>
 8006b46:	2300      	movs	r3, #0
 8006b48:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
 8006b4c:	2300      	movs	r3, #0
 8006b4e:	61bb      	str	r3, [r7, #24]
 8006b50:	e022      	b.n	8006b98 <USBH_ParseCfgDesc+0x10a>
 8006b52:	f107 0316 	add.w	r3, r7, #22
 8006b56:	4619      	mov	r1, r3
 8006b58:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8006b5a:	f000 f8c9 	bl	8006cf0 <USBH_GetNextDesc>
 8006b5e:	6278      	str	r0, [r7, #36]	; 0x24
 8006b60:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006b62:	785b      	ldrb	r3, [r3, #1]
 8006b64:	2b05      	cmp	r3, #5
 8006b66:	d117      	bne.n	8006b98 <USBH_ParseCfgDesc+0x10a>
 8006b68:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8006b6c:	f897 2022 	ldrb.w	r2, [r7, #34]	; 0x22
 8006b70:	3201      	adds	r2, #1
 8006b72:	00d2      	lsls	r2, r2, #3
 8006b74:	211a      	movs	r1, #26
 8006b76:	fb01 f303 	mul.w	r3, r1, r3
 8006b7a:	4413      	add	r3, r2
 8006b7c:	3308      	adds	r3, #8
 8006b7e:	68fa      	ldr	r2, [r7, #12]
 8006b80:	4413      	add	r3, r2
 8006b82:	3304      	adds	r3, #4
 8006b84:	61bb      	str	r3, [r7, #24]
 8006b86:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8006b88:	69b8      	ldr	r0, [r7, #24]
 8006b8a:	f000 f851 	bl	8006c30 <USBH_ParseEPDesc>
 8006b8e:	f897 3022 	ldrb.w	r3, [r7, #34]	; 0x22
 8006b92:	3301      	adds	r3, #1
 8006b94:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
 8006b98:	69fb      	ldr	r3, [r7, #28]
 8006b9a:	791b      	ldrb	r3, [r3, #4]
 8006b9c:	f897 2022 	ldrb.w	r2, [r7, #34]	; 0x22
 8006ba0:	429a      	cmp	r2, r3
 8006ba2:	d204      	bcs.n	8006bae <USBH_ParseCfgDesc+0x120>
 8006ba4:	68fb      	ldr	r3, [r7, #12]
 8006ba6:	885a      	ldrh	r2, [r3, #2]
 8006ba8:	8afb      	ldrh	r3, [r7, #22]
 8006baa:	429a      	cmp	r2, r3
 8006bac:	d8d1      	bhi.n	8006b52 <USBH_ParseCfgDesc+0xc4>
 8006bae:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8006bb2:	3301      	adds	r3, #1
 8006bb4:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8006bb8:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8006bbc:	2b00      	cmp	r3, #0
 8006bbe:	d104      	bne.n	8006bca <USBH_ParseCfgDesc+0x13c>
 8006bc0:	68fb      	ldr	r3, [r7, #12]
 8006bc2:	885a      	ldrh	r2, [r3, #2]
 8006bc4:	8afb      	ldrh	r3, [r7, #22]
 8006bc6:	429a      	cmp	r2, r3
 8006bc8:	d8a4      	bhi.n	8006b14 <USBH_ParseCfgDesc+0x86>
 8006bca:	bf00      	nop
 8006bcc:	3728      	adds	r7, #40	; 0x28
 8006bce:	46bd      	mov	sp, r7
 8006bd0:	bd80      	pop	{r7, pc}

08006bd2 <USBH_ParseInterfaceDesc>:
 8006bd2:	b480      	push	{r7}
 8006bd4:	b083      	sub	sp, #12
 8006bd6:	af00      	add	r7, sp, #0
 8006bd8:	6078      	str	r0, [r7, #4]
 8006bda:	6039      	str	r1, [r7, #0]
 8006bdc:	683b      	ldr	r3, [r7, #0]
 8006bde:	781a      	ldrb	r2, [r3, #0]
 8006be0:	687b      	ldr	r3, [r7, #4]
 8006be2:	701a      	strb	r2, [r3, #0]
 8006be4:	683b      	ldr	r3, [r7, #0]
 8006be6:	785a      	ldrb	r2, [r3, #1]
 8006be8:	687b      	ldr	r3, [r7, #4]
 8006bea:	705a      	strb	r2, [r3, #1]
 8006bec:	683b      	ldr	r3, [r7, #0]
 8006bee:	789a      	ldrb	r2, [r3, #2]
 8006bf0:	687b      	ldr	r3, [r7, #4]
 8006bf2:	709a      	strb	r2, [r3, #2]
 8006bf4:	683b      	ldr	r3, [r7, #0]
 8006bf6:	78da      	ldrb	r2, [r3, #3]
 8006bf8:	687b      	ldr	r3, [r7, #4]
 8006bfa:	70da      	strb	r2, [r3, #3]
 8006bfc:	683b      	ldr	r3, [r7, #0]
 8006bfe:	791a      	ldrb	r2, [r3, #4]
 8006c00:	687b      	ldr	r3, [r7, #4]
 8006c02:	711a      	strb	r2, [r3, #4]
 8006c04:	683b      	ldr	r3, [r7, #0]
 8006c06:	795a      	ldrb	r2, [r3, #5]
 8006c08:	687b      	ldr	r3, [r7, #4]
 8006c0a:	715a      	strb	r2, [r3, #5]
 8006c0c:	683b      	ldr	r3, [r7, #0]
 8006c0e:	799a      	ldrb	r2, [r3, #6]
 8006c10:	687b      	ldr	r3, [r7, #4]
 8006c12:	719a      	strb	r2, [r3, #6]
 8006c14:	683b      	ldr	r3, [r7, #0]
 8006c16:	79da      	ldrb	r2, [r3, #7]
 8006c18:	687b      	ldr	r3, [r7, #4]
 8006c1a:	71da      	strb	r2, [r3, #7]
 8006c1c:	683b      	ldr	r3, [r7, #0]
 8006c1e:	7a1a      	ldrb	r2, [r3, #8]
 8006c20:	687b      	ldr	r3, [r7, #4]
 8006c22:	721a      	strb	r2, [r3, #8]
 8006c24:	bf00      	nop
 8006c26:	370c      	adds	r7, #12
 8006c28:	46bd      	mov	sp, r7
 8006c2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c2e:	4770      	bx	lr

08006c30 <USBH_ParseEPDesc>:
 8006c30:	b480      	push	{r7}
 8006c32:	b083      	sub	sp, #12
 8006c34:	af00      	add	r7, sp, #0
 8006c36:	6078      	str	r0, [r7, #4]
 8006c38:	6039      	str	r1, [r7, #0]
 8006c3a:	683b      	ldr	r3, [r7, #0]
 8006c3c:	781a      	ldrb	r2, [r3, #0]
 8006c3e:	687b      	ldr	r3, [r7, #4]
 8006c40:	701a      	strb	r2, [r3, #0]
 8006c42:	683b      	ldr	r3, [r7, #0]
 8006c44:	785a      	ldrb	r2, [r3, #1]
 8006c46:	687b      	ldr	r3, [r7, #4]
 8006c48:	705a      	strb	r2, [r3, #1]
 8006c4a:	683b      	ldr	r3, [r7, #0]
 8006c4c:	789a      	ldrb	r2, [r3, #2]
 8006c4e:	687b      	ldr	r3, [r7, #4]
 8006c50:	709a      	strb	r2, [r3, #2]
 8006c52:	683b      	ldr	r3, [r7, #0]
 8006c54:	78da      	ldrb	r2, [r3, #3]
 8006c56:	687b      	ldr	r3, [r7, #4]
 8006c58:	70da      	strb	r2, [r3, #3]
 8006c5a:	683b      	ldr	r3, [r7, #0]
 8006c5c:	3304      	adds	r3, #4
 8006c5e:	781b      	ldrb	r3, [r3, #0]
 8006c60:	b29a      	uxth	r2, r3
 8006c62:	683b      	ldr	r3, [r7, #0]
 8006c64:	3305      	adds	r3, #5
 8006c66:	781b      	ldrb	r3, [r3, #0]
 8006c68:	b29b      	uxth	r3, r3
 8006c6a:	021b      	lsls	r3, r3, #8
 8006c6c:	b29b      	uxth	r3, r3
 8006c6e:	4313      	orrs	r3, r2
 8006c70:	b29a      	uxth	r2, r3
 8006c72:	687b      	ldr	r3, [r7, #4]
 8006c74:	809a      	strh	r2, [r3, #4]
 8006c76:	683b      	ldr	r3, [r7, #0]
 8006c78:	799a      	ldrb	r2, [r3, #6]
 8006c7a:	687b      	ldr	r3, [r7, #4]
 8006c7c:	719a      	strb	r2, [r3, #6]
 8006c7e:	bf00      	nop
 8006c80:	370c      	adds	r7, #12
 8006c82:	46bd      	mov	sp, r7
 8006c84:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c88:	4770      	bx	lr

08006c8a <USBH_ParseStringDesc>:
 8006c8a:	b480      	push	{r7}
 8006c8c:	b087      	sub	sp, #28
 8006c8e:	af00      	add	r7, sp, #0
 8006c90:	60f8      	str	r0, [r7, #12]
 8006c92:	60b9      	str	r1, [r7, #8]
 8006c94:	4613      	mov	r3, r2
 8006c96:	80fb      	strh	r3, [r7, #6]
 8006c98:	68fb      	ldr	r3, [r7, #12]
 8006c9a:	3301      	adds	r3, #1
 8006c9c:	781b      	ldrb	r3, [r3, #0]
 8006c9e:	2b03      	cmp	r3, #3
 8006ca0:	d120      	bne.n	8006ce4 <USBH_ParseStringDesc+0x5a>
 8006ca2:	68fb      	ldr	r3, [r7, #12]
 8006ca4:	781b      	ldrb	r3, [r3, #0]
 8006ca6:	1e9a      	subs	r2, r3, #2
 8006ca8:	88fb      	ldrh	r3, [r7, #6]
 8006caa:	4293      	cmp	r3, r2
 8006cac:	bf28      	it	cs
 8006cae:	4613      	movcs	r3, r2
 8006cb0:	82bb      	strh	r3, [r7, #20]
 8006cb2:	68fb      	ldr	r3, [r7, #12]
 8006cb4:	3302      	adds	r3, #2
 8006cb6:	60fb      	str	r3, [r7, #12]
 8006cb8:	2300      	movs	r3, #0
 8006cba:	82fb      	strh	r3, [r7, #22]
 8006cbc:	e00b      	b.n	8006cd6 <USBH_ParseStringDesc+0x4c>
 8006cbe:	8afb      	ldrh	r3, [r7, #22]
 8006cc0:	68fa      	ldr	r2, [r7, #12]
 8006cc2:	4413      	add	r3, r2
 8006cc4:	781a      	ldrb	r2, [r3, #0]
 8006cc6:	68bb      	ldr	r3, [r7, #8]
 8006cc8:	701a      	strb	r2, [r3, #0]
 8006cca:	68bb      	ldr	r3, [r7, #8]
 8006ccc:	3301      	adds	r3, #1
 8006cce:	60bb      	str	r3, [r7, #8]
 8006cd0:	8afb      	ldrh	r3, [r7, #22]
 8006cd2:	3302      	adds	r3, #2
 8006cd4:	82fb      	strh	r3, [r7, #22]
 8006cd6:	8afa      	ldrh	r2, [r7, #22]
 8006cd8:	8abb      	ldrh	r3, [r7, #20]
 8006cda:	429a      	cmp	r2, r3
 8006cdc:	d3ef      	bcc.n	8006cbe <USBH_ParseStringDesc+0x34>
 8006cde:	68bb      	ldr	r3, [r7, #8]
 8006ce0:	2200      	movs	r2, #0
 8006ce2:	701a      	strb	r2, [r3, #0]
 8006ce4:	bf00      	nop
 8006ce6:	371c      	adds	r7, #28
 8006ce8:	46bd      	mov	sp, r7
 8006cea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006cee:	4770      	bx	lr

08006cf0 <USBH_GetNextDesc>:
 8006cf0:	b480      	push	{r7}
 8006cf2:	b085      	sub	sp, #20
 8006cf4:	af00      	add	r7, sp, #0
 8006cf6:	6078      	str	r0, [r7, #4]
 8006cf8:	6039      	str	r1, [r7, #0]
 8006cfa:	683b      	ldr	r3, [r7, #0]
 8006cfc:	881a      	ldrh	r2, [r3, #0]
 8006cfe:	687b      	ldr	r3, [r7, #4]
 8006d00:	781b      	ldrb	r3, [r3, #0]
 8006d02:	b29b      	uxth	r3, r3
 8006d04:	4413      	add	r3, r2
 8006d06:	b29a      	uxth	r2, r3
 8006d08:	683b      	ldr	r3, [r7, #0]
 8006d0a:	801a      	strh	r2, [r3, #0]
 8006d0c:	687b      	ldr	r3, [r7, #4]
 8006d0e:	781b      	ldrb	r3, [r3, #0]
 8006d10:	461a      	mov	r2, r3
 8006d12:	687b      	ldr	r3, [r7, #4]
 8006d14:	4413      	add	r3, r2
 8006d16:	60fb      	str	r3, [r7, #12]
 8006d18:	68fb      	ldr	r3, [r7, #12]
 8006d1a:	4618      	mov	r0, r3
 8006d1c:	3714      	adds	r7, #20
 8006d1e:	46bd      	mov	sp, r7
 8006d20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d24:	4770      	bx	lr

08006d26 <USBH_CtlReq>:
 8006d26:	b580      	push	{r7, lr}
 8006d28:	b086      	sub	sp, #24
 8006d2a:	af00      	add	r7, sp, #0
 8006d2c:	60f8      	str	r0, [r7, #12]
 8006d2e:	60b9      	str	r1, [r7, #8]
 8006d30:	4613      	mov	r3, r2
 8006d32:	80fb      	strh	r3, [r7, #6]
 8006d34:	2301      	movs	r3, #1
 8006d36:	75fb      	strb	r3, [r7, #23]
 8006d38:	68fb      	ldr	r3, [r7, #12]
 8006d3a:	789b      	ldrb	r3, [r3, #2]
 8006d3c:	2b01      	cmp	r3, #1
 8006d3e:	d002      	beq.n	8006d46 <USBH_CtlReq+0x20>
 8006d40:	2b02      	cmp	r3, #2
 8006d42:	d00f      	beq.n	8006d64 <USBH_CtlReq+0x3e>
 8006d44:	e027      	b.n	8006d96 <USBH_CtlReq+0x70>
 8006d46:	68fb      	ldr	r3, [r7, #12]
 8006d48:	68ba      	ldr	r2, [r7, #8]
 8006d4a:	609a      	str	r2, [r3, #8]
 8006d4c:	68fb      	ldr	r3, [r7, #12]
 8006d4e:	88fa      	ldrh	r2, [r7, #6]
 8006d50:	819a      	strh	r2, [r3, #12]
 8006d52:	68fb      	ldr	r3, [r7, #12]
 8006d54:	2201      	movs	r2, #1
 8006d56:	761a      	strb	r2, [r3, #24]
 8006d58:	68fb      	ldr	r3, [r7, #12]
 8006d5a:	2202      	movs	r2, #2
 8006d5c:	709a      	strb	r2, [r3, #2]
 8006d5e:	2301      	movs	r3, #1
 8006d60:	75fb      	strb	r3, [r7, #23]
 8006d62:	e018      	b.n	8006d96 <USBH_CtlReq+0x70>
 8006d64:	68f8      	ldr	r0, [r7, #12]
 8006d66:	f000 f81b 	bl	8006da0 <USBH_HandleControl>
 8006d6a:	4603      	mov	r3, r0
 8006d6c:	75fb      	strb	r3, [r7, #23]
 8006d6e:	7dfb      	ldrb	r3, [r7, #23]
 8006d70:	2b00      	cmp	r3, #0
 8006d72:	d002      	beq.n	8006d7a <USBH_CtlReq+0x54>
 8006d74:	7dfb      	ldrb	r3, [r7, #23]
 8006d76:	2b03      	cmp	r3, #3
 8006d78:	d106      	bne.n	8006d88 <USBH_CtlReq+0x62>
 8006d7a:	68fb      	ldr	r3, [r7, #12]
 8006d7c:	2201      	movs	r2, #1
 8006d7e:	709a      	strb	r2, [r3, #2]
 8006d80:	68fb      	ldr	r3, [r7, #12]
 8006d82:	2200      	movs	r2, #0
 8006d84:	761a      	strb	r2, [r3, #24]
 8006d86:	e005      	b.n	8006d94 <USBH_CtlReq+0x6e>
 8006d88:	7dfb      	ldrb	r3, [r7, #23]
 8006d8a:	2b02      	cmp	r3, #2
 8006d8c:	d102      	bne.n	8006d94 <USBH_CtlReq+0x6e>
 8006d8e:	68fb      	ldr	r3, [r7, #12]
 8006d90:	2201      	movs	r2, #1
 8006d92:	709a      	strb	r2, [r3, #2]
 8006d94:	bf00      	nop
 8006d96:	7dfb      	ldrb	r3, [r7, #23]
 8006d98:	4618      	mov	r0, r3
 8006d9a:	3718      	adds	r7, #24
 8006d9c:	46bd      	mov	sp, r7
 8006d9e:	bd80      	pop	{r7, pc}

08006da0 <USBH_HandleControl>:
 8006da0:	b580      	push	{r7, lr}
 8006da2:	b086      	sub	sp, #24
 8006da4:	af02      	add	r7, sp, #8
 8006da6:	6078      	str	r0, [r7, #4]
 8006da8:	2301      	movs	r3, #1
 8006daa:	73fb      	strb	r3, [r7, #15]
 8006dac:	2300      	movs	r3, #0
 8006dae:	73bb      	strb	r3, [r7, #14]
 8006db0:	687b      	ldr	r3, [r7, #4]
 8006db2:	7e1b      	ldrb	r3, [r3, #24]
 8006db4:	3b01      	subs	r3, #1
 8006db6:	2b0a      	cmp	r3, #10
 8006db8:	f200 815f 	bhi.w	800707a <USBH_HandleControl+0x2da>
 8006dbc:	a201      	add	r2, pc, #4	; (adr r2, 8006dc4 <USBH_HandleControl+0x24>)
 8006dbe:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006dc2:	bf00      	nop
 8006dc4:	08006df1 	.word	0x08006df1
 8006dc8:	08006e0b 	.word	0x08006e0b
 8006dcc:	08006e75 	.word	0x08006e75
 8006dd0:	08006e9b 	.word	0x08006e9b
 8006dd4:	08006ed3 	.word	0x08006ed3
 8006dd8:	08006efd 	.word	0x08006efd
 8006ddc:	08006f4f 	.word	0x08006f4f
 8006de0:	08006f71 	.word	0x08006f71
 8006de4:	08006fad 	.word	0x08006fad
 8006de8:	08006fd3 	.word	0x08006fd3
 8006dec:	08007011 	.word	0x08007011
 8006df0:	687b      	ldr	r3, [r7, #4]
 8006df2:	f103 0110 	add.w	r1, r3, #16
 8006df6:	687b      	ldr	r3, [r7, #4]
 8006df8:	795b      	ldrb	r3, [r3, #5]
 8006dfa:	461a      	mov	r2, r3
 8006dfc:	6878      	ldr	r0, [r7, #4]
 8006dfe:	f000 f951 	bl	80070a4 <USBH_CtlSendSetup>
 8006e02:	687b      	ldr	r3, [r7, #4]
 8006e04:	2202      	movs	r2, #2
 8006e06:	761a      	strb	r2, [r3, #24]
 8006e08:	e142      	b.n	8007090 <USBH_HandleControl+0x2f0>
 8006e0a:	687b      	ldr	r3, [r7, #4]
 8006e0c:	795b      	ldrb	r3, [r3, #5]
 8006e0e:	4619      	mov	r1, r3
 8006e10:	6878      	ldr	r0, [r7, #4]
 8006e12:	f000 fc9d 	bl	8007750 <USBH_LL_GetURBState>
 8006e16:	4603      	mov	r3, r0
 8006e18:	73bb      	strb	r3, [r7, #14]
 8006e1a:	7bbb      	ldrb	r3, [r7, #14]
 8006e1c:	2b01      	cmp	r3, #1
 8006e1e:	d11e      	bne.n	8006e5e <USBH_HandleControl+0xbe>
 8006e20:	687b      	ldr	r3, [r7, #4]
 8006e22:	7c1b      	ldrb	r3, [r3, #16]
 8006e24:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 8006e28:	737b      	strb	r3, [r7, #13]
 8006e2a:	687b      	ldr	r3, [r7, #4]
 8006e2c:	8adb      	ldrh	r3, [r3, #22]
 8006e2e:	2b00      	cmp	r3, #0
 8006e30:	d00a      	beq.n	8006e48 <USBH_HandleControl+0xa8>
 8006e32:	7b7b      	ldrb	r3, [r7, #13]
 8006e34:	2b80      	cmp	r3, #128	; 0x80
 8006e36:	d103      	bne.n	8006e40 <USBH_HandleControl+0xa0>
 8006e38:	687b      	ldr	r3, [r7, #4]
 8006e3a:	2203      	movs	r2, #3
 8006e3c:	761a      	strb	r2, [r3, #24]
 8006e3e:	e11e      	b.n	800707e <USBH_HandleControl+0x2de>
 8006e40:	687b      	ldr	r3, [r7, #4]
 8006e42:	2205      	movs	r2, #5
 8006e44:	761a      	strb	r2, [r3, #24]
 8006e46:	e11a      	b.n	800707e <USBH_HandleControl+0x2de>
 8006e48:	7b7b      	ldrb	r3, [r7, #13]
 8006e4a:	2b80      	cmp	r3, #128	; 0x80
 8006e4c:	d103      	bne.n	8006e56 <USBH_HandleControl+0xb6>
 8006e4e:	687b      	ldr	r3, [r7, #4]
 8006e50:	2209      	movs	r2, #9
 8006e52:	761a      	strb	r2, [r3, #24]
 8006e54:	e113      	b.n	800707e <USBH_HandleControl+0x2de>
 8006e56:	687b      	ldr	r3, [r7, #4]
 8006e58:	2207      	movs	r2, #7
 8006e5a:	761a      	strb	r2, [r3, #24]
 8006e5c:	e10f      	b.n	800707e <USBH_HandleControl+0x2de>
 8006e5e:	7bbb      	ldrb	r3, [r7, #14]
 8006e60:	2b04      	cmp	r3, #4
 8006e62:	d003      	beq.n	8006e6c <USBH_HandleControl+0xcc>
 8006e64:	7bbb      	ldrb	r3, [r7, #14]
 8006e66:	2b02      	cmp	r3, #2
 8006e68:	f040 8109 	bne.w	800707e <USBH_HandleControl+0x2de>
 8006e6c:	687b      	ldr	r3, [r7, #4]
 8006e6e:	220b      	movs	r2, #11
 8006e70:	761a      	strb	r2, [r3, #24]
 8006e72:	e104      	b.n	800707e <USBH_HandleControl+0x2de>
 8006e74:	687b      	ldr	r3, [r7, #4]
 8006e76:	f8d3 33a8 	ldr.w	r3, [r3, #936]	; 0x3a8
 8006e7a:	b29a      	uxth	r2, r3
 8006e7c:	687b      	ldr	r3, [r7, #4]
 8006e7e:	81da      	strh	r2, [r3, #14]
 8006e80:	687b      	ldr	r3, [r7, #4]
 8006e82:	6899      	ldr	r1, [r3, #8]
 8006e84:	687b      	ldr	r3, [r7, #4]
 8006e86:	899a      	ldrh	r2, [r3, #12]
 8006e88:	687b      	ldr	r3, [r7, #4]
 8006e8a:	791b      	ldrb	r3, [r3, #4]
 8006e8c:	6878      	ldr	r0, [r7, #4]
 8006e8e:	f000 f948 	bl	8007122 <USBH_CtlReceiveData>
 8006e92:	687b      	ldr	r3, [r7, #4]
 8006e94:	2204      	movs	r2, #4
 8006e96:	761a      	strb	r2, [r3, #24]
 8006e98:	e0fa      	b.n	8007090 <USBH_HandleControl+0x2f0>
 8006e9a:	687b      	ldr	r3, [r7, #4]
 8006e9c:	791b      	ldrb	r3, [r3, #4]
 8006e9e:	4619      	mov	r1, r3
 8006ea0:	6878      	ldr	r0, [r7, #4]
 8006ea2:	f000 fc55 	bl	8007750 <USBH_LL_GetURBState>
 8006ea6:	4603      	mov	r3, r0
 8006ea8:	73bb      	strb	r3, [r7, #14]
 8006eaa:	7bbb      	ldrb	r3, [r7, #14]
 8006eac:	2b01      	cmp	r3, #1
 8006eae:	d102      	bne.n	8006eb6 <USBH_HandleControl+0x116>
 8006eb0:	687b      	ldr	r3, [r7, #4]
 8006eb2:	2209      	movs	r2, #9
 8006eb4:	761a      	strb	r2, [r3, #24]
 8006eb6:	7bbb      	ldrb	r3, [r7, #14]
 8006eb8:	2b05      	cmp	r3, #5
 8006eba:	d102      	bne.n	8006ec2 <USBH_HandleControl+0x122>
 8006ebc:	2303      	movs	r3, #3
 8006ebe:	73fb      	strb	r3, [r7, #15]
 8006ec0:	e0df      	b.n	8007082 <USBH_HandleControl+0x2e2>
 8006ec2:	7bbb      	ldrb	r3, [r7, #14]
 8006ec4:	2b04      	cmp	r3, #4
 8006ec6:	f040 80dc 	bne.w	8007082 <USBH_HandleControl+0x2e2>
 8006eca:	687b      	ldr	r3, [r7, #4]
 8006ecc:	220b      	movs	r2, #11
 8006ece:	761a      	strb	r2, [r3, #24]
 8006ed0:	e0d7      	b.n	8007082 <USBH_HandleControl+0x2e2>
 8006ed2:	687b      	ldr	r3, [r7, #4]
 8006ed4:	6899      	ldr	r1, [r3, #8]
 8006ed6:	687b      	ldr	r3, [r7, #4]
 8006ed8:	899a      	ldrh	r2, [r3, #12]
 8006eda:	687b      	ldr	r3, [r7, #4]
 8006edc:	795b      	ldrb	r3, [r3, #5]
 8006ede:	2001      	movs	r0, #1
 8006ee0:	9000      	str	r0, [sp, #0]
 8006ee2:	6878      	ldr	r0, [r7, #4]
 8006ee4:	f000 f8f8 	bl	80070d8 <USBH_CtlSendData>
 8006ee8:	687b      	ldr	r3, [r7, #4]
 8006eea:	f8d3 33a8 	ldr.w	r3, [r3, #936]	; 0x3a8
 8006eee:	b29a      	uxth	r2, r3
 8006ef0:	687b      	ldr	r3, [r7, #4]
 8006ef2:	81da      	strh	r2, [r3, #14]
 8006ef4:	687b      	ldr	r3, [r7, #4]
 8006ef6:	2206      	movs	r2, #6
 8006ef8:	761a      	strb	r2, [r3, #24]
 8006efa:	e0c9      	b.n	8007090 <USBH_HandleControl+0x2f0>
 8006efc:	687b      	ldr	r3, [r7, #4]
 8006efe:	795b      	ldrb	r3, [r3, #5]
 8006f00:	4619      	mov	r1, r3
 8006f02:	6878      	ldr	r0, [r7, #4]
 8006f04:	f000 fc24 	bl	8007750 <USBH_LL_GetURBState>
 8006f08:	4603      	mov	r3, r0
 8006f0a:	73bb      	strb	r3, [r7, #14]
 8006f0c:	7bbb      	ldrb	r3, [r7, #14]
 8006f0e:	2b01      	cmp	r3, #1
 8006f10:	d103      	bne.n	8006f1a <USBH_HandleControl+0x17a>
 8006f12:	687b      	ldr	r3, [r7, #4]
 8006f14:	2207      	movs	r2, #7
 8006f16:	761a      	strb	r2, [r3, #24]
 8006f18:	e0b5      	b.n	8007086 <USBH_HandleControl+0x2e6>
 8006f1a:	7bbb      	ldrb	r3, [r7, #14]
 8006f1c:	2b05      	cmp	r3, #5
 8006f1e:	d105      	bne.n	8006f2c <USBH_HandleControl+0x18c>
 8006f20:	687b      	ldr	r3, [r7, #4]
 8006f22:	220c      	movs	r2, #12
 8006f24:	761a      	strb	r2, [r3, #24]
 8006f26:	2303      	movs	r3, #3
 8006f28:	73fb      	strb	r3, [r7, #15]
 8006f2a:	e0ac      	b.n	8007086 <USBH_HandleControl+0x2e6>
 8006f2c:	7bbb      	ldrb	r3, [r7, #14]
 8006f2e:	2b02      	cmp	r3, #2
 8006f30:	d103      	bne.n	8006f3a <USBH_HandleControl+0x19a>
 8006f32:	687b      	ldr	r3, [r7, #4]
 8006f34:	2205      	movs	r2, #5
 8006f36:	761a      	strb	r2, [r3, #24]
 8006f38:	e0a5      	b.n	8007086 <USBH_HandleControl+0x2e6>
 8006f3a:	7bbb      	ldrb	r3, [r7, #14]
 8006f3c:	2b04      	cmp	r3, #4
 8006f3e:	f040 80a2 	bne.w	8007086 <USBH_HandleControl+0x2e6>
 8006f42:	687b      	ldr	r3, [r7, #4]
 8006f44:	220b      	movs	r2, #11
 8006f46:	761a      	strb	r2, [r3, #24]
 8006f48:	2302      	movs	r3, #2
 8006f4a:	73fb      	strb	r3, [r7, #15]
 8006f4c:	e09b      	b.n	8007086 <USBH_HandleControl+0x2e6>
 8006f4e:	687b      	ldr	r3, [r7, #4]
 8006f50:	791b      	ldrb	r3, [r3, #4]
 8006f52:	2200      	movs	r2, #0
 8006f54:	2100      	movs	r1, #0
 8006f56:	6878      	ldr	r0, [r7, #4]
 8006f58:	f000 f8e3 	bl	8007122 <USBH_CtlReceiveData>
 8006f5c:	687b      	ldr	r3, [r7, #4]
 8006f5e:	f8d3 33a8 	ldr.w	r3, [r3, #936]	; 0x3a8
 8006f62:	b29a      	uxth	r2, r3
 8006f64:	687b      	ldr	r3, [r7, #4]
 8006f66:	81da      	strh	r2, [r3, #14]
 8006f68:	687b      	ldr	r3, [r7, #4]
 8006f6a:	2208      	movs	r2, #8
 8006f6c:	761a      	strb	r2, [r3, #24]
 8006f6e:	e08f      	b.n	8007090 <USBH_HandleControl+0x2f0>
 8006f70:	687b      	ldr	r3, [r7, #4]
 8006f72:	791b      	ldrb	r3, [r3, #4]
 8006f74:	4619      	mov	r1, r3
 8006f76:	6878      	ldr	r0, [r7, #4]
 8006f78:	f000 fbea 	bl	8007750 <USBH_LL_GetURBState>
 8006f7c:	4603      	mov	r3, r0
 8006f7e:	73bb      	strb	r3, [r7, #14]
 8006f80:	7bbb      	ldrb	r3, [r7, #14]
 8006f82:	2b01      	cmp	r3, #1
 8006f84:	d105      	bne.n	8006f92 <USBH_HandleControl+0x1f2>
 8006f86:	687b      	ldr	r3, [r7, #4]
 8006f88:	220d      	movs	r2, #13
 8006f8a:	761a      	strb	r2, [r3, #24]
 8006f8c:	2300      	movs	r3, #0
 8006f8e:	73fb      	strb	r3, [r7, #15]
 8006f90:	e07b      	b.n	800708a <USBH_HandleControl+0x2ea>
 8006f92:	7bbb      	ldrb	r3, [r7, #14]
 8006f94:	2b04      	cmp	r3, #4
 8006f96:	d103      	bne.n	8006fa0 <USBH_HandleControl+0x200>
 8006f98:	687b      	ldr	r3, [r7, #4]
 8006f9a:	220b      	movs	r2, #11
 8006f9c:	761a      	strb	r2, [r3, #24]
 8006f9e:	e074      	b.n	800708a <USBH_HandleControl+0x2ea>
 8006fa0:	7bbb      	ldrb	r3, [r7, #14]
 8006fa2:	2b05      	cmp	r3, #5
 8006fa4:	d171      	bne.n	800708a <USBH_HandleControl+0x2ea>
 8006fa6:	2303      	movs	r3, #3
 8006fa8:	73fb      	strb	r3, [r7, #15]
 8006faa:	e06e      	b.n	800708a <USBH_HandleControl+0x2ea>
 8006fac:	687b      	ldr	r3, [r7, #4]
 8006fae:	795b      	ldrb	r3, [r3, #5]
 8006fb0:	2201      	movs	r2, #1
 8006fb2:	9200      	str	r2, [sp, #0]
 8006fb4:	2200      	movs	r2, #0
 8006fb6:	2100      	movs	r1, #0
 8006fb8:	6878      	ldr	r0, [r7, #4]
 8006fba:	f000 f88d 	bl	80070d8 <USBH_CtlSendData>
 8006fbe:	687b      	ldr	r3, [r7, #4]
 8006fc0:	f8d3 33a8 	ldr.w	r3, [r3, #936]	; 0x3a8
 8006fc4:	b29a      	uxth	r2, r3
 8006fc6:	687b      	ldr	r3, [r7, #4]
 8006fc8:	81da      	strh	r2, [r3, #14]
 8006fca:	687b      	ldr	r3, [r7, #4]
 8006fcc:	220a      	movs	r2, #10
 8006fce:	761a      	strb	r2, [r3, #24]
 8006fd0:	e05e      	b.n	8007090 <USBH_HandleControl+0x2f0>
 8006fd2:	687b      	ldr	r3, [r7, #4]
 8006fd4:	795b      	ldrb	r3, [r3, #5]
 8006fd6:	4619      	mov	r1, r3
 8006fd8:	6878      	ldr	r0, [r7, #4]
 8006fda:	f000 fbb9 	bl	8007750 <USBH_LL_GetURBState>
 8006fde:	4603      	mov	r3, r0
 8006fe0:	73bb      	strb	r3, [r7, #14]
 8006fe2:	7bbb      	ldrb	r3, [r7, #14]
 8006fe4:	2b01      	cmp	r3, #1
 8006fe6:	d105      	bne.n	8006ff4 <USBH_HandleControl+0x254>
 8006fe8:	2300      	movs	r3, #0
 8006fea:	73fb      	strb	r3, [r7, #15]
 8006fec:	687b      	ldr	r3, [r7, #4]
 8006fee:	220d      	movs	r2, #13
 8006ff0:	761a      	strb	r2, [r3, #24]
 8006ff2:	e04c      	b.n	800708e <USBH_HandleControl+0x2ee>
 8006ff4:	7bbb      	ldrb	r3, [r7, #14]
 8006ff6:	2b02      	cmp	r3, #2
 8006ff8:	d103      	bne.n	8007002 <USBH_HandleControl+0x262>
 8006ffa:	687b      	ldr	r3, [r7, #4]
 8006ffc:	2209      	movs	r2, #9
 8006ffe:	761a      	strb	r2, [r3, #24]
 8007000:	e045      	b.n	800708e <USBH_HandleControl+0x2ee>
 8007002:	7bbb      	ldrb	r3, [r7, #14]
 8007004:	2b04      	cmp	r3, #4
 8007006:	d142      	bne.n	800708e <USBH_HandleControl+0x2ee>
 8007008:	687b      	ldr	r3, [r7, #4]
 800700a:	220b      	movs	r2, #11
 800700c:	761a      	strb	r2, [r3, #24]
 800700e:	e03e      	b.n	800708e <USBH_HandleControl+0x2ee>
 8007010:	687b      	ldr	r3, [r7, #4]
 8007012:	7e5b      	ldrb	r3, [r3, #25]
 8007014:	3301      	adds	r3, #1
 8007016:	b2da      	uxtb	r2, r3
 8007018:	687b      	ldr	r3, [r7, #4]
 800701a:	765a      	strb	r2, [r3, #25]
 800701c:	687b      	ldr	r3, [r7, #4]
 800701e:	7e5b      	ldrb	r3, [r3, #25]
 8007020:	2b02      	cmp	r3, #2
 8007022:	d806      	bhi.n	8007032 <USBH_HandleControl+0x292>
 8007024:	687b      	ldr	r3, [r7, #4]
 8007026:	2201      	movs	r2, #1
 8007028:	761a      	strb	r2, [r3, #24]
 800702a:	687b      	ldr	r3, [r7, #4]
 800702c:	2201      	movs	r2, #1
 800702e:	709a      	strb	r2, [r3, #2]
 8007030:	e02e      	b.n	8007090 <USBH_HandleControl+0x2f0>
 8007032:	687b      	ldr	r3, [r7, #4]
 8007034:	f8d3 33b8 	ldr.w	r3, [r3, #952]	; 0x3b8
 8007038:	2106      	movs	r1, #6
 800703a:	6878      	ldr	r0, [r7, #4]
 800703c:	4798      	blx	r3
 800703e:	687b      	ldr	r3, [r7, #4]
 8007040:	2200      	movs	r2, #0
 8007042:	765a      	strb	r2, [r3, #25]
 8007044:	4815      	ldr	r0, [pc, #84]	; (800709c <USBH_HandleControl+0x2fc>)
 8007046:	f000 fedb 	bl	8007e00 <iprintf>
 800704a:	4815      	ldr	r0, [pc, #84]	; (80070a0 <USBH_HandleControl+0x300>)
 800704c:	f000 fed8 	bl	8007e00 <iprintf>
 8007050:	200a      	movs	r0, #10
 8007052:	f000 feed 	bl	8007e30 <putchar>
 8007056:	687b      	ldr	r3, [r7, #4]
 8007058:	795b      	ldrb	r3, [r3, #5]
 800705a:	4619      	mov	r1, r3
 800705c:	6878      	ldr	r0, [r7, #4]
 800705e:	f000 f8ec 	bl	800723a <USBH_FreePipe>
 8007062:	687b      	ldr	r3, [r7, #4]
 8007064:	791b      	ldrb	r3, [r3, #4]
 8007066:	4619      	mov	r1, r3
 8007068:	6878      	ldr	r0, [r7, #4]
 800706a:	f000 f8e6 	bl	800723a <USBH_FreePipe>
 800706e:	687b      	ldr	r3, [r7, #4]
 8007070:	2200      	movs	r2, #0
 8007072:	701a      	strb	r2, [r3, #0]
 8007074:	2302      	movs	r3, #2
 8007076:	73fb      	strb	r3, [r7, #15]
 8007078:	e00a      	b.n	8007090 <USBH_HandleControl+0x2f0>
 800707a:	bf00      	nop
 800707c:	e008      	b.n	8007090 <USBH_HandleControl+0x2f0>
 800707e:	bf00      	nop
 8007080:	e006      	b.n	8007090 <USBH_HandleControl+0x2f0>
 8007082:	bf00      	nop
 8007084:	e004      	b.n	8007090 <USBH_HandleControl+0x2f0>
 8007086:	bf00      	nop
 8007088:	e002      	b.n	8007090 <USBH_HandleControl+0x2f0>
 800708a:	bf00      	nop
 800708c:	e000      	b.n	8007090 <USBH_HandleControl+0x2f0>
 800708e:	bf00      	nop
 8007090:	7bfb      	ldrb	r3, [r7, #15]
 8007092:	4618      	mov	r0, r3
 8007094:	3710      	adds	r7, #16
 8007096:	46bd      	mov	sp, r7
 8007098:	bd80      	pop	{r7, pc}
 800709a:	bf00      	nop
 800709c:	080091bc 	.word	0x080091bc
 80070a0:	080091c4 	.word	0x080091c4

080070a4 <USBH_CtlSendSetup>:
 80070a4:	b580      	push	{r7, lr}
 80070a6:	b088      	sub	sp, #32
 80070a8:	af04      	add	r7, sp, #16
 80070aa:	60f8      	str	r0, [r7, #12]
 80070ac:	60b9      	str	r1, [r7, #8]
 80070ae:	4613      	mov	r3, r2
 80070b0:	71fb      	strb	r3, [r7, #7]
 80070b2:	79f9      	ldrb	r1, [r7, #7]
 80070b4:	2300      	movs	r3, #0
 80070b6:	9303      	str	r3, [sp, #12]
 80070b8:	2308      	movs	r3, #8
 80070ba:	9302      	str	r3, [sp, #8]
 80070bc:	68bb      	ldr	r3, [r7, #8]
 80070be:	9301      	str	r3, [sp, #4]
 80070c0:	2300      	movs	r3, #0
 80070c2:	9300      	str	r3, [sp, #0]
 80070c4:	2300      	movs	r3, #0
 80070c6:	2200      	movs	r2, #0
 80070c8:	68f8      	ldr	r0, [r7, #12]
 80070ca:	f000 fb10 	bl	80076ee <USBH_LL_SubmitURB>
 80070ce:	2300      	movs	r3, #0
 80070d0:	4618      	mov	r0, r3
 80070d2:	3710      	adds	r7, #16
 80070d4:	46bd      	mov	sp, r7
 80070d6:	bd80      	pop	{r7, pc}

080070d8 <USBH_CtlSendData>:
 80070d8:	b580      	push	{r7, lr}
 80070da:	b088      	sub	sp, #32
 80070dc:	af04      	add	r7, sp, #16
 80070de:	60f8      	str	r0, [r7, #12]
 80070e0:	60b9      	str	r1, [r7, #8]
 80070e2:	4611      	mov	r1, r2
 80070e4:	461a      	mov	r2, r3
 80070e6:	460b      	mov	r3, r1
 80070e8:	80fb      	strh	r3, [r7, #6]
 80070ea:	4613      	mov	r3, r2
 80070ec:	717b      	strb	r3, [r7, #5]
 80070ee:	68fb      	ldr	r3, [r7, #12]
 80070f0:	f893 331d 	ldrb.w	r3, [r3, #797]	; 0x31d
 80070f4:	2b00      	cmp	r3, #0
 80070f6:	d001      	beq.n	80070fc <USBH_CtlSendData+0x24>
 80070f8:	2300      	movs	r3, #0
 80070fa:	763b      	strb	r3, [r7, #24]
 80070fc:	7979      	ldrb	r1, [r7, #5]
 80070fe:	7e3b      	ldrb	r3, [r7, #24]
 8007100:	9303      	str	r3, [sp, #12]
 8007102:	88fb      	ldrh	r3, [r7, #6]
 8007104:	9302      	str	r3, [sp, #8]
 8007106:	68bb      	ldr	r3, [r7, #8]
 8007108:	9301      	str	r3, [sp, #4]
 800710a:	2301      	movs	r3, #1
 800710c:	9300      	str	r3, [sp, #0]
 800710e:	2300      	movs	r3, #0
 8007110:	2200      	movs	r2, #0
 8007112:	68f8      	ldr	r0, [r7, #12]
 8007114:	f000 faeb 	bl	80076ee <USBH_LL_SubmitURB>
 8007118:	2300      	movs	r3, #0
 800711a:	4618      	mov	r0, r3
 800711c:	3710      	adds	r7, #16
 800711e:	46bd      	mov	sp, r7
 8007120:	bd80      	pop	{r7, pc}

08007122 <USBH_CtlReceiveData>:
 8007122:	b580      	push	{r7, lr}
 8007124:	b088      	sub	sp, #32
 8007126:	af04      	add	r7, sp, #16
 8007128:	60f8      	str	r0, [r7, #12]
 800712a:	60b9      	str	r1, [r7, #8]
 800712c:	4611      	mov	r1, r2
 800712e:	461a      	mov	r2, r3
 8007130:	460b      	mov	r3, r1
 8007132:	80fb      	strh	r3, [r7, #6]
 8007134:	4613      	mov	r3, r2
 8007136:	717b      	strb	r3, [r7, #5]
 8007138:	7979      	ldrb	r1, [r7, #5]
 800713a:	2300      	movs	r3, #0
 800713c:	9303      	str	r3, [sp, #12]
 800713e:	88fb      	ldrh	r3, [r7, #6]
 8007140:	9302      	str	r3, [sp, #8]
 8007142:	68bb      	ldr	r3, [r7, #8]
 8007144:	9301      	str	r3, [sp, #4]
 8007146:	2301      	movs	r3, #1
 8007148:	9300      	str	r3, [sp, #0]
 800714a:	2300      	movs	r3, #0
 800714c:	2201      	movs	r2, #1
 800714e:	68f8      	ldr	r0, [r7, #12]
 8007150:	f000 facd 	bl	80076ee <USBH_LL_SubmitURB>
 8007154:	2300      	movs	r3, #0
 8007156:	4618      	mov	r0, r3
 8007158:	3710      	adds	r7, #16
 800715a:	46bd      	mov	sp, r7
 800715c:	bd80      	pop	{r7, pc}

0800715e <USBH_InterruptReceiveData>:
 800715e:	b580      	push	{r7, lr}
 8007160:	b088      	sub	sp, #32
 8007162:	af04      	add	r7, sp, #16
 8007164:	60f8      	str	r0, [r7, #12]
 8007166:	60b9      	str	r1, [r7, #8]
 8007168:	4611      	mov	r1, r2
 800716a:	461a      	mov	r2, r3
 800716c:	460b      	mov	r3, r1
 800716e:	71fb      	strb	r3, [r7, #7]
 8007170:	4613      	mov	r3, r2
 8007172:	71bb      	strb	r3, [r7, #6]
 8007174:	79fb      	ldrb	r3, [r7, #7]
 8007176:	b29b      	uxth	r3, r3
 8007178:	79b9      	ldrb	r1, [r7, #6]
 800717a:	2200      	movs	r2, #0
 800717c:	9203      	str	r2, [sp, #12]
 800717e:	9302      	str	r3, [sp, #8]
 8007180:	68bb      	ldr	r3, [r7, #8]
 8007182:	9301      	str	r3, [sp, #4]
 8007184:	2301      	movs	r3, #1
 8007186:	9300      	str	r3, [sp, #0]
 8007188:	2303      	movs	r3, #3
 800718a:	2201      	movs	r2, #1
 800718c:	68f8      	ldr	r0, [r7, #12]
 800718e:	f000 faae 	bl	80076ee <USBH_LL_SubmitURB>
 8007192:	2300      	movs	r3, #0
 8007194:	4618      	mov	r0, r3
 8007196:	3710      	adds	r7, #16
 8007198:	46bd      	mov	sp, r7
 800719a:	bd80      	pop	{r7, pc}

0800719c <USBH_OpenPipe>:
 800719c:	b580      	push	{r7, lr}
 800719e:	b086      	sub	sp, #24
 80071a0:	af04      	add	r7, sp, #16
 80071a2:	6078      	str	r0, [r7, #4]
 80071a4:	4608      	mov	r0, r1
 80071a6:	4611      	mov	r1, r2
 80071a8:	461a      	mov	r2, r3
 80071aa:	4603      	mov	r3, r0
 80071ac:	70fb      	strb	r3, [r7, #3]
 80071ae:	460b      	mov	r3, r1
 80071b0:	70bb      	strb	r3, [r7, #2]
 80071b2:	4613      	mov	r3, r2
 80071b4:	707b      	strb	r3, [r7, #1]
 80071b6:	7878      	ldrb	r0, [r7, #1]
 80071b8:	78ba      	ldrb	r2, [r7, #2]
 80071ba:	78f9      	ldrb	r1, [r7, #3]
 80071bc:	8b3b      	ldrh	r3, [r7, #24]
 80071be:	9302      	str	r3, [sp, #8]
 80071c0:	7d3b      	ldrb	r3, [r7, #20]
 80071c2:	9301      	str	r3, [sp, #4]
 80071c4:	7c3b      	ldrb	r3, [r7, #16]
 80071c6:	9300      	str	r3, [sp, #0]
 80071c8:	4603      	mov	r3, r0
 80071ca:	6878      	ldr	r0, [r7, #4]
 80071cc:	f000 fa41 	bl	8007652 <USBH_LL_OpenPipe>
 80071d0:	2300      	movs	r3, #0
 80071d2:	4618      	mov	r0, r3
 80071d4:	3708      	adds	r7, #8
 80071d6:	46bd      	mov	sp, r7
 80071d8:	bd80      	pop	{r7, pc}

080071da <USBH_ClosePipe>:
 80071da:	b580      	push	{r7, lr}
 80071dc:	b082      	sub	sp, #8
 80071de:	af00      	add	r7, sp, #0
 80071e0:	6078      	str	r0, [r7, #4]
 80071e2:	460b      	mov	r3, r1
 80071e4:	70fb      	strb	r3, [r7, #3]
 80071e6:	78fb      	ldrb	r3, [r7, #3]
 80071e8:	4619      	mov	r1, r3
 80071ea:	6878      	ldr	r0, [r7, #4]
 80071ec:	f000 fa60 	bl	80076b0 <USBH_LL_ClosePipe>
 80071f0:	2300      	movs	r3, #0
 80071f2:	4618      	mov	r0, r3
 80071f4:	3708      	adds	r7, #8
 80071f6:	46bd      	mov	sp, r7
 80071f8:	bd80      	pop	{r7, pc}

080071fa <USBH_AllocPipe>:
 80071fa:	b580      	push	{r7, lr}
 80071fc:	b084      	sub	sp, #16
 80071fe:	af00      	add	r7, sp, #0
 8007200:	6078      	str	r0, [r7, #4]
 8007202:	460b      	mov	r3, r1
 8007204:	70fb      	strb	r3, [r7, #3]
 8007206:	6878      	ldr	r0, [r7, #4]
 8007208:	f000 f833 	bl	8007272 <USBH_GetFreePipe>
 800720c:	4603      	mov	r3, r0
 800720e:	81fb      	strh	r3, [r7, #14]
 8007210:	89fb      	ldrh	r3, [r7, #14]
 8007212:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8007216:	4293      	cmp	r3, r2
 8007218:	d009      	beq.n	800722e <USBH_AllocPipe+0x34>
 800721a:	78fb      	ldrb	r3, [r7, #3]
 800721c:	89fa      	ldrh	r2, [r7, #14]
 800721e:	f002 020f 	and.w	r2, r2, #15
 8007222:	f443 4100 	orr.w	r1, r3, #32768	; 0x8000
 8007226:	687b      	ldr	r3, [r7, #4]
 8007228:	32da      	adds	r2, #218	; 0xda
 800722a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800722e:	89fb      	ldrh	r3, [r7, #14]
 8007230:	b2db      	uxtb	r3, r3
 8007232:	4618      	mov	r0, r3
 8007234:	3710      	adds	r7, #16
 8007236:	46bd      	mov	sp, r7
 8007238:	bd80      	pop	{r7, pc}

0800723a <USBH_FreePipe>:
 800723a:	b480      	push	{r7}
 800723c:	b083      	sub	sp, #12
 800723e:	af00      	add	r7, sp, #0
 8007240:	6078      	str	r0, [r7, #4]
 8007242:	460b      	mov	r3, r1
 8007244:	70fb      	strb	r3, [r7, #3]
 8007246:	78fb      	ldrb	r3, [r7, #3]
 8007248:	2b0a      	cmp	r3, #10
 800724a:	d80b      	bhi.n	8007264 <USBH_FreePipe+0x2a>
 800724c:	78fa      	ldrb	r2, [r7, #3]
 800724e:	687b      	ldr	r3, [r7, #4]
 8007250:	32da      	adds	r2, #218	; 0xda
 8007252:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8007256:	78fa      	ldrb	r2, [r7, #3]
 8007258:	f3c3 010e 	ubfx	r1, r3, #0, #15
 800725c:	687b      	ldr	r3, [r7, #4]
 800725e:	32da      	adds	r2, #218	; 0xda
 8007260:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8007264:	2300      	movs	r3, #0
 8007266:	4618      	mov	r0, r3
 8007268:	370c      	adds	r7, #12
 800726a:	46bd      	mov	sp, r7
 800726c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007270:	4770      	bx	lr

08007272 <USBH_GetFreePipe>:
 8007272:	b480      	push	{r7}
 8007274:	b085      	sub	sp, #20
 8007276:	af00      	add	r7, sp, #0
 8007278:	6078      	str	r0, [r7, #4]
 800727a:	2300      	movs	r3, #0
 800727c:	73fb      	strb	r3, [r7, #15]
 800727e:	2300      	movs	r3, #0
 8007280:	73fb      	strb	r3, [r7, #15]
 8007282:	e00e      	b.n	80072a2 <USBH_GetFreePipe+0x30>
 8007284:	7bfa      	ldrb	r2, [r7, #15]
 8007286:	687b      	ldr	r3, [r7, #4]
 8007288:	32da      	adds	r2, #218	; 0xda
 800728a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800728e:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8007292:	2b00      	cmp	r3, #0
 8007294:	d102      	bne.n	800729c <USBH_GetFreePipe+0x2a>
 8007296:	7bfb      	ldrb	r3, [r7, #15]
 8007298:	b29b      	uxth	r3, r3
 800729a:	e007      	b.n	80072ac <USBH_GetFreePipe+0x3a>
 800729c:	7bfb      	ldrb	r3, [r7, #15]
 800729e:	3301      	adds	r3, #1
 80072a0:	73fb      	strb	r3, [r7, #15]
 80072a2:	7bfb      	ldrb	r3, [r7, #15]
 80072a4:	2b0a      	cmp	r3, #10
 80072a6:	d9ed      	bls.n	8007284 <USBH_GetFreePipe+0x12>
 80072a8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80072ac:	4618      	mov	r0, r3
 80072ae:	3714      	adds	r7, #20
 80072b0:	46bd      	mov	sp, r7
 80072b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80072b6:	4770      	bx	lr

080072b8 <MX_USB_HOST_Init>:
/**
  * Init USB host library, add supported class and start the library
  * @retval None
  */
void MX_USB_HOST_Init(void)
{
 80072b8:	b580      	push	{r7, lr}
 80072ba:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USB_HOST_Init_PreTreatment */

  /* USER CODE END USB_HOST_Init_PreTreatment */

  /* Init host Library, add supported class and start the library. */
  if (USBH_Init(&hUsbHostFS, USBH_UserProcess, HOST_FS) != USBH_OK)
 80072bc:	2201      	movs	r2, #1
 80072be:	490e      	ldr	r1, [pc, #56]	; (80072f8 <MX_USB_HOST_Init+0x40>)
 80072c0:	480e      	ldr	r0, [pc, #56]	; (80072fc <MX_USB_HOST_Init+0x44>)
 80072c2:	f7fe fafb 	bl	80058bc <USBH_Init>
 80072c6:	4603      	mov	r3, r0
 80072c8:	2b00      	cmp	r3, #0
 80072ca:	d001      	beq.n	80072d0 <MX_USB_HOST_Init+0x18>
  {
    Error_Handler();
 80072cc:	f7f9 fa64 	bl	8000798 <Error_Handler>
  }
  if (USBH_RegisterClass(&hUsbHostFS, USBH_HID_CLASS) != USBH_OK)
 80072d0:	490b      	ldr	r1, [pc, #44]	; (8007300 <MX_USB_HOST_Init+0x48>)
 80072d2:	480a      	ldr	r0, [pc, #40]	; (80072fc <MX_USB_HOST_Init+0x44>)
 80072d4:	f7fe fb8e 	bl	80059f4 <USBH_RegisterClass>
 80072d8:	4603      	mov	r3, r0
 80072da:	2b00      	cmp	r3, #0
 80072dc:	d001      	beq.n	80072e2 <MX_USB_HOST_Init+0x2a>
  {
    Error_Handler();
 80072de:	f7f9 fa5b 	bl	8000798 <Error_Handler>
  }
  if (USBH_Start(&hUsbHostFS) != USBH_OK)
 80072e2:	4806      	ldr	r0, [pc, #24]	; (80072fc <MX_USB_HOST_Init+0x44>)
 80072e4:	f7fe fc76 	bl	8005bd4 <USBH_Start>
 80072e8:	4603      	mov	r3, r0
 80072ea:	2b00      	cmp	r3, #0
 80072ec:	d001      	beq.n	80072f2 <MX_USB_HOST_Init+0x3a>
  {
    Error_Handler();
 80072ee:	f7f9 fa53 	bl	8000798 <Error_Handler>
  }
  /* USER CODE BEGIN USB_HOST_Init_PostTreatment */

  /* USER CODE END USB_HOST_Init_PostTreatment */
}
 80072f2:	bf00      	nop
 80072f4:	bd80      	pop	{r7, pc}
 80072f6:	bf00      	nop
 80072f8:	08007319 	.word	0x08007319
 80072fc:	200001a4 	.word	0x200001a4
 8007300:	2000000c 	.word	0x2000000c

08007304 <MX_USB_HOST_Process>:

/*
 * Background task
 */
void MX_USB_HOST_Process(void)
{
 8007304:	b580      	push	{r7, lr}
 8007306:	af00      	add	r7, sp, #0
  /* USB Host Background task */
  USBH_Process(&hUsbHostFS);
 8007308:	4802      	ldr	r0, [pc, #8]	; (8007314 <MX_USB_HOST_Process+0x10>)
 800730a:	f7fe fc73 	bl	8005bf4 <USBH_Process>
}
 800730e:	bf00      	nop
 8007310:	bd80      	pop	{r7, pc}
 8007312:	bf00      	nop
 8007314:	200001a4 	.word	0x200001a4

08007318 <USBH_UserProcess>:
/*
 * user callback definition
 */
static void USBH_UserProcess  (USBH_HandleTypeDef *phost, uint8_t id)
{
 8007318:	b480      	push	{r7}
 800731a:	b083      	sub	sp, #12
 800731c:	af00      	add	r7, sp, #0
 800731e:	6078      	str	r0, [r7, #4]
 8007320:	460b      	mov	r3, r1
 8007322:	70fb      	strb	r3, [r7, #3]
  /* USER CODE BEGIN CALL_BACK_1 */
  switch(id)
 8007324:	78fb      	ldrb	r3, [r7, #3]
 8007326:	3b01      	subs	r3, #1
 8007328:	2b04      	cmp	r3, #4
 800732a:	d819      	bhi.n	8007360 <USBH_UserProcess+0x48>
 800732c:	a201      	add	r2, pc, #4	; (adr r2, 8007334 <USBH_UserProcess+0x1c>)
 800732e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007332:	bf00      	nop
 8007334:	08007361 	.word	0x08007361
 8007338:	08007351 	.word	0x08007351
 800733c:	08007361 	.word	0x08007361
 8007340:	08007359 	.word	0x08007359
 8007344:	08007349 	.word	0x08007349
  {
  case HOST_USER_SELECT_CONFIGURATION:
  break;

  case HOST_USER_DISCONNECTION:
  Appli_state = APPLICATION_DISCONNECT;
 8007348:	4b09      	ldr	r3, [pc, #36]	; (8007370 <USBH_UserProcess+0x58>)
 800734a:	2203      	movs	r2, #3
 800734c:	701a      	strb	r2, [r3, #0]
  break;
 800734e:	e008      	b.n	8007362 <USBH_UserProcess+0x4a>

  case HOST_USER_CLASS_ACTIVE:
  Appli_state = APPLICATION_READY;
 8007350:	4b07      	ldr	r3, [pc, #28]	; (8007370 <USBH_UserProcess+0x58>)
 8007352:	2202      	movs	r2, #2
 8007354:	701a      	strb	r2, [r3, #0]
  break;
 8007356:	e004      	b.n	8007362 <USBH_UserProcess+0x4a>

  case HOST_USER_CONNECTION:
  Appli_state = APPLICATION_START;
 8007358:	4b05      	ldr	r3, [pc, #20]	; (8007370 <USBH_UserProcess+0x58>)
 800735a:	2201      	movs	r2, #1
 800735c:	701a      	strb	r2, [r3, #0]
  break;
 800735e:	e000      	b.n	8007362 <USBH_UserProcess+0x4a>

  default:
  break;
 8007360:	bf00      	nop
  }
  /* USER CODE END CALL_BACK_1 */
}
 8007362:	bf00      	nop
 8007364:	370c      	adds	r7, #12
 8007366:	46bd      	mov	sp, r7
 8007368:	f85d 7b04 	ldr.w	r7, [sp], #4
 800736c:	4770      	bx	lr
 800736e:	bf00      	nop
 8007370:	200000b0 	.word	0x200000b0

08007374 <HAL_HCD_MspInit>:
 8007374:	b580      	push	{r7, lr}
 8007376:	b08a      	sub	sp, #40	; 0x28
 8007378:	af00      	add	r7, sp, #0
 800737a:	6078      	str	r0, [r7, #4]
 800737c:	f107 0314 	add.w	r3, r7, #20
 8007380:	2200      	movs	r2, #0
 8007382:	601a      	str	r2, [r3, #0]
 8007384:	605a      	str	r2, [r3, #4]
 8007386:	609a      	str	r2, [r3, #8]
 8007388:	60da      	str	r2, [r3, #12]
 800738a:	611a      	str	r2, [r3, #16]
 800738c:	687b      	ldr	r3, [r7, #4]
 800738e:	681b      	ldr	r3, [r3, #0]
 8007390:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 8007394:	d13a      	bne.n	800740c <HAL_HCD_MspInit+0x98>
 8007396:	2300      	movs	r3, #0
 8007398:	613b      	str	r3, [r7, #16]
 800739a:	4b1e      	ldr	r3, [pc, #120]	; (8007414 <HAL_HCD_MspInit+0xa0>)
 800739c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800739e:	4a1d      	ldr	r2, [pc, #116]	; (8007414 <HAL_HCD_MspInit+0xa0>)
 80073a0:	f043 0301 	orr.w	r3, r3, #1
 80073a4:	6313      	str	r3, [r2, #48]	; 0x30
 80073a6:	4b1b      	ldr	r3, [pc, #108]	; (8007414 <HAL_HCD_MspInit+0xa0>)
 80073a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80073aa:	f003 0301 	and.w	r3, r3, #1
 80073ae:	613b      	str	r3, [r7, #16]
 80073b0:	693b      	ldr	r3, [r7, #16]
 80073b2:	f44f 53c0 	mov.w	r3, #6144	; 0x1800
 80073b6:	617b      	str	r3, [r7, #20]
 80073b8:	2302      	movs	r3, #2
 80073ba:	61bb      	str	r3, [r7, #24]
 80073bc:	2300      	movs	r3, #0
 80073be:	61fb      	str	r3, [r7, #28]
 80073c0:	2303      	movs	r3, #3
 80073c2:	623b      	str	r3, [r7, #32]
 80073c4:	230a      	movs	r3, #10
 80073c6:	627b      	str	r3, [r7, #36]	; 0x24
 80073c8:	f107 0314 	add.w	r3, r7, #20
 80073cc:	4619      	mov	r1, r3
 80073ce:	4812      	ldr	r0, [pc, #72]	; (8007418 <HAL_HCD_MspInit+0xa4>)
 80073d0:	f7f9 fdc8 	bl	8000f64 <HAL_GPIO_Init>
 80073d4:	4b0f      	ldr	r3, [pc, #60]	; (8007414 <HAL_HCD_MspInit+0xa0>)
 80073d6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80073d8:	4a0e      	ldr	r2, [pc, #56]	; (8007414 <HAL_HCD_MspInit+0xa0>)
 80073da:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80073de:	6353      	str	r3, [r2, #52]	; 0x34
 80073e0:	2300      	movs	r3, #0
 80073e2:	60fb      	str	r3, [r7, #12]
 80073e4:	4b0b      	ldr	r3, [pc, #44]	; (8007414 <HAL_HCD_MspInit+0xa0>)
 80073e6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80073e8:	4a0a      	ldr	r2, [pc, #40]	; (8007414 <HAL_HCD_MspInit+0xa0>)
 80073ea:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80073ee:	6453      	str	r3, [r2, #68]	; 0x44
 80073f0:	4b08      	ldr	r3, [pc, #32]	; (8007414 <HAL_HCD_MspInit+0xa0>)
 80073f2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80073f4:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80073f8:	60fb      	str	r3, [r7, #12]
 80073fa:	68fb      	ldr	r3, [r7, #12]
 80073fc:	2200      	movs	r2, #0
 80073fe:	2100      	movs	r1, #0
 8007400:	2043      	movs	r0, #67	; 0x43
 8007402:	f7f9 fd78 	bl	8000ef6 <HAL_NVIC_SetPriority>
 8007406:	2043      	movs	r0, #67	; 0x43
 8007408:	f7f9 fd91 	bl	8000f2e <HAL_NVIC_EnableIRQ>
 800740c:	bf00      	nop
 800740e:	3728      	adds	r7, #40	; 0x28
 8007410:	46bd      	mov	sp, r7
 8007412:	bd80      	pop	{r7, pc}
 8007414:	40023800 	.word	0x40023800
 8007418:	40020000 	.word	0x40020000

0800741c <HAL_HCD_SOF_Callback>:
 800741c:	b580      	push	{r7, lr}
 800741e:	b082      	sub	sp, #8
 8007420:	af00      	add	r7, sp, #0
 8007422:	6078      	str	r0, [r7, #4]
 8007424:	687b      	ldr	r3, [r7, #4]
 8007426:	f8d3 3300 	ldr.w	r3, [r3, #768]	; 0x300
 800742a:	4618      	mov	r0, r3
 800742c:	f7ff f903 	bl	8006636 <USBH_LL_IncTimer>
 8007430:	bf00      	nop
 8007432:	3708      	adds	r7, #8
 8007434:	46bd      	mov	sp, r7
 8007436:	bd80      	pop	{r7, pc}

08007438 <HAL_HCD_Connect_Callback>:
 8007438:	b580      	push	{r7, lr}
 800743a:	b082      	sub	sp, #8
 800743c:	af00      	add	r7, sp, #0
 800743e:	6078      	str	r0, [r7, #4]
 8007440:	687b      	ldr	r3, [r7, #4]
 8007442:	f8d3 3300 	ldr.w	r3, [r3, #768]	; 0x300
 8007446:	4618      	mov	r0, r3
 8007448:	f7ff f93b 	bl	80066c2 <USBH_LL_Connect>
 800744c:	bf00      	nop
 800744e:	3708      	adds	r7, #8
 8007450:	46bd      	mov	sp, r7
 8007452:	bd80      	pop	{r7, pc}

08007454 <HAL_HCD_Disconnect_Callback>:
 8007454:	b580      	push	{r7, lr}
 8007456:	b082      	sub	sp, #8
 8007458:	af00      	add	r7, sp, #0
 800745a:	6078      	str	r0, [r7, #4]
 800745c:	687b      	ldr	r3, [r7, #4]
 800745e:	f8d3 3300 	ldr.w	r3, [r3, #768]	; 0x300
 8007462:	4618      	mov	r0, r3
 8007464:	f7ff f944 	bl	80066f0 <USBH_LL_Disconnect>
 8007468:	bf00      	nop
 800746a:	3708      	adds	r7, #8
 800746c:	46bd      	mov	sp, r7
 800746e:	bd80      	pop	{r7, pc}

08007470 <HAL_HCD_HC_NotifyURBChange_Callback>:
 8007470:	b480      	push	{r7}
 8007472:	b083      	sub	sp, #12
 8007474:	af00      	add	r7, sp, #0
 8007476:	6078      	str	r0, [r7, #4]
 8007478:	460b      	mov	r3, r1
 800747a:	70fb      	strb	r3, [r7, #3]
 800747c:	4613      	mov	r3, r2
 800747e:	70bb      	strb	r3, [r7, #2]
 8007480:	bf00      	nop
 8007482:	370c      	adds	r7, #12
 8007484:	46bd      	mov	sp, r7
 8007486:	f85d 7b04 	ldr.w	r7, [sp], #4
 800748a:	4770      	bx	lr

0800748c <HAL_HCD_PortEnabled_Callback>:
 800748c:	b580      	push	{r7, lr}
 800748e:	b082      	sub	sp, #8
 8007490:	af00      	add	r7, sp, #0
 8007492:	6078      	str	r0, [r7, #4]
 8007494:	687b      	ldr	r3, [r7, #4]
 8007496:	f8d3 3300 	ldr.w	r3, [r3, #768]	; 0x300
 800749a:	4618      	mov	r0, r3
 800749c:	f7ff f8f5 	bl	800668a <USBH_LL_PortEnabled>
 80074a0:	bf00      	nop
 80074a2:	3708      	adds	r7, #8
 80074a4:	46bd      	mov	sp, r7
 80074a6:	bd80      	pop	{r7, pc}

080074a8 <HAL_HCD_PortDisabled_Callback>:
 80074a8:	b580      	push	{r7, lr}
 80074aa:	b082      	sub	sp, #8
 80074ac:	af00      	add	r7, sp, #0
 80074ae:	6078      	str	r0, [r7, #4]
 80074b0:	687b      	ldr	r3, [r7, #4]
 80074b2:	f8d3 3300 	ldr.w	r3, [r3, #768]	; 0x300
 80074b6:	4618      	mov	r0, r3
 80074b8:	f7ff f8f5 	bl	80066a6 <USBH_LL_PortDisabled>
 80074bc:	bf00      	nop
 80074be:	3708      	adds	r7, #8
 80074c0:	46bd      	mov	sp, r7
 80074c2:	bd80      	pop	{r7, pc}

080074c4 <USBH_LL_Init>:
 80074c4:	b580      	push	{r7, lr}
 80074c6:	b082      	sub	sp, #8
 80074c8:	af00      	add	r7, sp, #0
 80074ca:	6078      	str	r0, [r7, #4]
 80074cc:	687b      	ldr	r3, [r7, #4]
 80074ce:	f893 33b0 	ldrb.w	r3, [r3, #944]	; 0x3b0
 80074d2:	2b01      	cmp	r3, #1
 80074d4:	d12a      	bne.n	800752c <USBH_LL_Init+0x68>
 80074d6:	4a18      	ldr	r2, [pc, #96]	; (8007538 <USBH_LL_Init+0x74>)
 80074d8:	687b      	ldr	r3, [r7, #4]
 80074da:	f8c2 3300 	str.w	r3, [r2, #768]	; 0x300
 80074de:	687b      	ldr	r3, [r7, #4]
 80074e0:	4a15      	ldr	r2, [pc, #84]	; (8007538 <USBH_LL_Init+0x74>)
 80074e2:	f8c3 23b4 	str.w	r2, [r3, #948]	; 0x3b4
 80074e6:	4b14      	ldr	r3, [pc, #80]	; (8007538 <USBH_LL_Init+0x74>)
 80074e8:	f04f 42a0 	mov.w	r2, #1342177280	; 0x50000000
 80074ec:	601a      	str	r2, [r3, #0]
 80074ee:	4b12      	ldr	r3, [pc, #72]	; (8007538 <USBH_LL_Init+0x74>)
 80074f0:	2208      	movs	r2, #8
 80074f2:	609a      	str	r2, [r3, #8]
 80074f4:	4b10      	ldr	r3, [pc, #64]	; (8007538 <USBH_LL_Init+0x74>)
 80074f6:	2201      	movs	r2, #1
 80074f8:	60da      	str	r2, [r3, #12]
 80074fa:	4b0f      	ldr	r3, [pc, #60]	; (8007538 <USBH_LL_Init+0x74>)
 80074fc:	2200      	movs	r2, #0
 80074fe:	611a      	str	r2, [r3, #16]
 8007500:	4b0d      	ldr	r3, [pc, #52]	; (8007538 <USBH_LL_Init+0x74>)
 8007502:	2202      	movs	r2, #2
 8007504:	619a      	str	r2, [r3, #24]
 8007506:	4b0c      	ldr	r3, [pc, #48]	; (8007538 <USBH_LL_Init+0x74>)
 8007508:	2200      	movs	r2, #0
 800750a:	61da      	str	r2, [r3, #28]
 800750c:	480a      	ldr	r0, [pc, #40]	; (8007538 <USBH_LL_Init+0x74>)
 800750e:	f7f9 fead 	bl	800126c <HAL_HCD_Init>
 8007512:	4603      	mov	r3, r0
 8007514:	2b00      	cmp	r3, #0
 8007516:	d001      	beq.n	800751c <USBH_LL_Init+0x58>
 8007518:	f7f9 f93e 	bl	8000798 <Error_Handler>
 800751c:	4806      	ldr	r0, [pc, #24]	; (8007538 <USBH_LL_Init+0x74>)
 800751e:	f7fa fa90 	bl	8001a42 <HAL_HCD_GetCurrentFrame>
 8007522:	4603      	mov	r3, r0
 8007524:	4619      	mov	r1, r3
 8007526:	6878      	ldr	r0, [r7, #4]
 8007528:	f7ff f876 	bl	8006618 <USBH_LL_SetTimer>
 800752c:	2300      	movs	r3, #0
 800752e:	4618      	mov	r0, r3
 8007530:	3708      	adds	r7, #8
 8007532:	46bd      	mov	sp, r7
 8007534:	bd80      	pop	{r7, pc}
 8007536:	bf00      	nop
 8007538:	20000560 	.word	0x20000560

0800753c <USBH_LL_Start>:
 800753c:	b580      	push	{r7, lr}
 800753e:	b084      	sub	sp, #16
 8007540:	af00      	add	r7, sp, #0
 8007542:	6078      	str	r0, [r7, #4]
 8007544:	2300      	movs	r3, #0
 8007546:	73fb      	strb	r3, [r7, #15]
 8007548:	2300      	movs	r3, #0
 800754a:	73bb      	strb	r3, [r7, #14]
 800754c:	687b      	ldr	r3, [r7, #4]
 800754e:	f8d3 33b4 	ldr.w	r3, [r3, #948]	; 0x3b4
 8007552:	4618      	mov	r0, r3
 8007554:	f7fa f9ff 	bl	8001956 <HAL_HCD_Start>
 8007558:	4603      	mov	r3, r0
 800755a:	73fb      	strb	r3, [r7, #15]
 800755c:	7bfb      	ldrb	r3, [r7, #15]
 800755e:	4618      	mov	r0, r3
 8007560:	f000 f952 	bl	8007808 <USBH_Get_USB_Status>
 8007564:	4603      	mov	r3, r0
 8007566:	73bb      	strb	r3, [r7, #14]
 8007568:	7bbb      	ldrb	r3, [r7, #14]
 800756a:	4618      	mov	r0, r3
 800756c:	3710      	adds	r7, #16
 800756e:	46bd      	mov	sp, r7
 8007570:	bd80      	pop	{r7, pc}

08007572 <USBH_LL_Stop>:
 8007572:	b580      	push	{r7, lr}
 8007574:	b084      	sub	sp, #16
 8007576:	af00      	add	r7, sp, #0
 8007578:	6078      	str	r0, [r7, #4]
 800757a:	2300      	movs	r3, #0
 800757c:	73fb      	strb	r3, [r7, #15]
 800757e:	2300      	movs	r3, #0
 8007580:	73bb      	strb	r3, [r7, #14]
 8007582:	687b      	ldr	r3, [r7, #4]
 8007584:	f8d3 33b4 	ldr.w	r3, [r3, #948]	; 0x3b4
 8007588:	4618      	mov	r0, r3
 800758a:	f7fa fa07 	bl	800199c <HAL_HCD_Stop>
 800758e:	4603      	mov	r3, r0
 8007590:	73fb      	strb	r3, [r7, #15]
 8007592:	7bfb      	ldrb	r3, [r7, #15]
 8007594:	4618      	mov	r0, r3
 8007596:	f000 f937 	bl	8007808 <USBH_Get_USB_Status>
 800759a:	4603      	mov	r3, r0
 800759c:	73bb      	strb	r3, [r7, #14]
 800759e:	7bbb      	ldrb	r3, [r7, #14]
 80075a0:	4618      	mov	r0, r3
 80075a2:	3710      	adds	r7, #16
 80075a4:	46bd      	mov	sp, r7
 80075a6:	bd80      	pop	{r7, pc}

080075a8 <USBH_LL_GetSpeed>:
 80075a8:	b580      	push	{r7, lr}
 80075aa:	b084      	sub	sp, #16
 80075ac:	af00      	add	r7, sp, #0
 80075ae:	6078      	str	r0, [r7, #4]
 80075b0:	2301      	movs	r3, #1
 80075b2:	73fb      	strb	r3, [r7, #15]
 80075b4:	687b      	ldr	r3, [r7, #4]
 80075b6:	f8d3 33b4 	ldr.w	r3, [r3, #948]	; 0x3b4
 80075ba:	4618      	mov	r0, r3
 80075bc:	f7fa fa4f 	bl	8001a5e <HAL_HCD_GetCurrentSpeed>
 80075c0:	4603      	mov	r3, r0
 80075c2:	2b02      	cmp	r3, #2
 80075c4:	d00c      	beq.n	80075e0 <USBH_LL_GetSpeed+0x38>
 80075c6:	2b02      	cmp	r3, #2
 80075c8:	d80d      	bhi.n	80075e6 <USBH_LL_GetSpeed+0x3e>
 80075ca:	2b00      	cmp	r3, #0
 80075cc:	d002      	beq.n	80075d4 <USBH_LL_GetSpeed+0x2c>
 80075ce:	2b01      	cmp	r3, #1
 80075d0:	d003      	beq.n	80075da <USBH_LL_GetSpeed+0x32>
 80075d2:	e008      	b.n	80075e6 <USBH_LL_GetSpeed+0x3e>
 80075d4:	2300      	movs	r3, #0
 80075d6:	73fb      	strb	r3, [r7, #15]
 80075d8:	e008      	b.n	80075ec <USBH_LL_GetSpeed+0x44>
 80075da:	2301      	movs	r3, #1
 80075dc:	73fb      	strb	r3, [r7, #15]
 80075de:	e005      	b.n	80075ec <USBH_LL_GetSpeed+0x44>
 80075e0:	2302      	movs	r3, #2
 80075e2:	73fb      	strb	r3, [r7, #15]
 80075e4:	e002      	b.n	80075ec <USBH_LL_GetSpeed+0x44>
 80075e6:	2301      	movs	r3, #1
 80075e8:	73fb      	strb	r3, [r7, #15]
 80075ea:	bf00      	nop
 80075ec:	7bfb      	ldrb	r3, [r7, #15]
 80075ee:	4618      	mov	r0, r3
 80075f0:	3710      	adds	r7, #16
 80075f2:	46bd      	mov	sp, r7
 80075f4:	bd80      	pop	{r7, pc}

080075f6 <USBH_LL_ResetPort>:
 80075f6:	b580      	push	{r7, lr}
 80075f8:	b084      	sub	sp, #16
 80075fa:	af00      	add	r7, sp, #0
 80075fc:	6078      	str	r0, [r7, #4]
 80075fe:	2300      	movs	r3, #0
 8007600:	73fb      	strb	r3, [r7, #15]
 8007602:	2300      	movs	r3, #0
 8007604:	73bb      	strb	r3, [r7, #14]
 8007606:	687b      	ldr	r3, [r7, #4]
 8007608:	f8d3 33b4 	ldr.w	r3, [r3, #948]	; 0x3b4
 800760c:	4618      	mov	r0, r3
 800760e:	f7fa f9e2 	bl	80019d6 <HAL_HCD_ResetPort>
 8007612:	4603      	mov	r3, r0
 8007614:	73fb      	strb	r3, [r7, #15]
 8007616:	7bfb      	ldrb	r3, [r7, #15]
 8007618:	4618      	mov	r0, r3
 800761a:	f000 f8f5 	bl	8007808 <USBH_Get_USB_Status>
 800761e:	4603      	mov	r3, r0
 8007620:	73bb      	strb	r3, [r7, #14]
 8007622:	7bbb      	ldrb	r3, [r7, #14]
 8007624:	4618      	mov	r0, r3
 8007626:	3710      	adds	r7, #16
 8007628:	46bd      	mov	sp, r7
 800762a:	bd80      	pop	{r7, pc}

0800762c <USBH_LL_GetLastXferSize>:
 800762c:	b580      	push	{r7, lr}
 800762e:	b082      	sub	sp, #8
 8007630:	af00      	add	r7, sp, #0
 8007632:	6078      	str	r0, [r7, #4]
 8007634:	460b      	mov	r3, r1
 8007636:	70fb      	strb	r3, [r7, #3]
 8007638:	687b      	ldr	r3, [r7, #4]
 800763a:	f8d3 33b4 	ldr.w	r3, [r3, #948]	; 0x3b4
 800763e:	78fa      	ldrb	r2, [r7, #3]
 8007640:	4611      	mov	r1, r2
 8007642:	4618      	mov	r0, r3
 8007644:	f7fa f9e9 	bl	8001a1a <HAL_HCD_HC_GetXferCount>
 8007648:	4603      	mov	r3, r0
 800764a:	4618      	mov	r0, r3
 800764c:	3708      	adds	r7, #8
 800764e:	46bd      	mov	sp, r7
 8007650:	bd80      	pop	{r7, pc}

08007652 <USBH_LL_OpenPipe>:
 8007652:	b590      	push	{r4, r7, lr}
 8007654:	b089      	sub	sp, #36	; 0x24
 8007656:	af04      	add	r7, sp, #16
 8007658:	6078      	str	r0, [r7, #4]
 800765a:	4608      	mov	r0, r1
 800765c:	4611      	mov	r1, r2
 800765e:	461a      	mov	r2, r3
 8007660:	4603      	mov	r3, r0
 8007662:	70fb      	strb	r3, [r7, #3]
 8007664:	460b      	mov	r3, r1
 8007666:	70bb      	strb	r3, [r7, #2]
 8007668:	4613      	mov	r3, r2
 800766a:	707b      	strb	r3, [r7, #1]
 800766c:	2300      	movs	r3, #0
 800766e:	73fb      	strb	r3, [r7, #15]
 8007670:	2300      	movs	r3, #0
 8007672:	73bb      	strb	r3, [r7, #14]
 8007674:	687b      	ldr	r3, [r7, #4]
 8007676:	f8d3 03b4 	ldr.w	r0, [r3, #948]	; 0x3b4
 800767a:	787c      	ldrb	r4, [r7, #1]
 800767c:	78ba      	ldrb	r2, [r7, #2]
 800767e:	78f9      	ldrb	r1, [r7, #3]
 8007680:	8d3b      	ldrh	r3, [r7, #40]	; 0x28
 8007682:	9302      	str	r3, [sp, #8]
 8007684:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 8007688:	9301      	str	r3, [sp, #4]
 800768a:	f897 3020 	ldrb.w	r3, [r7, #32]
 800768e:	9300      	str	r3, [sp, #0]
 8007690:	4623      	mov	r3, r4
 8007692:	f7f9 fe4d 	bl	8001330 <HAL_HCD_HC_Init>
 8007696:	4603      	mov	r3, r0
 8007698:	73fb      	strb	r3, [r7, #15]
 800769a:	7bfb      	ldrb	r3, [r7, #15]
 800769c:	4618      	mov	r0, r3
 800769e:	f000 f8b3 	bl	8007808 <USBH_Get_USB_Status>
 80076a2:	4603      	mov	r3, r0
 80076a4:	73bb      	strb	r3, [r7, #14]
 80076a6:	7bbb      	ldrb	r3, [r7, #14]
 80076a8:	4618      	mov	r0, r3
 80076aa:	3714      	adds	r7, #20
 80076ac:	46bd      	mov	sp, r7
 80076ae:	bd90      	pop	{r4, r7, pc}

080076b0 <USBH_LL_ClosePipe>:
 80076b0:	b580      	push	{r7, lr}
 80076b2:	b084      	sub	sp, #16
 80076b4:	af00      	add	r7, sp, #0
 80076b6:	6078      	str	r0, [r7, #4]
 80076b8:	460b      	mov	r3, r1
 80076ba:	70fb      	strb	r3, [r7, #3]
 80076bc:	2300      	movs	r3, #0
 80076be:	73fb      	strb	r3, [r7, #15]
 80076c0:	2300      	movs	r3, #0
 80076c2:	73bb      	strb	r3, [r7, #14]
 80076c4:	687b      	ldr	r3, [r7, #4]
 80076c6:	f8d3 33b4 	ldr.w	r3, [r3, #948]	; 0x3b4
 80076ca:	78fa      	ldrb	r2, [r7, #3]
 80076cc:	4611      	mov	r1, r2
 80076ce:	4618      	mov	r0, r3
 80076d0:	f7f9 febd 	bl	800144e <HAL_HCD_HC_Halt>
 80076d4:	4603      	mov	r3, r0
 80076d6:	73fb      	strb	r3, [r7, #15]
 80076d8:	7bfb      	ldrb	r3, [r7, #15]
 80076da:	4618      	mov	r0, r3
 80076dc:	f000 f894 	bl	8007808 <USBH_Get_USB_Status>
 80076e0:	4603      	mov	r3, r0
 80076e2:	73bb      	strb	r3, [r7, #14]
 80076e4:	7bbb      	ldrb	r3, [r7, #14]
 80076e6:	4618      	mov	r0, r3
 80076e8:	3710      	adds	r7, #16
 80076ea:	46bd      	mov	sp, r7
 80076ec:	bd80      	pop	{r7, pc}

080076ee <USBH_LL_SubmitURB>:
 80076ee:	b590      	push	{r4, r7, lr}
 80076f0:	b089      	sub	sp, #36	; 0x24
 80076f2:	af04      	add	r7, sp, #16
 80076f4:	6078      	str	r0, [r7, #4]
 80076f6:	4608      	mov	r0, r1
 80076f8:	4611      	mov	r1, r2
 80076fa:	461a      	mov	r2, r3
 80076fc:	4603      	mov	r3, r0
 80076fe:	70fb      	strb	r3, [r7, #3]
 8007700:	460b      	mov	r3, r1
 8007702:	70bb      	strb	r3, [r7, #2]
 8007704:	4613      	mov	r3, r2
 8007706:	707b      	strb	r3, [r7, #1]
 8007708:	2300      	movs	r3, #0
 800770a:	73fb      	strb	r3, [r7, #15]
 800770c:	2300      	movs	r3, #0
 800770e:	73bb      	strb	r3, [r7, #14]
 8007710:	687b      	ldr	r3, [r7, #4]
 8007712:	f8d3 03b4 	ldr.w	r0, [r3, #948]	; 0x3b4
 8007716:	787c      	ldrb	r4, [r7, #1]
 8007718:	78ba      	ldrb	r2, [r7, #2]
 800771a:	78f9      	ldrb	r1, [r7, #3]
 800771c:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 8007720:	9303      	str	r3, [sp, #12]
 8007722:	8d3b      	ldrh	r3, [r7, #40]	; 0x28
 8007724:	9302      	str	r3, [sp, #8]
 8007726:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007728:	9301      	str	r3, [sp, #4]
 800772a:	f897 3020 	ldrb.w	r3, [r7, #32]
 800772e:	9300      	str	r3, [sp, #0]
 8007730:	4623      	mov	r3, r4
 8007732:	f7f9 feaf 	bl	8001494 <HAL_HCD_HC_SubmitRequest>
 8007736:	4603      	mov	r3, r0
 8007738:	73fb      	strb	r3, [r7, #15]
 800773a:	7bfb      	ldrb	r3, [r7, #15]
 800773c:	4618      	mov	r0, r3
 800773e:	f000 f863 	bl	8007808 <USBH_Get_USB_Status>
 8007742:	4603      	mov	r3, r0
 8007744:	73bb      	strb	r3, [r7, #14]
 8007746:	7bbb      	ldrb	r3, [r7, #14]
 8007748:	4618      	mov	r0, r3
 800774a:	3714      	adds	r7, #20
 800774c:	46bd      	mov	sp, r7
 800774e:	bd90      	pop	{r4, r7, pc}

08007750 <USBH_LL_GetURBState>:
 8007750:	b580      	push	{r7, lr}
 8007752:	b082      	sub	sp, #8
 8007754:	af00      	add	r7, sp, #0
 8007756:	6078      	str	r0, [r7, #4]
 8007758:	460b      	mov	r3, r1
 800775a:	70fb      	strb	r3, [r7, #3]
 800775c:	687b      	ldr	r3, [r7, #4]
 800775e:	f8d3 33b4 	ldr.w	r3, [r3, #948]	; 0x3b4
 8007762:	78fa      	ldrb	r2, [r7, #3]
 8007764:	4611      	mov	r1, r2
 8007766:	4618      	mov	r0, r3
 8007768:	f7fa f943 	bl	80019f2 <HAL_HCD_HC_GetURBState>
 800776c:	4603      	mov	r3, r0
 800776e:	4618      	mov	r0, r3
 8007770:	3708      	adds	r7, #8
 8007772:	46bd      	mov	sp, r7
 8007774:	bd80      	pop	{r7, pc}

08007776 <USBH_LL_DriverVBUS>:
 8007776:	b580      	push	{r7, lr}
 8007778:	b082      	sub	sp, #8
 800777a:	af00      	add	r7, sp, #0
 800777c:	6078      	str	r0, [r7, #4]
 800777e:	460b      	mov	r3, r1
 8007780:	70fb      	strb	r3, [r7, #3]
 8007782:	20c8      	movs	r0, #200	; 0xc8
 8007784:	f7f9 fab8 	bl	8000cf8 <HAL_Delay>
 8007788:	2300      	movs	r3, #0
 800778a:	4618      	mov	r0, r3
 800778c:	3708      	adds	r7, #8
 800778e:	46bd      	mov	sp, r7
 8007790:	bd80      	pop	{r7, pc}

08007792 <USBH_LL_SetToggle>:
 8007792:	b480      	push	{r7}
 8007794:	b085      	sub	sp, #20
 8007796:	af00      	add	r7, sp, #0
 8007798:	6078      	str	r0, [r7, #4]
 800779a:	460b      	mov	r3, r1
 800779c:	70fb      	strb	r3, [r7, #3]
 800779e:	4613      	mov	r3, r2
 80077a0:	70bb      	strb	r3, [r7, #2]
 80077a2:	687b      	ldr	r3, [r7, #4]
 80077a4:	f8d3 33b4 	ldr.w	r3, [r3, #948]	; 0x3b4
 80077a8:	60fb      	str	r3, [r7, #12]
 80077aa:	78fb      	ldrb	r3, [r7, #3]
 80077ac:	68fa      	ldr	r2, [r7, #12]
 80077ae:	212c      	movs	r1, #44	; 0x2c
 80077b0:	fb01 f303 	mul.w	r3, r1, r3
 80077b4:	4413      	add	r3, r2
 80077b6:	333b      	adds	r3, #59	; 0x3b
 80077b8:	781b      	ldrb	r3, [r3, #0]
 80077ba:	2b00      	cmp	r3, #0
 80077bc:	d009      	beq.n	80077d2 <USBH_LL_SetToggle+0x40>
 80077be:	78fb      	ldrb	r3, [r7, #3]
 80077c0:	68fa      	ldr	r2, [r7, #12]
 80077c2:	212c      	movs	r1, #44	; 0x2c
 80077c4:	fb01 f303 	mul.w	r3, r1, r3
 80077c8:	4413      	add	r3, r2
 80077ca:	3354      	adds	r3, #84	; 0x54
 80077cc:	78ba      	ldrb	r2, [r7, #2]
 80077ce:	701a      	strb	r2, [r3, #0]
 80077d0:	e008      	b.n	80077e4 <USBH_LL_SetToggle+0x52>
 80077d2:	78fb      	ldrb	r3, [r7, #3]
 80077d4:	68fa      	ldr	r2, [r7, #12]
 80077d6:	212c      	movs	r1, #44	; 0x2c
 80077d8:	fb01 f303 	mul.w	r3, r1, r3
 80077dc:	4413      	add	r3, r2
 80077de:	3355      	adds	r3, #85	; 0x55
 80077e0:	78ba      	ldrb	r2, [r7, #2]
 80077e2:	701a      	strb	r2, [r3, #0]
 80077e4:	2300      	movs	r3, #0
 80077e6:	4618      	mov	r0, r3
 80077e8:	3714      	adds	r7, #20
 80077ea:	46bd      	mov	sp, r7
 80077ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80077f0:	4770      	bx	lr

080077f2 <USBH_Delay>:
 80077f2:	b580      	push	{r7, lr}
 80077f4:	b082      	sub	sp, #8
 80077f6:	af00      	add	r7, sp, #0
 80077f8:	6078      	str	r0, [r7, #4]
 80077fa:	6878      	ldr	r0, [r7, #4]
 80077fc:	f7f9 fa7c 	bl	8000cf8 <HAL_Delay>
 8007800:	bf00      	nop
 8007802:	3708      	adds	r7, #8
 8007804:	46bd      	mov	sp, r7
 8007806:	bd80      	pop	{r7, pc}

08007808 <USBH_Get_USB_Status>:
 8007808:	b480      	push	{r7}
 800780a:	b085      	sub	sp, #20
 800780c:	af00      	add	r7, sp, #0
 800780e:	4603      	mov	r3, r0
 8007810:	71fb      	strb	r3, [r7, #7]
 8007812:	2300      	movs	r3, #0
 8007814:	73fb      	strb	r3, [r7, #15]
 8007816:	79fb      	ldrb	r3, [r7, #7]
 8007818:	2b03      	cmp	r3, #3
 800781a:	d817      	bhi.n	800784c <USBH_Get_USB_Status+0x44>
 800781c:	a201      	add	r2, pc, #4	; (adr r2, 8007824 <USBH_Get_USB_Status+0x1c>)
 800781e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007822:	bf00      	nop
 8007824:	08007835 	.word	0x08007835
 8007828:	0800783b 	.word	0x0800783b
 800782c:	08007841 	.word	0x08007841
 8007830:	08007847 	.word	0x08007847
 8007834:	2300      	movs	r3, #0
 8007836:	73fb      	strb	r3, [r7, #15]
 8007838:	e00b      	b.n	8007852 <USBH_Get_USB_Status+0x4a>
 800783a:	2302      	movs	r3, #2
 800783c:	73fb      	strb	r3, [r7, #15]
 800783e:	e008      	b.n	8007852 <USBH_Get_USB_Status+0x4a>
 8007840:	2301      	movs	r3, #1
 8007842:	73fb      	strb	r3, [r7, #15]
 8007844:	e005      	b.n	8007852 <USBH_Get_USB_Status+0x4a>
 8007846:	2302      	movs	r3, #2
 8007848:	73fb      	strb	r3, [r7, #15]
 800784a:	e002      	b.n	8007852 <USBH_Get_USB_Status+0x4a>
 800784c:	2302      	movs	r3, #2
 800784e:	73fb      	strb	r3, [r7, #15]
 8007850:	bf00      	nop
 8007852:	7bfb      	ldrb	r3, [r7, #15]
 8007854:	4618      	mov	r0, r3
 8007856:	3714      	adds	r7, #20
 8007858:	46bd      	mov	sp, r7
 800785a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800785e:	4770      	bx	lr

08007860 <USBH_HID_JoystickInit>:
  *         The function init the HID mouse.
  * @param  phost: Host handle
  * @retval USBH Status
  */
USBH_StatusTypeDef USBH_HID_JoystickInit(USBH_HandleTypeDef *phost)
{
 8007860:	b580      	push	{r7, lr}
 8007862:	b084      	sub	sp, #16
 8007864:	af00      	add	r7, sp, #0
 8007866:	6078      	str	r0, [r7, #4]
  uint32_t i;
  HID_HandleTypeDef *HID_Handle = (HID_HandleTypeDef *) phost->pActiveClass->pData;
 8007868:	687b      	ldr	r3, [r7, #4]
 800786a:	f8d3 3360 	ldr.w	r3, [r3, #864]	; 0x360
 800786e:	69db      	ldr	r3, [r3, #28]
 8007870:	60bb      	str	r3, [r7, #8]

  memset(&joystick_info, 0, sizeof(HID_JOYSTICK_Info_TypeDef));
 8007872:	2207      	movs	r2, #7
 8007874:	2100      	movs	r1, #0
 8007876:	4815      	ldr	r0, [pc, #84]	; (80078cc <USBH_HID_JoystickInit+0x6c>)
 8007878:	f000 fa10 	bl	8007c9c <memset>

  for (i = 0U; i < (sizeof(joystick_report_data) / sizeof(uint32_t)); i++)
 800787c:	2300      	movs	r3, #0
 800787e:	60fb      	str	r3, [r7, #12]
 8007880:	e007      	b.n	8007892 <USBH_HID_JoystickInit+0x32>
  {
  	joystick_report_data[i] = 0U;
 8007882:	4a13      	ldr	r2, [pc, #76]	; (80078d0 <USBH_HID_JoystickInit+0x70>)
 8007884:	68fb      	ldr	r3, [r7, #12]
 8007886:	2100      	movs	r1, #0
 8007888:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
  for (i = 0U; i < (sizeof(joystick_report_data) / sizeof(uint32_t)); i++)
 800788c:	68fb      	ldr	r3, [r7, #12]
 800788e:	3301      	adds	r3, #1
 8007890:	60fb      	str	r3, [r7, #12]
 8007892:	68fb      	ldr	r3, [r7, #12]
 8007894:	2b07      	cmp	r3, #7
 8007896:	d9f4      	bls.n	8007882 <USBH_HID_JoystickInit+0x22>
  }

  if (HID_Handle->length > sizeof(joystick_report_data))
 8007898:	68bb      	ldr	r3, [r7, #8]
 800789a:	8b1b      	ldrh	r3, [r3, #24]
 800789c:	2b20      	cmp	r3, #32
 800789e:	d902      	bls.n	80078a6 <USBH_HID_JoystickInit+0x46>
  {
    HID_Handle->length = sizeof(joystick_report_data);
 80078a0:	68bb      	ldr	r3, [r7, #8]
 80078a2:	2220      	movs	r2, #32
 80078a4:	831a      	strh	r2, [r3, #24]
  }

  HID_Handle->pData = (uint8_t *)(void *)joystick_rx_report_buf;
 80078a6:	68bb      	ldr	r3, [r7, #8]
 80078a8:	4a0a      	ldr	r2, [pc, #40]	; (80078d4 <USBH_HID_JoystickInit+0x74>)
 80078aa:	615a      	str	r2, [r3, #20]
  USBH_HID_FifoInit(&HID_Handle->fifo, phost->device.Data, HID_QUEUE_SIZE * sizeof(joystick_report_data));
 80078ac:	68bb      	ldr	r3, [r7, #8]
 80078ae:	f103 0008 	add.w	r0, r3, #8
 80078b2:	687b      	ldr	r3, [r7, #4]
 80078b4:	f503 738e 	add.w	r3, r3, #284	; 0x11c
 80078b8:	f44f 72a0 	mov.w	r2, #320	; 0x140
 80078bc:	4619      	mov	r1, r3
 80078be:	f7fd fe0a 	bl	80054d6 <USBH_HID_FifoInit>

  return USBH_OK;
 80078c2:	2300      	movs	r3, #0
}
 80078c4:	4618      	mov	r0, r3
 80078c6:	3710      	adds	r7, #16
 80078c8:	46bd      	mov	sp, r7
 80078ca:	bd80      	pop	{r7, pc}
 80078cc:	200008a4 	.word	0x200008a4
 80078d0:	20000864 	.word	0x20000864
 80078d4:	20000884 	.word	0x20000884

080078d8 <USBH_HID_GetJoystickInfo>:
  *         The function return joystick information.
  * @param  phost: Host handle
  * @retval mouse information
  */
HID_JOYSTICK_Info_TypeDef *USBH_HID_GetJoystickInfo(USBH_HandleTypeDef *phost)
{
 80078d8:	b580      	push	{r7, lr}
 80078da:	b082      	sub	sp, #8
 80078dc:	af00      	add	r7, sp, #0
 80078de:	6078      	str	r0, [r7, #4]
  if (USBH_HID_JoystickDecode(phost) == USBH_OK)
 80078e0:	6878      	ldr	r0, [r7, #4]
 80078e2:	f000 f80d 	bl	8007900 <USBH_HID_JoystickDecode>
 80078e6:	4603      	mov	r3, r0
 80078e8:	2b00      	cmp	r3, #0
 80078ea:	d101      	bne.n	80078f0 <USBH_HID_GetJoystickInfo+0x18>
  {
    return &joystick_info;
 80078ec:	4b03      	ldr	r3, [pc, #12]	; (80078fc <USBH_HID_GetJoystickInfo+0x24>)
 80078ee:	e000      	b.n	80078f2 <USBH_HID_GetJoystickInfo+0x1a>
  }
  else
  {
    return NULL;
 80078f0:	2300      	movs	r3, #0
  }
}
 80078f2:	4618      	mov	r0, r3
 80078f4:	3708      	adds	r7, #8
 80078f6:	46bd      	mov	sp, r7
 80078f8:	bd80      	pop	{r7, pc}
 80078fa:	bf00      	nop
 80078fc:	200008a4 	.word	0x200008a4

08007900 <USBH_HID_JoystickDecode>:
  *         The function decode joystick data.
  * @param  phost: Host handle
  * @retval USBH Status
  */
static USBH_StatusTypeDef USBH_HID_JoystickDecode(USBH_HandleTypeDef *phost)
{
 8007900:	b580      	push	{r7, lr}
 8007902:	b086      	sub	sp, #24
 8007904:	af00      	add	r7, sp, #0
 8007906:	6078      	str	r0, [r7, #4]
  HID_HandleTypeDef *HID_Handle = (HID_HandleTypeDef *) phost->pActiveClass->pData;
 8007908:	687b      	ldr	r3, [r7, #4]
 800790a:	f8d3 3360 	ldr.w	r3, [r3, #864]	; 0x360
 800790e:	69db      	ldr	r3, [r3, #28]
 8007910:	613b      	str	r3, [r7, #16]
  static uint32_t prev_time = 0;

  if (HID_Handle->length == 0U)
 8007912:	693b      	ldr	r3, [r7, #16]
 8007914:	8b1b      	ldrh	r3, [r3, #24]
 8007916:	2b00      	cmp	r3, #0
 8007918:	d101      	bne.n	800791e <USBH_HID_JoystickDecode+0x1e>
  {
    return USBH_FAIL;
 800791a:	2302      	movs	r3, #2
 800791c:	e13c      	b.n	8007b98 <USBH_HID_JoystickDecode+0x298>
  }

  /*Fill report */
  if (USBH_HID_FifoRead(&HID_Handle->fifo, &joystick_report_data, HID_Handle->length) ==  HID_Handle->length)
 800791e:	693b      	ldr	r3, [r7, #16]
 8007920:	f103 0008 	add.w	r0, r3, #8
 8007924:	693b      	ldr	r3, [r7, #16]
 8007926:	8b1b      	ldrh	r3, [r3, #24]
 8007928:	461a      	mov	r2, r3
 800792a:	499d      	ldr	r1, [pc, #628]	; (8007ba0 <USBH_HID_JoystickDecode+0x2a0>)
 800792c:	f7fd fdef 	bl	800550e <USBH_HID_FifoRead>
 8007930:	4603      	mov	r3, r0
 8007932:	461a      	mov	r2, r3
 8007934:	693b      	ldr	r3, [r7, #16]
 8007936:	8b1b      	ldrh	r3, [r3, #24]
 8007938:	429a      	cmp	r2, r3
 800793a:	f040 812c 	bne.w	8007b96 <USBH_HID_JoystickDecode+0x296>
  {
  	uint8_t* p = (uint8_t*)joystick_report_data;
 800793e:	4b98      	ldr	r3, [pc, #608]	; (8007ba0 <USBH_HID_JoystickDecode+0x2a0>)
 8007940:	60fb      	str	r3, [r7, #12]
    uint8_t is_diff=0;
 8007942:	2300      	movs	r3, #0
 8007944:	75fb      	strb	r3, [r7, #23]

    for(uint8_t i=0;i<HID_Handle->length/4;i++) {
 8007946:	2300      	movs	r3, #0
 8007948:	75bb      	strb	r3, [r7, #22]
 800794a:	e00e      	b.n	800796a <USBH_HID_JoystickDecode+0x6a>
    	if(old_report_data[i] != joystick_report_data[i]) {
 800794c:	7dbb      	ldrb	r3, [r7, #22]
 800794e:	4a95      	ldr	r2, [pc, #596]	; (8007ba4 <USBH_HID_JoystickDecode+0x2a4>)
 8007950:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8007954:	7dbb      	ldrb	r3, [r7, #22]
 8007956:	4992      	ldr	r1, [pc, #584]	; (8007ba0 <USBH_HID_JoystickDecode+0x2a0>)
 8007958:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 800795c:	429a      	cmp	r2, r3
 800795e:	d001      	beq.n	8007964 <USBH_HID_JoystickDecode+0x64>
    		is_diff = 1;
 8007960:	2301      	movs	r3, #1
 8007962:	75fb      	strb	r3, [r7, #23]
    for(uint8_t i=0;i<HID_Handle->length/4;i++) {
 8007964:	7dbb      	ldrb	r3, [r7, #22]
 8007966:	3301      	adds	r3, #1
 8007968:	75bb      	strb	r3, [r7, #22]
 800796a:	7dbb      	ldrb	r3, [r7, #22]
 800796c:	b29a      	uxth	r2, r3
 800796e:	693b      	ldr	r3, [r7, #16]
 8007970:	8b1b      	ldrh	r3, [r3, #24]
 8007972:	089b      	lsrs	r3, r3, #2
 8007974:	b29b      	uxth	r3, r3
 8007976:	429a      	cmp	r2, r3
 8007978:	d3e8      	bcc.n	800794c <USBH_HID_JoystickDecode+0x4c>
    	}
    }

    if(!is_diff && ((HAL_GetTick() - prev_time) <  MIN_JOY_SEND_TIME_MS)) {
 800797a:	7dfb      	ldrb	r3, [r7, #23]
 800797c:	2b00      	cmp	r3, #0
 800797e:	d10a      	bne.n	8007996 <USBH_HID_JoystickDecode+0x96>
 8007980:	f7f9 f9ae 	bl	8000ce0 <HAL_GetTick>
 8007984:	4602      	mov	r2, r0
 8007986:	4b88      	ldr	r3, [pc, #544]	; (8007ba8 <USBH_HID_JoystickDecode+0x2a8>)
 8007988:	681b      	ldr	r3, [r3, #0]
 800798a:	1ad3      	subs	r3, r2, r3
 800798c:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8007990:	d201      	bcs.n	8007996 <USBH_HID_JoystickDecode+0x96>
    	return USBH_OK;
 8007992:	2300      	movs	r3, #0
 8007994:	e100      	b.n	8007b98 <USBH_HID_JoystickDecode+0x298>
    }

    prev_time = HAL_GetTick();
 8007996:	f7f9 f9a3 	bl	8000ce0 <HAL_GetTick>
 800799a:	4603      	mov	r3, r0
 800799c:	4a82      	ldr	r2, [pc, #520]	; (8007ba8 <USBH_HID_JoystickDecode+0x2a8>)
 800799e:	6013      	str	r3, [r2, #0]

    memcpy(old_report_data, p, HID_Handle->length);
 80079a0:	693b      	ldr	r3, [r7, #16]
 80079a2:	8b1b      	ldrh	r3, [r3, #24]
 80079a4:	461a      	mov	r2, r3
 80079a6:	68f9      	ldr	r1, [r7, #12]
 80079a8:	487e      	ldr	r0, [pc, #504]	; (8007ba4 <USBH_HID_JoystickDecode+0x2a4>)
 80079aa:	f000 f969 	bl	8007c80 <memcpy>
    	printf("%02X ", HID_Handle->pData[i]);
    }
#endif

    /*Decode report */
    joystick_info.pad_arrow    = (uint8_t)HID_ReadItem((HID_Report_ItemTypedef *) &prop_pad, 0U) & 0x0F;
 80079ae:	2100      	movs	r1, #0
 80079b0:	487e      	ldr	r0, [pc, #504]	; (8007bac <USBH_HID_JoystickDecode+0x2ac>)
 80079b2:	f7fd feeb 	bl	800578c <HID_ReadItem>
 80079b6:	4603      	mov	r3, r0
 80079b8:	f003 030f 	and.w	r3, r3, #15
 80079bc:	b2d9      	uxtb	r1, r3
 80079be:	4a7c      	ldr	r2, [pc, #496]	; (8007bb0 <USBH_HID_JoystickDecode+0x2b0>)
 80079c0:	7913      	ldrb	r3, [r2, #4]
 80079c2:	f361 0303 	bfi	r3, r1, #0, #4
 80079c6:	7113      	strb	r3, [r2, #4]
    joystick_info.left_hat     = (uint8_t)HID_ReadItem((HID_Report_ItemTypedef *) &prop_hat_switch_left, 0U) ? 1 : 0;
 80079c8:	2100      	movs	r1, #0
 80079ca:	487a      	ldr	r0, [pc, #488]	; (8007bb4 <USBH_HID_JoystickDecode+0x2b4>)
 80079cc:	f7fd fede 	bl	800578c <HID_ReadItem>
 80079d0:	4603      	mov	r3, r0
 80079d2:	b2db      	uxtb	r3, r3
 80079d4:	2b00      	cmp	r3, #0
 80079d6:	bf14      	ite	ne
 80079d8:	2301      	movne	r3, #1
 80079da:	2300      	moveq	r3, #0
 80079dc:	b2d9      	uxtb	r1, r3
 80079de:	4a74      	ldr	r2, [pc, #464]	; (8007bb0 <USBH_HID_JoystickDecode+0x2b0>)
 80079e0:	7913      	ldrb	r3, [r2, #4]
 80079e2:	f361 1304 	bfi	r3, r1, #4, #1
 80079e6:	7113      	strb	r3, [r2, #4]
  	joystick_info.right_hat    = (uint8_t)HID_ReadItem((HID_Report_ItemTypedef *) &prop_hat_switch_right, 0U) ? 1 : 0;
 80079e8:	2100      	movs	r1, #0
 80079ea:	4873      	ldr	r0, [pc, #460]	; (8007bb8 <USBH_HID_JoystickDecode+0x2b8>)
 80079ec:	f7fd fece 	bl	800578c <HID_ReadItem>
 80079f0:	4603      	mov	r3, r0
 80079f2:	b2db      	uxtb	r3, r3
 80079f4:	2b00      	cmp	r3, #0
 80079f6:	bf14      	ite	ne
 80079f8:	2301      	movne	r3, #1
 80079fa:	2300      	moveq	r3, #0
 80079fc:	b2d9      	uxtb	r1, r3
 80079fe:	4a6c      	ldr	r2, [pc, #432]	; (8007bb0 <USBH_HID_JoystickDecode+0x2b0>)
 8007a00:	7913      	ldrb	r3, [r2, #4]
 8007a02:	f361 1345 	bfi	r3, r1, #5, #1
 8007a06:	7113      	strb	r3, [r2, #4]

    joystick_info.left_axis_x  = (uint8_t)HID_ReadItem((HID_Report_ItemTypedef *) &prop_x, 0U);
 8007a08:	2100      	movs	r1, #0
 8007a0a:	486c      	ldr	r0, [pc, #432]	; (8007bbc <USBH_HID_JoystickDecode+0x2bc>)
 8007a0c:	f7fd febe 	bl	800578c <HID_ReadItem>
 8007a10:	4603      	mov	r3, r0
 8007a12:	b2da      	uxtb	r2, r3
 8007a14:	4b66      	ldr	r3, [pc, #408]	; (8007bb0 <USBH_HID_JoystickDecode+0x2b0>)
 8007a16:	701a      	strb	r2, [r3, #0]
    joystick_info.left_axis_y  = (uint8_t)HID_ReadItem((HID_Report_ItemTypedef *) &prop_y, 0U);
 8007a18:	2100      	movs	r1, #0
 8007a1a:	4869      	ldr	r0, [pc, #420]	; (8007bc0 <USBH_HID_JoystickDecode+0x2c0>)
 8007a1c:	f7fd feb6 	bl	800578c <HID_ReadItem>
 8007a20:	4603      	mov	r3, r0
 8007a22:	b2da      	uxtb	r2, r3
 8007a24:	4b62      	ldr	r3, [pc, #392]	; (8007bb0 <USBH_HID_JoystickDecode+0x2b0>)
 8007a26:	705a      	strb	r2, [r3, #1]
    joystick_info.right_axis_x = (uint8_t)HID_ReadItem((HID_Report_ItemTypedef *) &prop_z, 0U);
 8007a28:	2100      	movs	r1, #0
 8007a2a:	4866      	ldr	r0, [pc, #408]	; (8007bc4 <USBH_HID_JoystickDecode+0x2c4>)
 8007a2c:	f7fd feae 	bl	800578c <HID_ReadItem>
 8007a30:	4603      	mov	r3, r0
 8007a32:	b2da      	uxtb	r2, r3
 8007a34:	4b5e      	ldr	r3, [pc, #376]	; (8007bb0 <USBH_HID_JoystickDecode+0x2b0>)
 8007a36:	709a      	strb	r2, [r3, #2]
    joystick_info.right_axis_y = (uint8_t)HID_ReadItem((HID_Report_ItemTypedef *) &prop_rz, 0U);
 8007a38:	2100      	movs	r1, #0
 8007a3a:	4863      	ldr	r0, [pc, #396]	; (8007bc8 <USBH_HID_JoystickDecode+0x2c8>)
 8007a3c:	f7fd fea6 	bl	800578c <HID_ReadItem>
 8007a40:	4603      	mov	r3, r0
 8007a42:	b2da      	uxtb	r2, r3
 8007a44:	4b5a      	ldr	r3, [pc, #360]	; (8007bb0 <USBH_HID_JoystickDecode+0x2b0>)
 8007a46:	70da      	strb	r2, [r3, #3]

    joystick_info.pad_a        = (uint8_t)HID_ReadItem((HID_Report_ItemTypedef *) &prop_btn_a, 0U) ? 1 : 0;
 8007a48:	2100      	movs	r1, #0
 8007a4a:	4860      	ldr	r0, [pc, #384]	; (8007bcc <USBH_HID_JoystickDecode+0x2cc>)
 8007a4c:	f7fd fe9e 	bl	800578c <HID_ReadItem>
 8007a50:	4603      	mov	r3, r0
 8007a52:	b2db      	uxtb	r3, r3
 8007a54:	2b00      	cmp	r3, #0
 8007a56:	bf14      	ite	ne
 8007a58:	2301      	movne	r3, #1
 8007a5a:	2300      	moveq	r3, #0
 8007a5c:	b2d9      	uxtb	r1, r3
 8007a5e:	4a54      	ldr	r2, [pc, #336]	; (8007bb0 <USBH_HID_JoystickDecode+0x2b0>)
 8007a60:	7953      	ldrb	r3, [r2, #5]
 8007a62:	f361 0300 	bfi	r3, r1, #0, #1
 8007a66:	7153      	strb	r3, [r2, #5]
    joystick_info.pad_b        = (uint8_t)HID_ReadItem((HID_Report_ItemTypedef *) &prop_btn_b, 0U) ? 1 : 0;
 8007a68:	2100      	movs	r1, #0
 8007a6a:	4859      	ldr	r0, [pc, #356]	; (8007bd0 <USBH_HID_JoystickDecode+0x2d0>)
 8007a6c:	f7fd fe8e 	bl	800578c <HID_ReadItem>
 8007a70:	4603      	mov	r3, r0
 8007a72:	b2db      	uxtb	r3, r3
 8007a74:	2b00      	cmp	r3, #0
 8007a76:	bf14      	ite	ne
 8007a78:	2301      	movne	r3, #1
 8007a7a:	2300      	moveq	r3, #0
 8007a7c:	b2d9      	uxtb	r1, r3
 8007a7e:	4a4c      	ldr	r2, [pc, #304]	; (8007bb0 <USBH_HID_JoystickDecode+0x2b0>)
 8007a80:	7953      	ldrb	r3, [r2, #5]
 8007a82:	f361 0341 	bfi	r3, r1, #1, #1
 8007a86:	7153      	strb	r3, [r2, #5]
    joystick_info.pad_x        = (uint8_t)HID_ReadItem((HID_Report_ItemTypedef *) &prop_btn_x, 0U) ? 1 : 0;
 8007a88:	2100      	movs	r1, #0
 8007a8a:	4852      	ldr	r0, [pc, #328]	; (8007bd4 <USBH_HID_JoystickDecode+0x2d4>)
 8007a8c:	f7fd fe7e 	bl	800578c <HID_ReadItem>
 8007a90:	4603      	mov	r3, r0
 8007a92:	b2db      	uxtb	r3, r3
 8007a94:	2b00      	cmp	r3, #0
 8007a96:	bf14      	ite	ne
 8007a98:	2301      	movne	r3, #1
 8007a9a:	2300      	moveq	r3, #0
 8007a9c:	b2d9      	uxtb	r1, r3
 8007a9e:	4a44      	ldr	r2, [pc, #272]	; (8007bb0 <USBH_HID_JoystickDecode+0x2b0>)
 8007aa0:	7953      	ldrb	r3, [r2, #5]
 8007aa2:	f361 0382 	bfi	r3, r1, #2, #1
 8007aa6:	7153      	strb	r3, [r2, #5]
    joystick_info.pad_y        = (uint8_t)HID_ReadItem((HID_Report_ItemTypedef *) &prop_btn_y, 0U) ? 1 : 0;
 8007aa8:	2100      	movs	r1, #0
 8007aaa:	484b      	ldr	r0, [pc, #300]	; (8007bd8 <USBH_HID_JoystickDecode+0x2d8>)
 8007aac:	f7fd fe6e 	bl	800578c <HID_ReadItem>
 8007ab0:	4603      	mov	r3, r0
 8007ab2:	b2db      	uxtb	r3, r3
 8007ab4:	2b00      	cmp	r3, #0
 8007ab6:	bf14      	ite	ne
 8007ab8:	2301      	movne	r3, #1
 8007aba:	2300      	moveq	r3, #0
 8007abc:	b2d9      	uxtb	r1, r3
 8007abe:	4a3c      	ldr	r2, [pc, #240]	; (8007bb0 <USBH_HID_JoystickDecode+0x2b0>)
 8007ac0:	7953      	ldrb	r3, [r2, #5]
 8007ac2:	f361 03c3 	bfi	r3, r1, #3, #1
 8007ac6:	7153      	strb	r3, [r2, #5]

    joystick_info.l1           = (uint8_t)HID_ReadItem((HID_Report_ItemTypedef *) &prop_btn_l1, 0U) ? 1 : 0;
 8007ac8:	2100      	movs	r1, #0
 8007aca:	4844      	ldr	r0, [pc, #272]	; (8007bdc <USBH_HID_JoystickDecode+0x2dc>)
 8007acc:	f7fd fe5e 	bl	800578c <HID_ReadItem>
 8007ad0:	4603      	mov	r3, r0
 8007ad2:	b2db      	uxtb	r3, r3
 8007ad4:	2b00      	cmp	r3, #0
 8007ad6:	bf14      	ite	ne
 8007ad8:	2301      	movne	r3, #1
 8007ada:	2300      	moveq	r3, #0
 8007adc:	b2d9      	uxtb	r1, r3
 8007ade:	4a34      	ldr	r2, [pc, #208]	; (8007bb0 <USBH_HID_JoystickDecode+0x2b0>)
 8007ae0:	7993      	ldrb	r3, [r2, #6]
 8007ae2:	f361 0300 	bfi	r3, r1, #0, #1
 8007ae6:	7193      	strb	r3, [r2, #6]
    joystick_info.r1           = (uint8_t)HID_ReadItem((HID_Report_ItemTypedef *) &prop_btn_r1, 0U) ? 1 : 0;
 8007ae8:	2100      	movs	r1, #0
 8007aea:	483d      	ldr	r0, [pc, #244]	; (8007be0 <USBH_HID_JoystickDecode+0x2e0>)
 8007aec:	f7fd fe4e 	bl	800578c <HID_ReadItem>
 8007af0:	4603      	mov	r3, r0
 8007af2:	b2db      	uxtb	r3, r3
 8007af4:	2b00      	cmp	r3, #0
 8007af6:	bf14      	ite	ne
 8007af8:	2301      	movne	r3, #1
 8007afa:	2300      	moveq	r3, #0
 8007afc:	b2d9      	uxtb	r1, r3
 8007afe:	4a2c      	ldr	r2, [pc, #176]	; (8007bb0 <USBH_HID_JoystickDecode+0x2b0>)
 8007b00:	7993      	ldrb	r3, [r2, #6]
 8007b02:	f361 0382 	bfi	r3, r1, #2, #1
 8007b06:	7193      	strb	r3, [r2, #6]
    joystick_info.l2           = (uint8_t)HID_ReadItem((HID_Report_ItemTypedef *) &prop_btn_l2, 0U) ? 1 : 0;
 8007b08:	2100      	movs	r1, #0
 8007b0a:	4836      	ldr	r0, [pc, #216]	; (8007be4 <USBH_HID_JoystickDecode+0x2e4>)
 8007b0c:	f7fd fe3e 	bl	800578c <HID_ReadItem>
 8007b10:	4603      	mov	r3, r0
 8007b12:	b2db      	uxtb	r3, r3
 8007b14:	2b00      	cmp	r3, #0
 8007b16:	bf14      	ite	ne
 8007b18:	2301      	movne	r3, #1
 8007b1a:	2300      	moveq	r3, #0
 8007b1c:	b2d9      	uxtb	r1, r3
 8007b1e:	4a24      	ldr	r2, [pc, #144]	; (8007bb0 <USBH_HID_JoystickDecode+0x2b0>)
 8007b20:	7993      	ldrb	r3, [r2, #6]
 8007b22:	f361 0341 	bfi	r3, r1, #1, #1
 8007b26:	7193      	strb	r3, [r2, #6]
    joystick_info.r2           = (uint8_t)HID_ReadItem((HID_Report_ItemTypedef *) &prop_btn_r2, 0U) ? 1 : 0;
 8007b28:	2100      	movs	r1, #0
 8007b2a:	482f      	ldr	r0, [pc, #188]	; (8007be8 <USBH_HID_JoystickDecode+0x2e8>)
 8007b2c:	f7fd fe2e 	bl	800578c <HID_ReadItem>
 8007b30:	4603      	mov	r3, r0
 8007b32:	b2db      	uxtb	r3, r3
 8007b34:	2b00      	cmp	r3, #0
 8007b36:	bf14      	ite	ne
 8007b38:	2301      	movne	r3, #1
 8007b3a:	2300      	moveq	r3, #0
 8007b3c:	b2d9      	uxtb	r1, r3
 8007b3e:	4a1c      	ldr	r2, [pc, #112]	; (8007bb0 <USBH_HID_JoystickDecode+0x2b0>)
 8007b40:	7993      	ldrb	r3, [r2, #6]
 8007b42:	f361 03c3 	bfi	r3, r1, #3, #1
 8007b46:	7193      	strb	r3, [r2, #6]

    joystick_info.select       = (uint8_t)HID_ReadItem((HID_Report_ItemTypedef *) &prop_btn_select, 0U) ? 1 : 0;
 8007b48:	2100      	movs	r1, #0
 8007b4a:	4828      	ldr	r0, [pc, #160]	; (8007bec <USBH_HID_JoystickDecode+0x2ec>)
 8007b4c:	f7fd fe1e 	bl	800578c <HID_ReadItem>
 8007b50:	4603      	mov	r3, r0
 8007b52:	b2db      	uxtb	r3, r3
 8007b54:	2b00      	cmp	r3, #0
 8007b56:	bf14      	ite	ne
 8007b58:	2301      	movne	r3, #1
 8007b5a:	2300      	moveq	r3, #0
 8007b5c:	b2d9      	uxtb	r1, r3
 8007b5e:	4a14      	ldr	r2, [pc, #80]	; (8007bb0 <USBH_HID_JoystickDecode+0x2b0>)
 8007b60:	7913      	ldrb	r3, [r2, #4]
 8007b62:	f361 1386 	bfi	r3, r1, #6, #1
 8007b66:	7113      	strb	r3, [r2, #4]
    joystick_info.start        = (uint8_t)HID_ReadItem((HID_Report_ItemTypedef *) &prop_btn_start, 0U) ? 1 : 0;
 8007b68:	2100      	movs	r1, #0
 8007b6a:	4821      	ldr	r0, [pc, #132]	; (8007bf0 <USBH_HID_JoystickDecode+0x2f0>)
 8007b6c:	f7fd fe0e 	bl	800578c <HID_ReadItem>
 8007b70:	4603      	mov	r3, r0
 8007b72:	b2db      	uxtb	r3, r3
 8007b74:	2b00      	cmp	r3, #0
 8007b76:	bf14      	ite	ne
 8007b78:	2301      	movne	r3, #1
 8007b7a:	2300      	moveq	r3, #0
 8007b7c:	b2d9      	uxtb	r1, r3
 8007b7e:	4a0c      	ldr	r2, [pc, #48]	; (8007bb0 <USBH_HID_JoystickDecode+0x2b0>)
 8007b80:	7913      	ldrb	r3, [r2, #4]
 8007b82:	f361 13c7 	bfi	r3, r1, #7, #1
 8007b86:	7113      	strb	r3, [r2, #4]
#ifdef DEBUG_JOY_INFO
    print_joy_info(joystick_info);
#endif
    send_uart_data(UART_CMD_JOY, (uint8_t*)&joystick_info, sizeof(HID_JOYSTICK_Info_TypeDef));
 8007b88:	2207      	movs	r2, #7
 8007b8a:	4909      	ldr	r1, [pc, #36]	; (8007bb0 <USBH_HID_JoystickDecode+0x2b0>)
 8007b8c:	2001      	movs	r0, #1
 8007b8e:	f7f8 ffe9 	bl	8000b64 <send_uart_data>
    return USBH_OK;
 8007b92:	2300      	movs	r3, #0
 8007b94:	e000      	b.n	8007b98 <USBH_HID_JoystickDecode+0x298>
  }

  return USBH_FAIL;
 8007b96:	2302      	movs	r3, #2
}
 8007b98:	4618      	mov	r0, r3
 8007b9a:	3718      	adds	r7, #24
 8007b9c:	46bd      	mov	sp, r7
 8007b9e:	bd80      	pop	{r7, pc}
 8007ba0:	20000864 	.word	0x20000864
 8007ba4:	200000b4 	.word	0x200000b4
 8007ba8:	200000d4 	.word	0x200000d4
 8007bac:	08009284 	.word	0x08009284
 8007bb0:	200008a4 	.word	0x200008a4
 8007bb4:	08009364 	.word	0x08009364
 8007bb8:	08009384 	.word	0x08009384
 8007bbc:	08009204 	.word	0x08009204
 8007bc0:	08009224 	.word	0x08009224
 8007bc4:	08009244 	.word	0x08009244
 8007bc8:	08009264 	.word	0x08009264
 8007bcc:	080092a4 	.word	0x080092a4
 8007bd0:	080092c4 	.word	0x080092c4
 8007bd4:	080092e4 	.word	0x080092e4
 8007bd8:	08009304 	.word	0x08009304
 8007bdc:	08009324 	.word	0x08009324
 8007be0:	08009344 	.word	0x08009344
 8007be4:	080093a4 	.word	0x080093a4
 8007be8:	080093c4 	.word	0x080093c4
 8007bec:	080093e4 	.word	0x080093e4
 8007bf0:	08009404 	.word	0x08009404

08007bf4 <USBH_HID_EventCallback>:

// hid event callback
void USBH_HID_EventCallback(USBH_HandleTypeDef *phost)
{
 8007bf4:	b580      	push	{r7, lr}
 8007bf6:	b082      	sub	sp, #8
 8007bf8:	af00      	add	r7, sp, #0
 8007bfa:	6078      	str	r0, [r7, #4]
	USBH_HID_GetJoystickInfo(phost);
 8007bfc:	6878      	ldr	r0, [r7, #4]
 8007bfe:	f7ff fe6b 	bl	80078d8 <USBH_HID_GetJoystickInfo>
}
 8007c02:	bf00      	nop
 8007c04:	3708      	adds	r7, #8
 8007c06:	46bd      	mov	sp, r7
 8007c08:	bd80      	pop	{r7, pc}
	...

08007c0c <__errno>:
 8007c0c:	4b01      	ldr	r3, [pc, #4]	; (8007c14 <__errno+0x8>)
 8007c0e:	6818      	ldr	r0, [r3, #0]
 8007c10:	4770      	bx	lr
 8007c12:	bf00      	nop
 8007c14:	2000002c 	.word	0x2000002c

08007c18 <__libc_init_array>:
 8007c18:	b570      	push	{r4, r5, r6, lr}
 8007c1a:	4d0d      	ldr	r5, [pc, #52]	; (8007c50 <__libc_init_array+0x38>)
 8007c1c:	4c0d      	ldr	r4, [pc, #52]	; (8007c54 <__libc_init_array+0x3c>)
 8007c1e:	1b64      	subs	r4, r4, r5
 8007c20:	10a4      	asrs	r4, r4, #2
 8007c22:	2600      	movs	r6, #0
 8007c24:	42a6      	cmp	r6, r4
 8007c26:	d109      	bne.n	8007c3c <__libc_init_array+0x24>
 8007c28:	4d0b      	ldr	r5, [pc, #44]	; (8007c58 <__libc_init_array+0x40>)
 8007c2a:	4c0c      	ldr	r4, [pc, #48]	; (8007c5c <__libc_init_array+0x44>)
 8007c2c:	f000 fff2 	bl	8008c14 <_init>
 8007c30:	1b64      	subs	r4, r4, r5
 8007c32:	10a4      	asrs	r4, r4, #2
 8007c34:	2600      	movs	r6, #0
 8007c36:	42a6      	cmp	r6, r4
 8007c38:	d105      	bne.n	8007c46 <__libc_init_array+0x2e>
 8007c3a:	bd70      	pop	{r4, r5, r6, pc}
 8007c3c:	f855 3b04 	ldr.w	r3, [r5], #4
 8007c40:	4798      	blx	r3
 8007c42:	3601      	adds	r6, #1
 8007c44:	e7ee      	b.n	8007c24 <__libc_init_array+0xc>
 8007c46:	f855 3b04 	ldr.w	r3, [r5], #4
 8007c4a:	4798      	blx	r3
 8007c4c:	3601      	adds	r6, #1
 8007c4e:	e7f2      	b.n	8007c36 <__libc_init_array+0x1e>
 8007c50:	080094c4 	.word	0x080094c4
 8007c54:	080094c4 	.word	0x080094c4
 8007c58:	080094c4 	.word	0x080094c4
 8007c5c:	080094c8 	.word	0x080094c8

08007c60 <malloc>:
 8007c60:	4b02      	ldr	r3, [pc, #8]	; (8007c6c <malloc+0xc>)
 8007c62:	4601      	mov	r1, r0
 8007c64:	6818      	ldr	r0, [r3, #0]
 8007c66:	f000 b871 	b.w	8007d4c <_malloc_r>
 8007c6a:	bf00      	nop
 8007c6c:	2000002c 	.word	0x2000002c

08007c70 <free>:
 8007c70:	4b02      	ldr	r3, [pc, #8]	; (8007c7c <free+0xc>)
 8007c72:	4601      	mov	r1, r0
 8007c74:	6818      	ldr	r0, [r3, #0]
 8007c76:	f000 b819 	b.w	8007cac <_free_r>
 8007c7a:	bf00      	nop
 8007c7c:	2000002c 	.word	0x2000002c

08007c80 <memcpy>:
 8007c80:	440a      	add	r2, r1
 8007c82:	4291      	cmp	r1, r2
 8007c84:	f100 33ff 	add.w	r3, r0, #4294967295
 8007c88:	d100      	bne.n	8007c8c <memcpy+0xc>
 8007c8a:	4770      	bx	lr
 8007c8c:	b510      	push	{r4, lr}
 8007c8e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8007c92:	f803 4f01 	strb.w	r4, [r3, #1]!
 8007c96:	4291      	cmp	r1, r2
 8007c98:	d1f9      	bne.n	8007c8e <memcpy+0xe>
 8007c9a:	bd10      	pop	{r4, pc}

08007c9c <memset>:
 8007c9c:	4402      	add	r2, r0
 8007c9e:	4603      	mov	r3, r0
 8007ca0:	4293      	cmp	r3, r2
 8007ca2:	d100      	bne.n	8007ca6 <memset+0xa>
 8007ca4:	4770      	bx	lr
 8007ca6:	f803 1b01 	strb.w	r1, [r3], #1
 8007caa:	e7f9      	b.n	8007ca0 <memset+0x4>

08007cac <_free_r>:
 8007cac:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007cae:	2900      	cmp	r1, #0
 8007cb0:	d048      	beq.n	8007d44 <_free_r+0x98>
 8007cb2:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8007cb6:	9001      	str	r0, [sp, #4]
 8007cb8:	2b00      	cmp	r3, #0
 8007cba:	f1a1 0404 	sub.w	r4, r1, #4
 8007cbe:	bfb8      	it	lt
 8007cc0:	18e4      	addlt	r4, r4, r3
 8007cc2:	f000 f9d3 	bl	800806c <__malloc_lock>
 8007cc6:	4a20      	ldr	r2, [pc, #128]	; (8007d48 <_free_r+0x9c>)
 8007cc8:	9801      	ldr	r0, [sp, #4]
 8007cca:	6813      	ldr	r3, [r2, #0]
 8007ccc:	4615      	mov	r5, r2
 8007cce:	b933      	cbnz	r3, 8007cde <_free_r+0x32>
 8007cd0:	6063      	str	r3, [r4, #4]
 8007cd2:	6014      	str	r4, [r2, #0]
 8007cd4:	b003      	add	sp, #12
 8007cd6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8007cda:	f000 b9cd 	b.w	8008078 <__malloc_unlock>
 8007cde:	42a3      	cmp	r3, r4
 8007ce0:	d90b      	bls.n	8007cfa <_free_r+0x4e>
 8007ce2:	6821      	ldr	r1, [r4, #0]
 8007ce4:	1862      	adds	r2, r4, r1
 8007ce6:	4293      	cmp	r3, r2
 8007ce8:	bf04      	itt	eq
 8007cea:	681a      	ldreq	r2, [r3, #0]
 8007cec:	685b      	ldreq	r3, [r3, #4]
 8007cee:	6063      	str	r3, [r4, #4]
 8007cf0:	bf04      	itt	eq
 8007cf2:	1852      	addeq	r2, r2, r1
 8007cf4:	6022      	streq	r2, [r4, #0]
 8007cf6:	602c      	str	r4, [r5, #0]
 8007cf8:	e7ec      	b.n	8007cd4 <_free_r+0x28>
 8007cfa:	461a      	mov	r2, r3
 8007cfc:	685b      	ldr	r3, [r3, #4]
 8007cfe:	b10b      	cbz	r3, 8007d04 <_free_r+0x58>
 8007d00:	42a3      	cmp	r3, r4
 8007d02:	d9fa      	bls.n	8007cfa <_free_r+0x4e>
 8007d04:	6811      	ldr	r1, [r2, #0]
 8007d06:	1855      	adds	r5, r2, r1
 8007d08:	42a5      	cmp	r5, r4
 8007d0a:	d10b      	bne.n	8007d24 <_free_r+0x78>
 8007d0c:	6824      	ldr	r4, [r4, #0]
 8007d0e:	4421      	add	r1, r4
 8007d10:	1854      	adds	r4, r2, r1
 8007d12:	42a3      	cmp	r3, r4
 8007d14:	6011      	str	r1, [r2, #0]
 8007d16:	d1dd      	bne.n	8007cd4 <_free_r+0x28>
 8007d18:	681c      	ldr	r4, [r3, #0]
 8007d1a:	685b      	ldr	r3, [r3, #4]
 8007d1c:	6053      	str	r3, [r2, #4]
 8007d1e:	4421      	add	r1, r4
 8007d20:	6011      	str	r1, [r2, #0]
 8007d22:	e7d7      	b.n	8007cd4 <_free_r+0x28>
 8007d24:	d902      	bls.n	8007d2c <_free_r+0x80>
 8007d26:	230c      	movs	r3, #12
 8007d28:	6003      	str	r3, [r0, #0]
 8007d2a:	e7d3      	b.n	8007cd4 <_free_r+0x28>
 8007d2c:	6825      	ldr	r5, [r4, #0]
 8007d2e:	1961      	adds	r1, r4, r5
 8007d30:	428b      	cmp	r3, r1
 8007d32:	bf04      	itt	eq
 8007d34:	6819      	ldreq	r1, [r3, #0]
 8007d36:	685b      	ldreq	r3, [r3, #4]
 8007d38:	6063      	str	r3, [r4, #4]
 8007d3a:	bf04      	itt	eq
 8007d3c:	1949      	addeq	r1, r1, r5
 8007d3e:	6021      	streq	r1, [r4, #0]
 8007d40:	6054      	str	r4, [r2, #4]
 8007d42:	e7c7      	b.n	8007cd4 <_free_r+0x28>
 8007d44:	b003      	add	sp, #12
 8007d46:	bd30      	pop	{r4, r5, pc}
 8007d48:	200000d8 	.word	0x200000d8

08007d4c <_malloc_r>:
 8007d4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007d4e:	1ccd      	adds	r5, r1, #3
 8007d50:	f025 0503 	bic.w	r5, r5, #3
 8007d54:	3508      	adds	r5, #8
 8007d56:	2d0c      	cmp	r5, #12
 8007d58:	bf38      	it	cc
 8007d5a:	250c      	movcc	r5, #12
 8007d5c:	2d00      	cmp	r5, #0
 8007d5e:	4606      	mov	r6, r0
 8007d60:	db01      	blt.n	8007d66 <_malloc_r+0x1a>
 8007d62:	42a9      	cmp	r1, r5
 8007d64:	d903      	bls.n	8007d6e <_malloc_r+0x22>
 8007d66:	230c      	movs	r3, #12
 8007d68:	6033      	str	r3, [r6, #0]
 8007d6a:	2000      	movs	r0, #0
 8007d6c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007d6e:	f000 f97d 	bl	800806c <__malloc_lock>
 8007d72:	4921      	ldr	r1, [pc, #132]	; (8007df8 <_malloc_r+0xac>)
 8007d74:	680a      	ldr	r2, [r1, #0]
 8007d76:	4614      	mov	r4, r2
 8007d78:	b99c      	cbnz	r4, 8007da2 <_malloc_r+0x56>
 8007d7a:	4f20      	ldr	r7, [pc, #128]	; (8007dfc <_malloc_r+0xb0>)
 8007d7c:	683b      	ldr	r3, [r7, #0]
 8007d7e:	b923      	cbnz	r3, 8007d8a <_malloc_r+0x3e>
 8007d80:	4621      	mov	r1, r4
 8007d82:	4630      	mov	r0, r6
 8007d84:	f000 f86a 	bl	8007e5c <_sbrk_r>
 8007d88:	6038      	str	r0, [r7, #0]
 8007d8a:	4629      	mov	r1, r5
 8007d8c:	4630      	mov	r0, r6
 8007d8e:	f000 f865 	bl	8007e5c <_sbrk_r>
 8007d92:	1c43      	adds	r3, r0, #1
 8007d94:	d123      	bne.n	8007dde <_malloc_r+0x92>
 8007d96:	230c      	movs	r3, #12
 8007d98:	6033      	str	r3, [r6, #0]
 8007d9a:	4630      	mov	r0, r6
 8007d9c:	f000 f96c 	bl	8008078 <__malloc_unlock>
 8007da0:	e7e3      	b.n	8007d6a <_malloc_r+0x1e>
 8007da2:	6823      	ldr	r3, [r4, #0]
 8007da4:	1b5b      	subs	r3, r3, r5
 8007da6:	d417      	bmi.n	8007dd8 <_malloc_r+0x8c>
 8007da8:	2b0b      	cmp	r3, #11
 8007daa:	d903      	bls.n	8007db4 <_malloc_r+0x68>
 8007dac:	6023      	str	r3, [r4, #0]
 8007dae:	441c      	add	r4, r3
 8007db0:	6025      	str	r5, [r4, #0]
 8007db2:	e004      	b.n	8007dbe <_malloc_r+0x72>
 8007db4:	6863      	ldr	r3, [r4, #4]
 8007db6:	42a2      	cmp	r2, r4
 8007db8:	bf0c      	ite	eq
 8007dba:	600b      	streq	r3, [r1, #0]
 8007dbc:	6053      	strne	r3, [r2, #4]
 8007dbe:	4630      	mov	r0, r6
 8007dc0:	f000 f95a 	bl	8008078 <__malloc_unlock>
 8007dc4:	f104 000b 	add.w	r0, r4, #11
 8007dc8:	1d23      	adds	r3, r4, #4
 8007dca:	f020 0007 	bic.w	r0, r0, #7
 8007dce:	1ac2      	subs	r2, r0, r3
 8007dd0:	d0cc      	beq.n	8007d6c <_malloc_r+0x20>
 8007dd2:	1a1b      	subs	r3, r3, r0
 8007dd4:	50a3      	str	r3, [r4, r2]
 8007dd6:	e7c9      	b.n	8007d6c <_malloc_r+0x20>
 8007dd8:	4622      	mov	r2, r4
 8007dda:	6864      	ldr	r4, [r4, #4]
 8007ddc:	e7cc      	b.n	8007d78 <_malloc_r+0x2c>
 8007dde:	1cc4      	adds	r4, r0, #3
 8007de0:	f024 0403 	bic.w	r4, r4, #3
 8007de4:	42a0      	cmp	r0, r4
 8007de6:	d0e3      	beq.n	8007db0 <_malloc_r+0x64>
 8007de8:	1a21      	subs	r1, r4, r0
 8007dea:	4630      	mov	r0, r6
 8007dec:	f000 f836 	bl	8007e5c <_sbrk_r>
 8007df0:	3001      	adds	r0, #1
 8007df2:	d1dd      	bne.n	8007db0 <_malloc_r+0x64>
 8007df4:	e7cf      	b.n	8007d96 <_malloc_r+0x4a>
 8007df6:	bf00      	nop
 8007df8:	200000d8 	.word	0x200000d8
 8007dfc:	200000dc 	.word	0x200000dc

08007e00 <iprintf>:
 8007e00:	b40f      	push	{r0, r1, r2, r3}
 8007e02:	4b0a      	ldr	r3, [pc, #40]	; (8007e2c <iprintf+0x2c>)
 8007e04:	b513      	push	{r0, r1, r4, lr}
 8007e06:	681c      	ldr	r4, [r3, #0]
 8007e08:	b124      	cbz	r4, 8007e14 <iprintf+0x14>
 8007e0a:	69a3      	ldr	r3, [r4, #24]
 8007e0c:	b913      	cbnz	r3, 8007e14 <iprintf+0x14>
 8007e0e:	4620      	mov	r0, r4
 8007e10:	f000 f88c 	bl	8007f2c <__sinit>
 8007e14:	ab05      	add	r3, sp, #20
 8007e16:	9a04      	ldr	r2, [sp, #16]
 8007e18:	68a1      	ldr	r1, [r4, #8]
 8007e1a:	9301      	str	r3, [sp, #4]
 8007e1c:	4620      	mov	r0, r4
 8007e1e:	f000 f95b 	bl	80080d8 <_vfiprintf_r>
 8007e22:	b002      	add	sp, #8
 8007e24:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007e28:	b004      	add	sp, #16
 8007e2a:	4770      	bx	lr
 8007e2c:	2000002c 	.word	0x2000002c

08007e30 <putchar>:
 8007e30:	4b09      	ldr	r3, [pc, #36]	; (8007e58 <putchar+0x28>)
 8007e32:	b513      	push	{r0, r1, r4, lr}
 8007e34:	681c      	ldr	r4, [r3, #0]
 8007e36:	4601      	mov	r1, r0
 8007e38:	b134      	cbz	r4, 8007e48 <putchar+0x18>
 8007e3a:	69a3      	ldr	r3, [r4, #24]
 8007e3c:	b923      	cbnz	r3, 8007e48 <putchar+0x18>
 8007e3e:	9001      	str	r0, [sp, #4]
 8007e40:	4620      	mov	r0, r4
 8007e42:	f000 f873 	bl	8007f2c <__sinit>
 8007e46:	9901      	ldr	r1, [sp, #4]
 8007e48:	68a2      	ldr	r2, [r4, #8]
 8007e4a:	4620      	mov	r0, r4
 8007e4c:	b002      	add	sp, #8
 8007e4e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007e52:	f000 bc05 	b.w	8008660 <_putc_r>
 8007e56:	bf00      	nop
 8007e58:	2000002c 	.word	0x2000002c

08007e5c <_sbrk_r>:
 8007e5c:	b538      	push	{r3, r4, r5, lr}
 8007e5e:	4d06      	ldr	r5, [pc, #24]	; (8007e78 <_sbrk_r+0x1c>)
 8007e60:	2300      	movs	r3, #0
 8007e62:	4604      	mov	r4, r0
 8007e64:	4608      	mov	r0, r1
 8007e66:	602b      	str	r3, [r5, #0]
 8007e68:	f7f8 fdc6 	bl	80009f8 <_sbrk>
 8007e6c:	1c43      	adds	r3, r0, #1
 8007e6e:	d102      	bne.n	8007e76 <_sbrk_r+0x1a>
 8007e70:	682b      	ldr	r3, [r5, #0]
 8007e72:	b103      	cbz	r3, 8007e76 <_sbrk_r+0x1a>
 8007e74:	6023      	str	r3, [r4, #0]
 8007e76:	bd38      	pop	{r3, r4, r5, pc}
 8007e78:	200008b4 	.word	0x200008b4

08007e7c <std>:
 8007e7c:	2300      	movs	r3, #0
 8007e7e:	b510      	push	{r4, lr}
 8007e80:	4604      	mov	r4, r0
 8007e82:	e9c0 3300 	strd	r3, r3, [r0]
 8007e86:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8007e8a:	6083      	str	r3, [r0, #8]
 8007e8c:	8181      	strh	r1, [r0, #12]
 8007e8e:	6643      	str	r3, [r0, #100]	; 0x64
 8007e90:	81c2      	strh	r2, [r0, #14]
 8007e92:	6183      	str	r3, [r0, #24]
 8007e94:	4619      	mov	r1, r3
 8007e96:	2208      	movs	r2, #8
 8007e98:	305c      	adds	r0, #92	; 0x5c
 8007e9a:	f7ff feff 	bl	8007c9c <memset>
 8007e9e:	4b05      	ldr	r3, [pc, #20]	; (8007eb4 <std+0x38>)
 8007ea0:	6263      	str	r3, [r4, #36]	; 0x24
 8007ea2:	4b05      	ldr	r3, [pc, #20]	; (8007eb8 <std+0x3c>)
 8007ea4:	62a3      	str	r3, [r4, #40]	; 0x28
 8007ea6:	4b05      	ldr	r3, [pc, #20]	; (8007ebc <std+0x40>)
 8007ea8:	62e3      	str	r3, [r4, #44]	; 0x2c
 8007eaa:	4b05      	ldr	r3, [pc, #20]	; (8007ec0 <std+0x44>)
 8007eac:	6224      	str	r4, [r4, #32]
 8007eae:	6323      	str	r3, [r4, #48]	; 0x30
 8007eb0:	bd10      	pop	{r4, pc}
 8007eb2:	bf00      	nop
 8007eb4:	080086f1 	.word	0x080086f1
 8007eb8:	08008713 	.word	0x08008713
 8007ebc:	0800874b 	.word	0x0800874b
 8007ec0:	0800876f 	.word	0x0800876f

08007ec4 <_cleanup_r>:
 8007ec4:	4901      	ldr	r1, [pc, #4]	; (8007ecc <_cleanup_r+0x8>)
 8007ec6:	f000 b8af 	b.w	8008028 <_fwalk_reent>
 8007eca:	bf00      	nop
 8007ecc:	08008a49 	.word	0x08008a49

08007ed0 <__sfmoreglue>:
 8007ed0:	b570      	push	{r4, r5, r6, lr}
 8007ed2:	1e4a      	subs	r2, r1, #1
 8007ed4:	2568      	movs	r5, #104	; 0x68
 8007ed6:	4355      	muls	r5, r2
 8007ed8:	460e      	mov	r6, r1
 8007eda:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8007ede:	f7ff ff35 	bl	8007d4c <_malloc_r>
 8007ee2:	4604      	mov	r4, r0
 8007ee4:	b140      	cbz	r0, 8007ef8 <__sfmoreglue+0x28>
 8007ee6:	2100      	movs	r1, #0
 8007ee8:	e9c0 1600 	strd	r1, r6, [r0]
 8007eec:	300c      	adds	r0, #12
 8007eee:	60a0      	str	r0, [r4, #8]
 8007ef0:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8007ef4:	f7ff fed2 	bl	8007c9c <memset>
 8007ef8:	4620      	mov	r0, r4
 8007efa:	bd70      	pop	{r4, r5, r6, pc}

08007efc <__sfp_lock_acquire>:
 8007efc:	4801      	ldr	r0, [pc, #4]	; (8007f04 <__sfp_lock_acquire+0x8>)
 8007efe:	f000 b8b3 	b.w	8008068 <__retarget_lock_acquire_recursive>
 8007f02:	bf00      	nop
 8007f04:	200008b3 	.word	0x200008b3

08007f08 <__sfp_lock_release>:
 8007f08:	4801      	ldr	r0, [pc, #4]	; (8007f10 <__sfp_lock_release+0x8>)
 8007f0a:	f000 b8ae 	b.w	800806a <__retarget_lock_release_recursive>
 8007f0e:	bf00      	nop
 8007f10:	200008b3 	.word	0x200008b3

08007f14 <__sinit_lock_acquire>:
 8007f14:	4801      	ldr	r0, [pc, #4]	; (8007f1c <__sinit_lock_acquire+0x8>)
 8007f16:	f000 b8a7 	b.w	8008068 <__retarget_lock_acquire_recursive>
 8007f1a:	bf00      	nop
 8007f1c:	200008ae 	.word	0x200008ae

08007f20 <__sinit_lock_release>:
 8007f20:	4801      	ldr	r0, [pc, #4]	; (8007f28 <__sinit_lock_release+0x8>)
 8007f22:	f000 b8a2 	b.w	800806a <__retarget_lock_release_recursive>
 8007f26:	bf00      	nop
 8007f28:	200008ae 	.word	0x200008ae

08007f2c <__sinit>:
 8007f2c:	b510      	push	{r4, lr}
 8007f2e:	4604      	mov	r4, r0
 8007f30:	f7ff fff0 	bl	8007f14 <__sinit_lock_acquire>
 8007f34:	69a3      	ldr	r3, [r4, #24]
 8007f36:	b11b      	cbz	r3, 8007f40 <__sinit+0x14>
 8007f38:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007f3c:	f7ff bff0 	b.w	8007f20 <__sinit_lock_release>
 8007f40:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8007f44:	6523      	str	r3, [r4, #80]	; 0x50
 8007f46:	4b13      	ldr	r3, [pc, #76]	; (8007f94 <__sinit+0x68>)
 8007f48:	4a13      	ldr	r2, [pc, #76]	; (8007f98 <__sinit+0x6c>)
 8007f4a:	681b      	ldr	r3, [r3, #0]
 8007f4c:	62a2      	str	r2, [r4, #40]	; 0x28
 8007f4e:	42a3      	cmp	r3, r4
 8007f50:	bf04      	itt	eq
 8007f52:	2301      	moveq	r3, #1
 8007f54:	61a3      	streq	r3, [r4, #24]
 8007f56:	4620      	mov	r0, r4
 8007f58:	f000 f820 	bl	8007f9c <__sfp>
 8007f5c:	6060      	str	r0, [r4, #4]
 8007f5e:	4620      	mov	r0, r4
 8007f60:	f000 f81c 	bl	8007f9c <__sfp>
 8007f64:	60a0      	str	r0, [r4, #8]
 8007f66:	4620      	mov	r0, r4
 8007f68:	f000 f818 	bl	8007f9c <__sfp>
 8007f6c:	2200      	movs	r2, #0
 8007f6e:	60e0      	str	r0, [r4, #12]
 8007f70:	2104      	movs	r1, #4
 8007f72:	6860      	ldr	r0, [r4, #4]
 8007f74:	f7ff ff82 	bl	8007e7c <std>
 8007f78:	68a0      	ldr	r0, [r4, #8]
 8007f7a:	2201      	movs	r2, #1
 8007f7c:	2109      	movs	r1, #9
 8007f7e:	f7ff ff7d 	bl	8007e7c <std>
 8007f82:	68e0      	ldr	r0, [r4, #12]
 8007f84:	2202      	movs	r2, #2
 8007f86:	2112      	movs	r1, #18
 8007f88:	f7ff ff78 	bl	8007e7c <std>
 8007f8c:	2301      	movs	r3, #1
 8007f8e:	61a3      	str	r3, [r4, #24]
 8007f90:	e7d2      	b.n	8007f38 <__sinit+0xc>
 8007f92:	bf00      	nop
 8007f94:	08009424 	.word	0x08009424
 8007f98:	08007ec5 	.word	0x08007ec5

08007f9c <__sfp>:
 8007f9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007f9e:	4607      	mov	r7, r0
 8007fa0:	f7ff ffac 	bl	8007efc <__sfp_lock_acquire>
 8007fa4:	4b1e      	ldr	r3, [pc, #120]	; (8008020 <__sfp+0x84>)
 8007fa6:	681e      	ldr	r6, [r3, #0]
 8007fa8:	69b3      	ldr	r3, [r6, #24]
 8007faa:	b913      	cbnz	r3, 8007fb2 <__sfp+0x16>
 8007fac:	4630      	mov	r0, r6
 8007fae:	f7ff ffbd 	bl	8007f2c <__sinit>
 8007fb2:	3648      	adds	r6, #72	; 0x48
 8007fb4:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8007fb8:	3b01      	subs	r3, #1
 8007fba:	d503      	bpl.n	8007fc4 <__sfp+0x28>
 8007fbc:	6833      	ldr	r3, [r6, #0]
 8007fbe:	b30b      	cbz	r3, 8008004 <__sfp+0x68>
 8007fc0:	6836      	ldr	r6, [r6, #0]
 8007fc2:	e7f7      	b.n	8007fb4 <__sfp+0x18>
 8007fc4:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8007fc8:	b9d5      	cbnz	r5, 8008000 <__sfp+0x64>
 8007fca:	4b16      	ldr	r3, [pc, #88]	; (8008024 <__sfp+0x88>)
 8007fcc:	60e3      	str	r3, [r4, #12]
 8007fce:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8007fd2:	6665      	str	r5, [r4, #100]	; 0x64
 8007fd4:	f000 f847 	bl	8008066 <__retarget_lock_init_recursive>
 8007fd8:	f7ff ff96 	bl	8007f08 <__sfp_lock_release>
 8007fdc:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8007fe0:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8007fe4:	6025      	str	r5, [r4, #0]
 8007fe6:	61a5      	str	r5, [r4, #24]
 8007fe8:	2208      	movs	r2, #8
 8007fea:	4629      	mov	r1, r5
 8007fec:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8007ff0:	f7ff fe54 	bl	8007c9c <memset>
 8007ff4:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8007ff8:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8007ffc:	4620      	mov	r0, r4
 8007ffe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008000:	3468      	adds	r4, #104	; 0x68
 8008002:	e7d9      	b.n	8007fb8 <__sfp+0x1c>
 8008004:	2104      	movs	r1, #4
 8008006:	4638      	mov	r0, r7
 8008008:	f7ff ff62 	bl	8007ed0 <__sfmoreglue>
 800800c:	4604      	mov	r4, r0
 800800e:	6030      	str	r0, [r6, #0]
 8008010:	2800      	cmp	r0, #0
 8008012:	d1d5      	bne.n	8007fc0 <__sfp+0x24>
 8008014:	f7ff ff78 	bl	8007f08 <__sfp_lock_release>
 8008018:	230c      	movs	r3, #12
 800801a:	603b      	str	r3, [r7, #0]
 800801c:	e7ee      	b.n	8007ffc <__sfp+0x60>
 800801e:	bf00      	nop
 8008020:	08009424 	.word	0x08009424
 8008024:	ffff0001 	.word	0xffff0001

08008028 <_fwalk_reent>:
 8008028:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800802c:	4606      	mov	r6, r0
 800802e:	4688      	mov	r8, r1
 8008030:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8008034:	2700      	movs	r7, #0
 8008036:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800803a:	f1b9 0901 	subs.w	r9, r9, #1
 800803e:	d505      	bpl.n	800804c <_fwalk_reent+0x24>
 8008040:	6824      	ldr	r4, [r4, #0]
 8008042:	2c00      	cmp	r4, #0
 8008044:	d1f7      	bne.n	8008036 <_fwalk_reent+0xe>
 8008046:	4638      	mov	r0, r7
 8008048:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800804c:	89ab      	ldrh	r3, [r5, #12]
 800804e:	2b01      	cmp	r3, #1
 8008050:	d907      	bls.n	8008062 <_fwalk_reent+0x3a>
 8008052:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8008056:	3301      	adds	r3, #1
 8008058:	d003      	beq.n	8008062 <_fwalk_reent+0x3a>
 800805a:	4629      	mov	r1, r5
 800805c:	4630      	mov	r0, r6
 800805e:	47c0      	blx	r8
 8008060:	4307      	orrs	r7, r0
 8008062:	3568      	adds	r5, #104	; 0x68
 8008064:	e7e9      	b.n	800803a <_fwalk_reent+0x12>

08008066 <__retarget_lock_init_recursive>:
 8008066:	4770      	bx	lr

08008068 <__retarget_lock_acquire_recursive>:
 8008068:	4770      	bx	lr

0800806a <__retarget_lock_release_recursive>:
 800806a:	4770      	bx	lr

0800806c <__malloc_lock>:
 800806c:	4801      	ldr	r0, [pc, #4]	; (8008074 <__malloc_lock+0x8>)
 800806e:	f7ff bffb 	b.w	8008068 <__retarget_lock_acquire_recursive>
 8008072:	bf00      	nop
 8008074:	200008af 	.word	0x200008af

08008078 <__malloc_unlock>:
 8008078:	4801      	ldr	r0, [pc, #4]	; (8008080 <__malloc_unlock+0x8>)
 800807a:	f7ff bff6 	b.w	800806a <__retarget_lock_release_recursive>
 800807e:	bf00      	nop
 8008080:	200008af 	.word	0x200008af

08008084 <__sfputc_r>:
 8008084:	6893      	ldr	r3, [r2, #8]
 8008086:	3b01      	subs	r3, #1
 8008088:	2b00      	cmp	r3, #0
 800808a:	b410      	push	{r4}
 800808c:	6093      	str	r3, [r2, #8]
 800808e:	da08      	bge.n	80080a2 <__sfputc_r+0x1e>
 8008090:	6994      	ldr	r4, [r2, #24]
 8008092:	42a3      	cmp	r3, r4
 8008094:	db01      	blt.n	800809a <__sfputc_r+0x16>
 8008096:	290a      	cmp	r1, #10
 8008098:	d103      	bne.n	80080a2 <__sfputc_r+0x1e>
 800809a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800809e:	f000 bb6b 	b.w	8008778 <__swbuf_r>
 80080a2:	6813      	ldr	r3, [r2, #0]
 80080a4:	1c58      	adds	r0, r3, #1
 80080a6:	6010      	str	r0, [r2, #0]
 80080a8:	7019      	strb	r1, [r3, #0]
 80080aa:	4608      	mov	r0, r1
 80080ac:	f85d 4b04 	ldr.w	r4, [sp], #4
 80080b0:	4770      	bx	lr

080080b2 <__sfputs_r>:
 80080b2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80080b4:	4606      	mov	r6, r0
 80080b6:	460f      	mov	r7, r1
 80080b8:	4614      	mov	r4, r2
 80080ba:	18d5      	adds	r5, r2, r3
 80080bc:	42ac      	cmp	r4, r5
 80080be:	d101      	bne.n	80080c4 <__sfputs_r+0x12>
 80080c0:	2000      	movs	r0, #0
 80080c2:	e007      	b.n	80080d4 <__sfputs_r+0x22>
 80080c4:	f814 1b01 	ldrb.w	r1, [r4], #1
 80080c8:	463a      	mov	r2, r7
 80080ca:	4630      	mov	r0, r6
 80080cc:	f7ff ffda 	bl	8008084 <__sfputc_r>
 80080d0:	1c43      	adds	r3, r0, #1
 80080d2:	d1f3      	bne.n	80080bc <__sfputs_r+0xa>
 80080d4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080080d8 <_vfiprintf_r>:
 80080d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80080dc:	460d      	mov	r5, r1
 80080de:	b09d      	sub	sp, #116	; 0x74
 80080e0:	4614      	mov	r4, r2
 80080e2:	4698      	mov	r8, r3
 80080e4:	4606      	mov	r6, r0
 80080e6:	b118      	cbz	r0, 80080f0 <_vfiprintf_r+0x18>
 80080e8:	6983      	ldr	r3, [r0, #24]
 80080ea:	b90b      	cbnz	r3, 80080f0 <_vfiprintf_r+0x18>
 80080ec:	f7ff ff1e 	bl	8007f2c <__sinit>
 80080f0:	4b89      	ldr	r3, [pc, #548]	; (8008318 <_vfiprintf_r+0x240>)
 80080f2:	429d      	cmp	r5, r3
 80080f4:	d11b      	bne.n	800812e <_vfiprintf_r+0x56>
 80080f6:	6875      	ldr	r5, [r6, #4]
 80080f8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80080fa:	07d9      	lsls	r1, r3, #31
 80080fc:	d405      	bmi.n	800810a <_vfiprintf_r+0x32>
 80080fe:	89ab      	ldrh	r3, [r5, #12]
 8008100:	059a      	lsls	r2, r3, #22
 8008102:	d402      	bmi.n	800810a <_vfiprintf_r+0x32>
 8008104:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8008106:	f7ff ffaf 	bl	8008068 <__retarget_lock_acquire_recursive>
 800810a:	89ab      	ldrh	r3, [r5, #12]
 800810c:	071b      	lsls	r3, r3, #28
 800810e:	d501      	bpl.n	8008114 <_vfiprintf_r+0x3c>
 8008110:	692b      	ldr	r3, [r5, #16]
 8008112:	b9eb      	cbnz	r3, 8008150 <_vfiprintf_r+0x78>
 8008114:	4629      	mov	r1, r5
 8008116:	4630      	mov	r0, r6
 8008118:	f000 fb92 	bl	8008840 <__swsetup_r>
 800811c:	b1c0      	cbz	r0, 8008150 <_vfiprintf_r+0x78>
 800811e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8008120:	07dc      	lsls	r4, r3, #31
 8008122:	d50e      	bpl.n	8008142 <_vfiprintf_r+0x6a>
 8008124:	f04f 30ff 	mov.w	r0, #4294967295
 8008128:	b01d      	add	sp, #116	; 0x74
 800812a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800812e:	4b7b      	ldr	r3, [pc, #492]	; (800831c <_vfiprintf_r+0x244>)
 8008130:	429d      	cmp	r5, r3
 8008132:	d101      	bne.n	8008138 <_vfiprintf_r+0x60>
 8008134:	68b5      	ldr	r5, [r6, #8]
 8008136:	e7df      	b.n	80080f8 <_vfiprintf_r+0x20>
 8008138:	4b79      	ldr	r3, [pc, #484]	; (8008320 <_vfiprintf_r+0x248>)
 800813a:	429d      	cmp	r5, r3
 800813c:	bf08      	it	eq
 800813e:	68f5      	ldreq	r5, [r6, #12]
 8008140:	e7da      	b.n	80080f8 <_vfiprintf_r+0x20>
 8008142:	89ab      	ldrh	r3, [r5, #12]
 8008144:	0598      	lsls	r0, r3, #22
 8008146:	d4ed      	bmi.n	8008124 <_vfiprintf_r+0x4c>
 8008148:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800814a:	f7ff ff8e 	bl	800806a <__retarget_lock_release_recursive>
 800814e:	e7e9      	b.n	8008124 <_vfiprintf_r+0x4c>
 8008150:	2300      	movs	r3, #0
 8008152:	9309      	str	r3, [sp, #36]	; 0x24
 8008154:	2320      	movs	r3, #32
 8008156:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800815a:	f8cd 800c 	str.w	r8, [sp, #12]
 800815e:	2330      	movs	r3, #48	; 0x30
 8008160:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8008324 <_vfiprintf_r+0x24c>
 8008164:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8008168:	f04f 0901 	mov.w	r9, #1
 800816c:	4623      	mov	r3, r4
 800816e:	469a      	mov	sl, r3
 8008170:	f813 2b01 	ldrb.w	r2, [r3], #1
 8008174:	b10a      	cbz	r2, 800817a <_vfiprintf_r+0xa2>
 8008176:	2a25      	cmp	r2, #37	; 0x25
 8008178:	d1f9      	bne.n	800816e <_vfiprintf_r+0x96>
 800817a:	ebba 0b04 	subs.w	fp, sl, r4
 800817e:	d00b      	beq.n	8008198 <_vfiprintf_r+0xc0>
 8008180:	465b      	mov	r3, fp
 8008182:	4622      	mov	r2, r4
 8008184:	4629      	mov	r1, r5
 8008186:	4630      	mov	r0, r6
 8008188:	f7ff ff93 	bl	80080b2 <__sfputs_r>
 800818c:	3001      	adds	r0, #1
 800818e:	f000 80aa 	beq.w	80082e6 <_vfiprintf_r+0x20e>
 8008192:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8008194:	445a      	add	r2, fp
 8008196:	9209      	str	r2, [sp, #36]	; 0x24
 8008198:	f89a 3000 	ldrb.w	r3, [sl]
 800819c:	2b00      	cmp	r3, #0
 800819e:	f000 80a2 	beq.w	80082e6 <_vfiprintf_r+0x20e>
 80081a2:	2300      	movs	r3, #0
 80081a4:	f04f 32ff 	mov.w	r2, #4294967295
 80081a8:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80081ac:	f10a 0a01 	add.w	sl, sl, #1
 80081b0:	9304      	str	r3, [sp, #16]
 80081b2:	9307      	str	r3, [sp, #28]
 80081b4:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80081b8:	931a      	str	r3, [sp, #104]	; 0x68
 80081ba:	4654      	mov	r4, sl
 80081bc:	2205      	movs	r2, #5
 80081be:	f814 1b01 	ldrb.w	r1, [r4], #1
 80081c2:	4858      	ldr	r0, [pc, #352]	; (8008324 <_vfiprintf_r+0x24c>)
 80081c4:	f7f8 f80c 	bl	80001e0 <memchr>
 80081c8:	9a04      	ldr	r2, [sp, #16]
 80081ca:	b9d8      	cbnz	r0, 8008204 <_vfiprintf_r+0x12c>
 80081cc:	06d1      	lsls	r1, r2, #27
 80081ce:	bf44      	itt	mi
 80081d0:	2320      	movmi	r3, #32
 80081d2:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80081d6:	0713      	lsls	r3, r2, #28
 80081d8:	bf44      	itt	mi
 80081da:	232b      	movmi	r3, #43	; 0x2b
 80081dc:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80081e0:	f89a 3000 	ldrb.w	r3, [sl]
 80081e4:	2b2a      	cmp	r3, #42	; 0x2a
 80081e6:	d015      	beq.n	8008214 <_vfiprintf_r+0x13c>
 80081e8:	9a07      	ldr	r2, [sp, #28]
 80081ea:	4654      	mov	r4, sl
 80081ec:	2000      	movs	r0, #0
 80081ee:	f04f 0c0a 	mov.w	ip, #10
 80081f2:	4621      	mov	r1, r4
 80081f4:	f811 3b01 	ldrb.w	r3, [r1], #1
 80081f8:	3b30      	subs	r3, #48	; 0x30
 80081fa:	2b09      	cmp	r3, #9
 80081fc:	d94e      	bls.n	800829c <_vfiprintf_r+0x1c4>
 80081fe:	b1b0      	cbz	r0, 800822e <_vfiprintf_r+0x156>
 8008200:	9207      	str	r2, [sp, #28]
 8008202:	e014      	b.n	800822e <_vfiprintf_r+0x156>
 8008204:	eba0 0308 	sub.w	r3, r0, r8
 8008208:	fa09 f303 	lsl.w	r3, r9, r3
 800820c:	4313      	orrs	r3, r2
 800820e:	9304      	str	r3, [sp, #16]
 8008210:	46a2      	mov	sl, r4
 8008212:	e7d2      	b.n	80081ba <_vfiprintf_r+0xe2>
 8008214:	9b03      	ldr	r3, [sp, #12]
 8008216:	1d19      	adds	r1, r3, #4
 8008218:	681b      	ldr	r3, [r3, #0]
 800821a:	9103      	str	r1, [sp, #12]
 800821c:	2b00      	cmp	r3, #0
 800821e:	bfbb      	ittet	lt
 8008220:	425b      	neglt	r3, r3
 8008222:	f042 0202 	orrlt.w	r2, r2, #2
 8008226:	9307      	strge	r3, [sp, #28]
 8008228:	9307      	strlt	r3, [sp, #28]
 800822a:	bfb8      	it	lt
 800822c:	9204      	strlt	r2, [sp, #16]
 800822e:	7823      	ldrb	r3, [r4, #0]
 8008230:	2b2e      	cmp	r3, #46	; 0x2e
 8008232:	d10c      	bne.n	800824e <_vfiprintf_r+0x176>
 8008234:	7863      	ldrb	r3, [r4, #1]
 8008236:	2b2a      	cmp	r3, #42	; 0x2a
 8008238:	d135      	bne.n	80082a6 <_vfiprintf_r+0x1ce>
 800823a:	9b03      	ldr	r3, [sp, #12]
 800823c:	1d1a      	adds	r2, r3, #4
 800823e:	681b      	ldr	r3, [r3, #0]
 8008240:	9203      	str	r2, [sp, #12]
 8008242:	2b00      	cmp	r3, #0
 8008244:	bfb8      	it	lt
 8008246:	f04f 33ff 	movlt.w	r3, #4294967295
 800824a:	3402      	adds	r4, #2
 800824c:	9305      	str	r3, [sp, #20]
 800824e:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8008334 <_vfiprintf_r+0x25c>
 8008252:	7821      	ldrb	r1, [r4, #0]
 8008254:	2203      	movs	r2, #3
 8008256:	4650      	mov	r0, sl
 8008258:	f7f7 ffc2 	bl	80001e0 <memchr>
 800825c:	b140      	cbz	r0, 8008270 <_vfiprintf_r+0x198>
 800825e:	2340      	movs	r3, #64	; 0x40
 8008260:	eba0 000a 	sub.w	r0, r0, sl
 8008264:	fa03 f000 	lsl.w	r0, r3, r0
 8008268:	9b04      	ldr	r3, [sp, #16]
 800826a:	4303      	orrs	r3, r0
 800826c:	3401      	adds	r4, #1
 800826e:	9304      	str	r3, [sp, #16]
 8008270:	f814 1b01 	ldrb.w	r1, [r4], #1
 8008274:	482c      	ldr	r0, [pc, #176]	; (8008328 <_vfiprintf_r+0x250>)
 8008276:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800827a:	2206      	movs	r2, #6
 800827c:	f7f7 ffb0 	bl	80001e0 <memchr>
 8008280:	2800      	cmp	r0, #0
 8008282:	d03f      	beq.n	8008304 <_vfiprintf_r+0x22c>
 8008284:	4b29      	ldr	r3, [pc, #164]	; (800832c <_vfiprintf_r+0x254>)
 8008286:	bb1b      	cbnz	r3, 80082d0 <_vfiprintf_r+0x1f8>
 8008288:	9b03      	ldr	r3, [sp, #12]
 800828a:	3307      	adds	r3, #7
 800828c:	f023 0307 	bic.w	r3, r3, #7
 8008290:	3308      	adds	r3, #8
 8008292:	9303      	str	r3, [sp, #12]
 8008294:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008296:	443b      	add	r3, r7
 8008298:	9309      	str	r3, [sp, #36]	; 0x24
 800829a:	e767      	b.n	800816c <_vfiprintf_r+0x94>
 800829c:	fb0c 3202 	mla	r2, ip, r2, r3
 80082a0:	460c      	mov	r4, r1
 80082a2:	2001      	movs	r0, #1
 80082a4:	e7a5      	b.n	80081f2 <_vfiprintf_r+0x11a>
 80082a6:	2300      	movs	r3, #0
 80082a8:	3401      	adds	r4, #1
 80082aa:	9305      	str	r3, [sp, #20]
 80082ac:	4619      	mov	r1, r3
 80082ae:	f04f 0c0a 	mov.w	ip, #10
 80082b2:	4620      	mov	r0, r4
 80082b4:	f810 2b01 	ldrb.w	r2, [r0], #1
 80082b8:	3a30      	subs	r2, #48	; 0x30
 80082ba:	2a09      	cmp	r2, #9
 80082bc:	d903      	bls.n	80082c6 <_vfiprintf_r+0x1ee>
 80082be:	2b00      	cmp	r3, #0
 80082c0:	d0c5      	beq.n	800824e <_vfiprintf_r+0x176>
 80082c2:	9105      	str	r1, [sp, #20]
 80082c4:	e7c3      	b.n	800824e <_vfiprintf_r+0x176>
 80082c6:	fb0c 2101 	mla	r1, ip, r1, r2
 80082ca:	4604      	mov	r4, r0
 80082cc:	2301      	movs	r3, #1
 80082ce:	e7f0      	b.n	80082b2 <_vfiprintf_r+0x1da>
 80082d0:	ab03      	add	r3, sp, #12
 80082d2:	9300      	str	r3, [sp, #0]
 80082d4:	462a      	mov	r2, r5
 80082d6:	4b16      	ldr	r3, [pc, #88]	; (8008330 <_vfiprintf_r+0x258>)
 80082d8:	a904      	add	r1, sp, #16
 80082da:	4630      	mov	r0, r6
 80082dc:	f3af 8000 	nop.w
 80082e0:	4607      	mov	r7, r0
 80082e2:	1c78      	adds	r0, r7, #1
 80082e4:	d1d6      	bne.n	8008294 <_vfiprintf_r+0x1bc>
 80082e6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80082e8:	07d9      	lsls	r1, r3, #31
 80082ea:	d405      	bmi.n	80082f8 <_vfiprintf_r+0x220>
 80082ec:	89ab      	ldrh	r3, [r5, #12]
 80082ee:	059a      	lsls	r2, r3, #22
 80082f0:	d402      	bmi.n	80082f8 <_vfiprintf_r+0x220>
 80082f2:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80082f4:	f7ff feb9 	bl	800806a <__retarget_lock_release_recursive>
 80082f8:	89ab      	ldrh	r3, [r5, #12]
 80082fa:	065b      	lsls	r3, r3, #25
 80082fc:	f53f af12 	bmi.w	8008124 <_vfiprintf_r+0x4c>
 8008300:	9809      	ldr	r0, [sp, #36]	; 0x24
 8008302:	e711      	b.n	8008128 <_vfiprintf_r+0x50>
 8008304:	ab03      	add	r3, sp, #12
 8008306:	9300      	str	r3, [sp, #0]
 8008308:	462a      	mov	r2, r5
 800830a:	4b09      	ldr	r3, [pc, #36]	; (8008330 <_vfiprintf_r+0x258>)
 800830c:	a904      	add	r1, sp, #16
 800830e:	4630      	mov	r0, r6
 8008310:	f000 f880 	bl	8008414 <_printf_i>
 8008314:	e7e4      	b.n	80082e0 <_vfiprintf_r+0x208>
 8008316:	bf00      	nop
 8008318:	08009448 	.word	0x08009448
 800831c:	08009468 	.word	0x08009468
 8008320:	08009428 	.word	0x08009428
 8008324:	08009488 	.word	0x08009488
 8008328:	08009492 	.word	0x08009492
 800832c:	00000000 	.word	0x00000000
 8008330:	080080b3 	.word	0x080080b3
 8008334:	0800948e 	.word	0x0800948e

08008338 <_printf_common>:
 8008338:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800833c:	4616      	mov	r6, r2
 800833e:	4699      	mov	r9, r3
 8008340:	688a      	ldr	r2, [r1, #8]
 8008342:	690b      	ldr	r3, [r1, #16]
 8008344:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8008348:	4293      	cmp	r3, r2
 800834a:	bfb8      	it	lt
 800834c:	4613      	movlt	r3, r2
 800834e:	6033      	str	r3, [r6, #0]
 8008350:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8008354:	4607      	mov	r7, r0
 8008356:	460c      	mov	r4, r1
 8008358:	b10a      	cbz	r2, 800835e <_printf_common+0x26>
 800835a:	3301      	adds	r3, #1
 800835c:	6033      	str	r3, [r6, #0]
 800835e:	6823      	ldr	r3, [r4, #0]
 8008360:	0699      	lsls	r1, r3, #26
 8008362:	bf42      	ittt	mi
 8008364:	6833      	ldrmi	r3, [r6, #0]
 8008366:	3302      	addmi	r3, #2
 8008368:	6033      	strmi	r3, [r6, #0]
 800836a:	6825      	ldr	r5, [r4, #0]
 800836c:	f015 0506 	ands.w	r5, r5, #6
 8008370:	d106      	bne.n	8008380 <_printf_common+0x48>
 8008372:	f104 0a19 	add.w	sl, r4, #25
 8008376:	68e3      	ldr	r3, [r4, #12]
 8008378:	6832      	ldr	r2, [r6, #0]
 800837a:	1a9b      	subs	r3, r3, r2
 800837c:	42ab      	cmp	r3, r5
 800837e:	dc26      	bgt.n	80083ce <_printf_common+0x96>
 8008380:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8008384:	1e13      	subs	r3, r2, #0
 8008386:	6822      	ldr	r2, [r4, #0]
 8008388:	bf18      	it	ne
 800838a:	2301      	movne	r3, #1
 800838c:	0692      	lsls	r2, r2, #26
 800838e:	d42b      	bmi.n	80083e8 <_printf_common+0xb0>
 8008390:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8008394:	4649      	mov	r1, r9
 8008396:	4638      	mov	r0, r7
 8008398:	47c0      	blx	r8
 800839a:	3001      	adds	r0, #1
 800839c:	d01e      	beq.n	80083dc <_printf_common+0xa4>
 800839e:	6823      	ldr	r3, [r4, #0]
 80083a0:	68e5      	ldr	r5, [r4, #12]
 80083a2:	6832      	ldr	r2, [r6, #0]
 80083a4:	f003 0306 	and.w	r3, r3, #6
 80083a8:	2b04      	cmp	r3, #4
 80083aa:	bf08      	it	eq
 80083ac:	1aad      	subeq	r5, r5, r2
 80083ae:	68a3      	ldr	r3, [r4, #8]
 80083b0:	6922      	ldr	r2, [r4, #16]
 80083b2:	bf0c      	ite	eq
 80083b4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80083b8:	2500      	movne	r5, #0
 80083ba:	4293      	cmp	r3, r2
 80083bc:	bfc4      	itt	gt
 80083be:	1a9b      	subgt	r3, r3, r2
 80083c0:	18ed      	addgt	r5, r5, r3
 80083c2:	2600      	movs	r6, #0
 80083c4:	341a      	adds	r4, #26
 80083c6:	42b5      	cmp	r5, r6
 80083c8:	d11a      	bne.n	8008400 <_printf_common+0xc8>
 80083ca:	2000      	movs	r0, #0
 80083cc:	e008      	b.n	80083e0 <_printf_common+0xa8>
 80083ce:	2301      	movs	r3, #1
 80083d0:	4652      	mov	r2, sl
 80083d2:	4649      	mov	r1, r9
 80083d4:	4638      	mov	r0, r7
 80083d6:	47c0      	blx	r8
 80083d8:	3001      	adds	r0, #1
 80083da:	d103      	bne.n	80083e4 <_printf_common+0xac>
 80083dc:	f04f 30ff 	mov.w	r0, #4294967295
 80083e0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80083e4:	3501      	adds	r5, #1
 80083e6:	e7c6      	b.n	8008376 <_printf_common+0x3e>
 80083e8:	18e1      	adds	r1, r4, r3
 80083ea:	1c5a      	adds	r2, r3, #1
 80083ec:	2030      	movs	r0, #48	; 0x30
 80083ee:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80083f2:	4422      	add	r2, r4
 80083f4:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80083f8:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80083fc:	3302      	adds	r3, #2
 80083fe:	e7c7      	b.n	8008390 <_printf_common+0x58>
 8008400:	2301      	movs	r3, #1
 8008402:	4622      	mov	r2, r4
 8008404:	4649      	mov	r1, r9
 8008406:	4638      	mov	r0, r7
 8008408:	47c0      	blx	r8
 800840a:	3001      	adds	r0, #1
 800840c:	d0e6      	beq.n	80083dc <_printf_common+0xa4>
 800840e:	3601      	adds	r6, #1
 8008410:	e7d9      	b.n	80083c6 <_printf_common+0x8e>
	...

08008414 <_printf_i>:
 8008414:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8008418:	460c      	mov	r4, r1
 800841a:	4691      	mov	r9, r2
 800841c:	7e27      	ldrb	r7, [r4, #24]
 800841e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8008420:	2f78      	cmp	r7, #120	; 0x78
 8008422:	4680      	mov	r8, r0
 8008424:	469a      	mov	sl, r3
 8008426:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800842a:	d807      	bhi.n	800843c <_printf_i+0x28>
 800842c:	2f62      	cmp	r7, #98	; 0x62
 800842e:	d80a      	bhi.n	8008446 <_printf_i+0x32>
 8008430:	2f00      	cmp	r7, #0
 8008432:	f000 80d8 	beq.w	80085e6 <_printf_i+0x1d2>
 8008436:	2f58      	cmp	r7, #88	; 0x58
 8008438:	f000 80a3 	beq.w	8008582 <_printf_i+0x16e>
 800843c:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8008440:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8008444:	e03a      	b.n	80084bc <_printf_i+0xa8>
 8008446:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800844a:	2b15      	cmp	r3, #21
 800844c:	d8f6      	bhi.n	800843c <_printf_i+0x28>
 800844e:	a001      	add	r0, pc, #4	; (adr r0, 8008454 <_printf_i+0x40>)
 8008450:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8008454:	080084ad 	.word	0x080084ad
 8008458:	080084c1 	.word	0x080084c1
 800845c:	0800843d 	.word	0x0800843d
 8008460:	0800843d 	.word	0x0800843d
 8008464:	0800843d 	.word	0x0800843d
 8008468:	0800843d 	.word	0x0800843d
 800846c:	080084c1 	.word	0x080084c1
 8008470:	0800843d 	.word	0x0800843d
 8008474:	0800843d 	.word	0x0800843d
 8008478:	0800843d 	.word	0x0800843d
 800847c:	0800843d 	.word	0x0800843d
 8008480:	080085cd 	.word	0x080085cd
 8008484:	080084f1 	.word	0x080084f1
 8008488:	080085af 	.word	0x080085af
 800848c:	0800843d 	.word	0x0800843d
 8008490:	0800843d 	.word	0x0800843d
 8008494:	080085ef 	.word	0x080085ef
 8008498:	0800843d 	.word	0x0800843d
 800849c:	080084f1 	.word	0x080084f1
 80084a0:	0800843d 	.word	0x0800843d
 80084a4:	0800843d 	.word	0x0800843d
 80084a8:	080085b7 	.word	0x080085b7
 80084ac:	680b      	ldr	r3, [r1, #0]
 80084ae:	1d1a      	adds	r2, r3, #4
 80084b0:	681b      	ldr	r3, [r3, #0]
 80084b2:	600a      	str	r2, [r1, #0]
 80084b4:	f104 0642 	add.w	r6, r4, #66	; 0x42
 80084b8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80084bc:	2301      	movs	r3, #1
 80084be:	e0a3      	b.n	8008608 <_printf_i+0x1f4>
 80084c0:	6825      	ldr	r5, [r4, #0]
 80084c2:	6808      	ldr	r0, [r1, #0]
 80084c4:	062e      	lsls	r6, r5, #24
 80084c6:	f100 0304 	add.w	r3, r0, #4
 80084ca:	d50a      	bpl.n	80084e2 <_printf_i+0xce>
 80084cc:	6805      	ldr	r5, [r0, #0]
 80084ce:	600b      	str	r3, [r1, #0]
 80084d0:	2d00      	cmp	r5, #0
 80084d2:	da03      	bge.n	80084dc <_printf_i+0xc8>
 80084d4:	232d      	movs	r3, #45	; 0x2d
 80084d6:	426d      	negs	r5, r5
 80084d8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80084dc:	485e      	ldr	r0, [pc, #376]	; (8008658 <_printf_i+0x244>)
 80084de:	230a      	movs	r3, #10
 80084e0:	e019      	b.n	8008516 <_printf_i+0x102>
 80084e2:	f015 0f40 	tst.w	r5, #64	; 0x40
 80084e6:	6805      	ldr	r5, [r0, #0]
 80084e8:	600b      	str	r3, [r1, #0]
 80084ea:	bf18      	it	ne
 80084ec:	b22d      	sxthne	r5, r5
 80084ee:	e7ef      	b.n	80084d0 <_printf_i+0xbc>
 80084f0:	680b      	ldr	r3, [r1, #0]
 80084f2:	6825      	ldr	r5, [r4, #0]
 80084f4:	1d18      	adds	r0, r3, #4
 80084f6:	6008      	str	r0, [r1, #0]
 80084f8:	0628      	lsls	r0, r5, #24
 80084fa:	d501      	bpl.n	8008500 <_printf_i+0xec>
 80084fc:	681d      	ldr	r5, [r3, #0]
 80084fe:	e002      	b.n	8008506 <_printf_i+0xf2>
 8008500:	0669      	lsls	r1, r5, #25
 8008502:	d5fb      	bpl.n	80084fc <_printf_i+0xe8>
 8008504:	881d      	ldrh	r5, [r3, #0]
 8008506:	4854      	ldr	r0, [pc, #336]	; (8008658 <_printf_i+0x244>)
 8008508:	2f6f      	cmp	r7, #111	; 0x6f
 800850a:	bf0c      	ite	eq
 800850c:	2308      	moveq	r3, #8
 800850e:	230a      	movne	r3, #10
 8008510:	2100      	movs	r1, #0
 8008512:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8008516:	6866      	ldr	r6, [r4, #4]
 8008518:	60a6      	str	r6, [r4, #8]
 800851a:	2e00      	cmp	r6, #0
 800851c:	bfa2      	ittt	ge
 800851e:	6821      	ldrge	r1, [r4, #0]
 8008520:	f021 0104 	bicge.w	r1, r1, #4
 8008524:	6021      	strge	r1, [r4, #0]
 8008526:	b90d      	cbnz	r5, 800852c <_printf_i+0x118>
 8008528:	2e00      	cmp	r6, #0
 800852a:	d04d      	beq.n	80085c8 <_printf_i+0x1b4>
 800852c:	4616      	mov	r6, r2
 800852e:	fbb5 f1f3 	udiv	r1, r5, r3
 8008532:	fb03 5711 	mls	r7, r3, r1, r5
 8008536:	5dc7      	ldrb	r7, [r0, r7]
 8008538:	f806 7d01 	strb.w	r7, [r6, #-1]!
 800853c:	462f      	mov	r7, r5
 800853e:	42bb      	cmp	r3, r7
 8008540:	460d      	mov	r5, r1
 8008542:	d9f4      	bls.n	800852e <_printf_i+0x11a>
 8008544:	2b08      	cmp	r3, #8
 8008546:	d10b      	bne.n	8008560 <_printf_i+0x14c>
 8008548:	6823      	ldr	r3, [r4, #0]
 800854a:	07df      	lsls	r7, r3, #31
 800854c:	d508      	bpl.n	8008560 <_printf_i+0x14c>
 800854e:	6923      	ldr	r3, [r4, #16]
 8008550:	6861      	ldr	r1, [r4, #4]
 8008552:	4299      	cmp	r1, r3
 8008554:	bfde      	ittt	le
 8008556:	2330      	movle	r3, #48	; 0x30
 8008558:	f806 3c01 	strble.w	r3, [r6, #-1]
 800855c:	f106 36ff 	addle.w	r6, r6, #4294967295
 8008560:	1b92      	subs	r2, r2, r6
 8008562:	6122      	str	r2, [r4, #16]
 8008564:	f8cd a000 	str.w	sl, [sp]
 8008568:	464b      	mov	r3, r9
 800856a:	aa03      	add	r2, sp, #12
 800856c:	4621      	mov	r1, r4
 800856e:	4640      	mov	r0, r8
 8008570:	f7ff fee2 	bl	8008338 <_printf_common>
 8008574:	3001      	adds	r0, #1
 8008576:	d14c      	bne.n	8008612 <_printf_i+0x1fe>
 8008578:	f04f 30ff 	mov.w	r0, #4294967295
 800857c:	b004      	add	sp, #16
 800857e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008582:	4835      	ldr	r0, [pc, #212]	; (8008658 <_printf_i+0x244>)
 8008584:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8008588:	6823      	ldr	r3, [r4, #0]
 800858a:	680e      	ldr	r6, [r1, #0]
 800858c:	061f      	lsls	r7, r3, #24
 800858e:	f856 5b04 	ldr.w	r5, [r6], #4
 8008592:	600e      	str	r6, [r1, #0]
 8008594:	d514      	bpl.n	80085c0 <_printf_i+0x1ac>
 8008596:	07d9      	lsls	r1, r3, #31
 8008598:	bf44      	itt	mi
 800859a:	f043 0320 	orrmi.w	r3, r3, #32
 800859e:	6023      	strmi	r3, [r4, #0]
 80085a0:	b91d      	cbnz	r5, 80085aa <_printf_i+0x196>
 80085a2:	6823      	ldr	r3, [r4, #0]
 80085a4:	f023 0320 	bic.w	r3, r3, #32
 80085a8:	6023      	str	r3, [r4, #0]
 80085aa:	2310      	movs	r3, #16
 80085ac:	e7b0      	b.n	8008510 <_printf_i+0xfc>
 80085ae:	6823      	ldr	r3, [r4, #0]
 80085b0:	f043 0320 	orr.w	r3, r3, #32
 80085b4:	6023      	str	r3, [r4, #0]
 80085b6:	2378      	movs	r3, #120	; 0x78
 80085b8:	4828      	ldr	r0, [pc, #160]	; (800865c <_printf_i+0x248>)
 80085ba:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80085be:	e7e3      	b.n	8008588 <_printf_i+0x174>
 80085c0:	065e      	lsls	r6, r3, #25
 80085c2:	bf48      	it	mi
 80085c4:	b2ad      	uxthmi	r5, r5
 80085c6:	e7e6      	b.n	8008596 <_printf_i+0x182>
 80085c8:	4616      	mov	r6, r2
 80085ca:	e7bb      	b.n	8008544 <_printf_i+0x130>
 80085cc:	680b      	ldr	r3, [r1, #0]
 80085ce:	6826      	ldr	r6, [r4, #0]
 80085d0:	6960      	ldr	r0, [r4, #20]
 80085d2:	1d1d      	adds	r5, r3, #4
 80085d4:	600d      	str	r5, [r1, #0]
 80085d6:	0635      	lsls	r5, r6, #24
 80085d8:	681b      	ldr	r3, [r3, #0]
 80085da:	d501      	bpl.n	80085e0 <_printf_i+0x1cc>
 80085dc:	6018      	str	r0, [r3, #0]
 80085de:	e002      	b.n	80085e6 <_printf_i+0x1d2>
 80085e0:	0671      	lsls	r1, r6, #25
 80085e2:	d5fb      	bpl.n	80085dc <_printf_i+0x1c8>
 80085e4:	8018      	strh	r0, [r3, #0]
 80085e6:	2300      	movs	r3, #0
 80085e8:	6123      	str	r3, [r4, #16]
 80085ea:	4616      	mov	r6, r2
 80085ec:	e7ba      	b.n	8008564 <_printf_i+0x150>
 80085ee:	680b      	ldr	r3, [r1, #0]
 80085f0:	1d1a      	adds	r2, r3, #4
 80085f2:	600a      	str	r2, [r1, #0]
 80085f4:	681e      	ldr	r6, [r3, #0]
 80085f6:	6862      	ldr	r2, [r4, #4]
 80085f8:	2100      	movs	r1, #0
 80085fa:	4630      	mov	r0, r6
 80085fc:	f7f7 fdf0 	bl	80001e0 <memchr>
 8008600:	b108      	cbz	r0, 8008606 <_printf_i+0x1f2>
 8008602:	1b80      	subs	r0, r0, r6
 8008604:	6060      	str	r0, [r4, #4]
 8008606:	6863      	ldr	r3, [r4, #4]
 8008608:	6123      	str	r3, [r4, #16]
 800860a:	2300      	movs	r3, #0
 800860c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8008610:	e7a8      	b.n	8008564 <_printf_i+0x150>
 8008612:	6923      	ldr	r3, [r4, #16]
 8008614:	4632      	mov	r2, r6
 8008616:	4649      	mov	r1, r9
 8008618:	4640      	mov	r0, r8
 800861a:	47d0      	blx	sl
 800861c:	3001      	adds	r0, #1
 800861e:	d0ab      	beq.n	8008578 <_printf_i+0x164>
 8008620:	6823      	ldr	r3, [r4, #0]
 8008622:	079b      	lsls	r3, r3, #30
 8008624:	d413      	bmi.n	800864e <_printf_i+0x23a>
 8008626:	68e0      	ldr	r0, [r4, #12]
 8008628:	9b03      	ldr	r3, [sp, #12]
 800862a:	4298      	cmp	r0, r3
 800862c:	bfb8      	it	lt
 800862e:	4618      	movlt	r0, r3
 8008630:	e7a4      	b.n	800857c <_printf_i+0x168>
 8008632:	2301      	movs	r3, #1
 8008634:	4632      	mov	r2, r6
 8008636:	4649      	mov	r1, r9
 8008638:	4640      	mov	r0, r8
 800863a:	47d0      	blx	sl
 800863c:	3001      	adds	r0, #1
 800863e:	d09b      	beq.n	8008578 <_printf_i+0x164>
 8008640:	3501      	adds	r5, #1
 8008642:	68e3      	ldr	r3, [r4, #12]
 8008644:	9903      	ldr	r1, [sp, #12]
 8008646:	1a5b      	subs	r3, r3, r1
 8008648:	42ab      	cmp	r3, r5
 800864a:	dcf2      	bgt.n	8008632 <_printf_i+0x21e>
 800864c:	e7eb      	b.n	8008626 <_printf_i+0x212>
 800864e:	2500      	movs	r5, #0
 8008650:	f104 0619 	add.w	r6, r4, #25
 8008654:	e7f5      	b.n	8008642 <_printf_i+0x22e>
 8008656:	bf00      	nop
 8008658:	08009499 	.word	0x08009499
 800865c:	080094aa 	.word	0x080094aa

08008660 <_putc_r>:
 8008660:	b570      	push	{r4, r5, r6, lr}
 8008662:	460d      	mov	r5, r1
 8008664:	4614      	mov	r4, r2
 8008666:	4606      	mov	r6, r0
 8008668:	b118      	cbz	r0, 8008672 <_putc_r+0x12>
 800866a:	6983      	ldr	r3, [r0, #24]
 800866c:	b90b      	cbnz	r3, 8008672 <_putc_r+0x12>
 800866e:	f7ff fc5d 	bl	8007f2c <__sinit>
 8008672:	4b1c      	ldr	r3, [pc, #112]	; (80086e4 <_putc_r+0x84>)
 8008674:	429c      	cmp	r4, r3
 8008676:	d124      	bne.n	80086c2 <_putc_r+0x62>
 8008678:	6874      	ldr	r4, [r6, #4]
 800867a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800867c:	07d8      	lsls	r0, r3, #31
 800867e:	d405      	bmi.n	800868c <_putc_r+0x2c>
 8008680:	89a3      	ldrh	r3, [r4, #12]
 8008682:	0599      	lsls	r1, r3, #22
 8008684:	d402      	bmi.n	800868c <_putc_r+0x2c>
 8008686:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8008688:	f7ff fcee 	bl	8008068 <__retarget_lock_acquire_recursive>
 800868c:	68a3      	ldr	r3, [r4, #8]
 800868e:	3b01      	subs	r3, #1
 8008690:	2b00      	cmp	r3, #0
 8008692:	60a3      	str	r3, [r4, #8]
 8008694:	da05      	bge.n	80086a2 <_putc_r+0x42>
 8008696:	69a2      	ldr	r2, [r4, #24]
 8008698:	4293      	cmp	r3, r2
 800869a:	db1c      	blt.n	80086d6 <_putc_r+0x76>
 800869c:	b2eb      	uxtb	r3, r5
 800869e:	2b0a      	cmp	r3, #10
 80086a0:	d019      	beq.n	80086d6 <_putc_r+0x76>
 80086a2:	6823      	ldr	r3, [r4, #0]
 80086a4:	1c5a      	adds	r2, r3, #1
 80086a6:	6022      	str	r2, [r4, #0]
 80086a8:	701d      	strb	r5, [r3, #0]
 80086aa:	b2ed      	uxtb	r5, r5
 80086ac:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80086ae:	07da      	lsls	r2, r3, #31
 80086b0:	d405      	bmi.n	80086be <_putc_r+0x5e>
 80086b2:	89a3      	ldrh	r3, [r4, #12]
 80086b4:	059b      	lsls	r3, r3, #22
 80086b6:	d402      	bmi.n	80086be <_putc_r+0x5e>
 80086b8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80086ba:	f7ff fcd6 	bl	800806a <__retarget_lock_release_recursive>
 80086be:	4628      	mov	r0, r5
 80086c0:	bd70      	pop	{r4, r5, r6, pc}
 80086c2:	4b09      	ldr	r3, [pc, #36]	; (80086e8 <_putc_r+0x88>)
 80086c4:	429c      	cmp	r4, r3
 80086c6:	d101      	bne.n	80086cc <_putc_r+0x6c>
 80086c8:	68b4      	ldr	r4, [r6, #8]
 80086ca:	e7d6      	b.n	800867a <_putc_r+0x1a>
 80086cc:	4b07      	ldr	r3, [pc, #28]	; (80086ec <_putc_r+0x8c>)
 80086ce:	429c      	cmp	r4, r3
 80086d0:	bf08      	it	eq
 80086d2:	68f4      	ldreq	r4, [r6, #12]
 80086d4:	e7d1      	b.n	800867a <_putc_r+0x1a>
 80086d6:	4629      	mov	r1, r5
 80086d8:	4622      	mov	r2, r4
 80086da:	4630      	mov	r0, r6
 80086dc:	f000 f84c 	bl	8008778 <__swbuf_r>
 80086e0:	4605      	mov	r5, r0
 80086e2:	e7e3      	b.n	80086ac <_putc_r+0x4c>
 80086e4:	08009448 	.word	0x08009448
 80086e8:	08009468 	.word	0x08009468
 80086ec:	08009428 	.word	0x08009428

080086f0 <__sread>:
 80086f0:	b510      	push	{r4, lr}
 80086f2:	460c      	mov	r4, r1
 80086f4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80086f8:	f000 fa58 	bl	8008bac <_read_r>
 80086fc:	2800      	cmp	r0, #0
 80086fe:	bfab      	itete	ge
 8008700:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8008702:	89a3      	ldrhlt	r3, [r4, #12]
 8008704:	181b      	addge	r3, r3, r0
 8008706:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800870a:	bfac      	ite	ge
 800870c:	6563      	strge	r3, [r4, #84]	; 0x54
 800870e:	81a3      	strhlt	r3, [r4, #12]
 8008710:	bd10      	pop	{r4, pc}

08008712 <__swrite>:
 8008712:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008716:	461f      	mov	r7, r3
 8008718:	898b      	ldrh	r3, [r1, #12]
 800871a:	05db      	lsls	r3, r3, #23
 800871c:	4605      	mov	r5, r0
 800871e:	460c      	mov	r4, r1
 8008720:	4616      	mov	r6, r2
 8008722:	d505      	bpl.n	8008730 <__swrite+0x1e>
 8008724:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8008728:	2302      	movs	r3, #2
 800872a:	2200      	movs	r2, #0
 800872c:	f000 f9c8 	bl	8008ac0 <_lseek_r>
 8008730:	89a3      	ldrh	r3, [r4, #12]
 8008732:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8008736:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800873a:	81a3      	strh	r3, [r4, #12]
 800873c:	4632      	mov	r2, r6
 800873e:	463b      	mov	r3, r7
 8008740:	4628      	mov	r0, r5
 8008742:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8008746:	f000 b869 	b.w	800881c <_write_r>

0800874a <__sseek>:
 800874a:	b510      	push	{r4, lr}
 800874c:	460c      	mov	r4, r1
 800874e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8008752:	f000 f9b5 	bl	8008ac0 <_lseek_r>
 8008756:	1c43      	adds	r3, r0, #1
 8008758:	89a3      	ldrh	r3, [r4, #12]
 800875a:	bf15      	itete	ne
 800875c:	6560      	strne	r0, [r4, #84]	; 0x54
 800875e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8008762:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8008766:	81a3      	strheq	r3, [r4, #12]
 8008768:	bf18      	it	ne
 800876a:	81a3      	strhne	r3, [r4, #12]
 800876c:	bd10      	pop	{r4, pc}

0800876e <__sclose>:
 800876e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8008772:	f000 b8d3 	b.w	800891c <_close_r>
	...

08008778 <__swbuf_r>:
 8008778:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800877a:	460e      	mov	r6, r1
 800877c:	4614      	mov	r4, r2
 800877e:	4605      	mov	r5, r0
 8008780:	b118      	cbz	r0, 800878a <__swbuf_r+0x12>
 8008782:	6983      	ldr	r3, [r0, #24]
 8008784:	b90b      	cbnz	r3, 800878a <__swbuf_r+0x12>
 8008786:	f7ff fbd1 	bl	8007f2c <__sinit>
 800878a:	4b21      	ldr	r3, [pc, #132]	; (8008810 <__swbuf_r+0x98>)
 800878c:	429c      	cmp	r4, r3
 800878e:	d12b      	bne.n	80087e8 <__swbuf_r+0x70>
 8008790:	686c      	ldr	r4, [r5, #4]
 8008792:	69a3      	ldr	r3, [r4, #24]
 8008794:	60a3      	str	r3, [r4, #8]
 8008796:	89a3      	ldrh	r3, [r4, #12]
 8008798:	071a      	lsls	r2, r3, #28
 800879a:	d52f      	bpl.n	80087fc <__swbuf_r+0x84>
 800879c:	6923      	ldr	r3, [r4, #16]
 800879e:	b36b      	cbz	r3, 80087fc <__swbuf_r+0x84>
 80087a0:	6923      	ldr	r3, [r4, #16]
 80087a2:	6820      	ldr	r0, [r4, #0]
 80087a4:	1ac0      	subs	r0, r0, r3
 80087a6:	6963      	ldr	r3, [r4, #20]
 80087a8:	b2f6      	uxtb	r6, r6
 80087aa:	4283      	cmp	r3, r0
 80087ac:	4637      	mov	r7, r6
 80087ae:	dc04      	bgt.n	80087ba <__swbuf_r+0x42>
 80087b0:	4621      	mov	r1, r4
 80087b2:	4628      	mov	r0, r5
 80087b4:	f000 f948 	bl	8008a48 <_fflush_r>
 80087b8:	bb30      	cbnz	r0, 8008808 <__swbuf_r+0x90>
 80087ba:	68a3      	ldr	r3, [r4, #8]
 80087bc:	3b01      	subs	r3, #1
 80087be:	60a3      	str	r3, [r4, #8]
 80087c0:	6823      	ldr	r3, [r4, #0]
 80087c2:	1c5a      	adds	r2, r3, #1
 80087c4:	6022      	str	r2, [r4, #0]
 80087c6:	701e      	strb	r6, [r3, #0]
 80087c8:	6963      	ldr	r3, [r4, #20]
 80087ca:	3001      	adds	r0, #1
 80087cc:	4283      	cmp	r3, r0
 80087ce:	d004      	beq.n	80087da <__swbuf_r+0x62>
 80087d0:	89a3      	ldrh	r3, [r4, #12]
 80087d2:	07db      	lsls	r3, r3, #31
 80087d4:	d506      	bpl.n	80087e4 <__swbuf_r+0x6c>
 80087d6:	2e0a      	cmp	r6, #10
 80087d8:	d104      	bne.n	80087e4 <__swbuf_r+0x6c>
 80087da:	4621      	mov	r1, r4
 80087dc:	4628      	mov	r0, r5
 80087de:	f000 f933 	bl	8008a48 <_fflush_r>
 80087e2:	b988      	cbnz	r0, 8008808 <__swbuf_r+0x90>
 80087e4:	4638      	mov	r0, r7
 80087e6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80087e8:	4b0a      	ldr	r3, [pc, #40]	; (8008814 <__swbuf_r+0x9c>)
 80087ea:	429c      	cmp	r4, r3
 80087ec:	d101      	bne.n	80087f2 <__swbuf_r+0x7a>
 80087ee:	68ac      	ldr	r4, [r5, #8]
 80087f0:	e7cf      	b.n	8008792 <__swbuf_r+0x1a>
 80087f2:	4b09      	ldr	r3, [pc, #36]	; (8008818 <__swbuf_r+0xa0>)
 80087f4:	429c      	cmp	r4, r3
 80087f6:	bf08      	it	eq
 80087f8:	68ec      	ldreq	r4, [r5, #12]
 80087fa:	e7ca      	b.n	8008792 <__swbuf_r+0x1a>
 80087fc:	4621      	mov	r1, r4
 80087fe:	4628      	mov	r0, r5
 8008800:	f000 f81e 	bl	8008840 <__swsetup_r>
 8008804:	2800      	cmp	r0, #0
 8008806:	d0cb      	beq.n	80087a0 <__swbuf_r+0x28>
 8008808:	f04f 37ff 	mov.w	r7, #4294967295
 800880c:	e7ea      	b.n	80087e4 <__swbuf_r+0x6c>
 800880e:	bf00      	nop
 8008810:	08009448 	.word	0x08009448
 8008814:	08009468 	.word	0x08009468
 8008818:	08009428 	.word	0x08009428

0800881c <_write_r>:
 800881c:	b538      	push	{r3, r4, r5, lr}
 800881e:	4d07      	ldr	r5, [pc, #28]	; (800883c <_write_r+0x20>)
 8008820:	4604      	mov	r4, r0
 8008822:	4608      	mov	r0, r1
 8008824:	4611      	mov	r1, r2
 8008826:	2200      	movs	r2, #0
 8008828:	602a      	str	r2, [r5, #0]
 800882a:	461a      	mov	r2, r3
 800882c:	f7f7 fea4 	bl	8000578 <_write>
 8008830:	1c43      	adds	r3, r0, #1
 8008832:	d102      	bne.n	800883a <_write_r+0x1e>
 8008834:	682b      	ldr	r3, [r5, #0]
 8008836:	b103      	cbz	r3, 800883a <_write_r+0x1e>
 8008838:	6023      	str	r3, [r4, #0]
 800883a:	bd38      	pop	{r3, r4, r5, pc}
 800883c:	200008b4 	.word	0x200008b4

08008840 <__swsetup_r>:
 8008840:	4b32      	ldr	r3, [pc, #200]	; (800890c <__swsetup_r+0xcc>)
 8008842:	b570      	push	{r4, r5, r6, lr}
 8008844:	681d      	ldr	r5, [r3, #0]
 8008846:	4606      	mov	r6, r0
 8008848:	460c      	mov	r4, r1
 800884a:	b125      	cbz	r5, 8008856 <__swsetup_r+0x16>
 800884c:	69ab      	ldr	r3, [r5, #24]
 800884e:	b913      	cbnz	r3, 8008856 <__swsetup_r+0x16>
 8008850:	4628      	mov	r0, r5
 8008852:	f7ff fb6b 	bl	8007f2c <__sinit>
 8008856:	4b2e      	ldr	r3, [pc, #184]	; (8008910 <__swsetup_r+0xd0>)
 8008858:	429c      	cmp	r4, r3
 800885a:	d10f      	bne.n	800887c <__swsetup_r+0x3c>
 800885c:	686c      	ldr	r4, [r5, #4]
 800885e:	89a3      	ldrh	r3, [r4, #12]
 8008860:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8008864:	0719      	lsls	r1, r3, #28
 8008866:	d42c      	bmi.n	80088c2 <__swsetup_r+0x82>
 8008868:	06dd      	lsls	r5, r3, #27
 800886a:	d411      	bmi.n	8008890 <__swsetup_r+0x50>
 800886c:	2309      	movs	r3, #9
 800886e:	6033      	str	r3, [r6, #0]
 8008870:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8008874:	81a3      	strh	r3, [r4, #12]
 8008876:	f04f 30ff 	mov.w	r0, #4294967295
 800887a:	e03e      	b.n	80088fa <__swsetup_r+0xba>
 800887c:	4b25      	ldr	r3, [pc, #148]	; (8008914 <__swsetup_r+0xd4>)
 800887e:	429c      	cmp	r4, r3
 8008880:	d101      	bne.n	8008886 <__swsetup_r+0x46>
 8008882:	68ac      	ldr	r4, [r5, #8]
 8008884:	e7eb      	b.n	800885e <__swsetup_r+0x1e>
 8008886:	4b24      	ldr	r3, [pc, #144]	; (8008918 <__swsetup_r+0xd8>)
 8008888:	429c      	cmp	r4, r3
 800888a:	bf08      	it	eq
 800888c:	68ec      	ldreq	r4, [r5, #12]
 800888e:	e7e6      	b.n	800885e <__swsetup_r+0x1e>
 8008890:	0758      	lsls	r0, r3, #29
 8008892:	d512      	bpl.n	80088ba <__swsetup_r+0x7a>
 8008894:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8008896:	b141      	cbz	r1, 80088aa <__swsetup_r+0x6a>
 8008898:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800889c:	4299      	cmp	r1, r3
 800889e:	d002      	beq.n	80088a6 <__swsetup_r+0x66>
 80088a0:	4630      	mov	r0, r6
 80088a2:	f7ff fa03 	bl	8007cac <_free_r>
 80088a6:	2300      	movs	r3, #0
 80088a8:	6363      	str	r3, [r4, #52]	; 0x34
 80088aa:	89a3      	ldrh	r3, [r4, #12]
 80088ac:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80088b0:	81a3      	strh	r3, [r4, #12]
 80088b2:	2300      	movs	r3, #0
 80088b4:	6063      	str	r3, [r4, #4]
 80088b6:	6923      	ldr	r3, [r4, #16]
 80088b8:	6023      	str	r3, [r4, #0]
 80088ba:	89a3      	ldrh	r3, [r4, #12]
 80088bc:	f043 0308 	orr.w	r3, r3, #8
 80088c0:	81a3      	strh	r3, [r4, #12]
 80088c2:	6923      	ldr	r3, [r4, #16]
 80088c4:	b94b      	cbnz	r3, 80088da <__swsetup_r+0x9a>
 80088c6:	89a3      	ldrh	r3, [r4, #12]
 80088c8:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80088cc:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80088d0:	d003      	beq.n	80088da <__swsetup_r+0x9a>
 80088d2:	4621      	mov	r1, r4
 80088d4:	4630      	mov	r0, r6
 80088d6:	f000 f929 	bl	8008b2c <__smakebuf_r>
 80088da:	89a0      	ldrh	r0, [r4, #12]
 80088dc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80088e0:	f010 0301 	ands.w	r3, r0, #1
 80088e4:	d00a      	beq.n	80088fc <__swsetup_r+0xbc>
 80088e6:	2300      	movs	r3, #0
 80088e8:	60a3      	str	r3, [r4, #8]
 80088ea:	6963      	ldr	r3, [r4, #20]
 80088ec:	425b      	negs	r3, r3
 80088ee:	61a3      	str	r3, [r4, #24]
 80088f0:	6923      	ldr	r3, [r4, #16]
 80088f2:	b943      	cbnz	r3, 8008906 <__swsetup_r+0xc6>
 80088f4:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80088f8:	d1ba      	bne.n	8008870 <__swsetup_r+0x30>
 80088fa:	bd70      	pop	{r4, r5, r6, pc}
 80088fc:	0781      	lsls	r1, r0, #30
 80088fe:	bf58      	it	pl
 8008900:	6963      	ldrpl	r3, [r4, #20]
 8008902:	60a3      	str	r3, [r4, #8]
 8008904:	e7f4      	b.n	80088f0 <__swsetup_r+0xb0>
 8008906:	2000      	movs	r0, #0
 8008908:	e7f7      	b.n	80088fa <__swsetup_r+0xba>
 800890a:	bf00      	nop
 800890c:	2000002c 	.word	0x2000002c
 8008910:	08009448 	.word	0x08009448
 8008914:	08009468 	.word	0x08009468
 8008918:	08009428 	.word	0x08009428

0800891c <_close_r>:
 800891c:	b538      	push	{r3, r4, r5, lr}
 800891e:	4d06      	ldr	r5, [pc, #24]	; (8008938 <_close_r+0x1c>)
 8008920:	2300      	movs	r3, #0
 8008922:	4604      	mov	r4, r0
 8008924:	4608      	mov	r0, r1
 8008926:	602b      	str	r3, [r5, #0]
 8008928:	f7f8 f831 	bl	800098e <_close>
 800892c:	1c43      	adds	r3, r0, #1
 800892e:	d102      	bne.n	8008936 <_close_r+0x1a>
 8008930:	682b      	ldr	r3, [r5, #0]
 8008932:	b103      	cbz	r3, 8008936 <_close_r+0x1a>
 8008934:	6023      	str	r3, [r4, #0]
 8008936:	bd38      	pop	{r3, r4, r5, pc}
 8008938:	200008b4 	.word	0x200008b4

0800893c <__sflush_r>:
 800893c:	898a      	ldrh	r2, [r1, #12]
 800893e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008942:	4605      	mov	r5, r0
 8008944:	0710      	lsls	r0, r2, #28
 8008946:	460c      	mov	r4, r1
 8008948:	d458      	bmi.n	80089fc <__sflush_r+0xc0>
 800894a:	684b      	ldr	r3, [r1, #4]
 800894c:	2b00      	cmp	r3, #0
 800894e:	dc05      	bgt.n	800895c <__sflush_r+0x20>
 8008950:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8008952:	2b00      	cmp	r3, #0
 8008954:	dc02      	bgt.n	800895c <__sflush_r+0x20>
 8008956:	2000      	movs	r0, #0
 8008958:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800895c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800895e:	2e00      	cmp	r6, #0
 8008960:	d0f9      	beq.n	8008956 <__sflush_r+0x1a>
 8008962:	2300      	movs	r3, #0
 8008964:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8008968:	682f      	ldr	r7, [r5, #0]
 800896a:	602b      	str	r3, [r5, #0]
 800896c:	d032      	beq.n	80089d4 <__sflush_r+0x98>
 800896e:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8008970:	89a3      	ldrh	r3, [r4, #12]
 8008972:	075a      	lsls	r2, r3, #29
 8008974:	d505      	bpl.n	8008982 <__sflush_r+0x46>
 8008976:	6863      	ldr	r3, [r4, #4]
 8008978:	1ac0      	subs	r0, r0, r3
 800897a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800897c:	b10b      	cbz	r3, 8008982 <__sflush_r+0x46>
 800897e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8008980:	1ac0      	subs	r0, r0, r3
 8008982:	2300      	movs	r3, #0
 8008984:	4602      	mov	r2, r0
 8008986:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8008988:	6a21      	ldr	r1, [r4, #32]
 800898a:	4628      	mov	r0, r5
 800898c:	47b0      	blx	r6
 800898e:	1c43      	adds	r3, r0, #1
 8008990:	89a3      	ldrh	r3, [r4, #12]
 8008992:	d106      	bne.n	80089a2 <__sflush_r+0x66>
 8008994:	6829      	ldr	r1, [r5, #0]
 8008996:	291d      	cmp	r1, #29
 8008998:	d82c      	bhi.n	80089f4 <__sflush_r+0xb8>
 800899a:	4a2a      	ldr	r2, [pc, #168]	; (8008a44 <__sflush_r+0x108>)
 800899c:	40ca      	lsrs	r2, r1
 800899e:	07d6      	lsls	r6, r2, #31
 80089a0:	d528      	bpl.n	80089f4 <__sflush_r+0xb8>
 80089a2:	2200      	movs	r2, #0
 80089a4:	6062      	str	r2, [r4, #4]
 80089a6:	04d9      	lsls	r1, r3, #19
 80089a8:	6922      	ldr	r2, [r4, #16]
 80089aa:	6022      	str	r2, [r4, #0]
 80089ac:	d504      	bpl.n	80089b8 <__sflush_r+0x7c>
 80089ae:	1c42      	adds	r2, r0, #1
 80089b0:	d101      	bne.n	80089b6 <__sflush_r+0x7a>
 80089b2:	682b      	ldr	r3, [r5, #0]
 80089b4:	b903      	cbnz	r3, 80089b8 <__sflush_r+0x7c>
 80089b6:	6560      	str	r0, [r4, #84]	; 0x54
 80089b8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80089ba:	602f      	str	r7, [r5, #0]
 80089bc:	2900      	cmp	r1, #0
 80089be:	d0ca      	beq.n	8008956 <__sflush_r+0x1a>
 80089c0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80089c4:	4299      	cmp	r1, r3
 80089c6:	d002      	beq.n	80089ce <__sflush_r+0x92>
 80089c8:	4628      	mov	r0, r5
 80089ca:	f7ff f96f 	bl	8007cac <_free_r>
 80089ce:	2000      	movs	r0, #0
 80089d0:	6360      	str	r0, [r4, #52]	; 0x34
 80089d2:	e7c1      	b.n	8008958 <__sflush_r+0x1c>
 80089d4:	6a21      	ldr	r1, [r4, #32]
 80089d6:	2301      	movs	r3, #1
 80089d8:	4628      	mov	r0, r5
 80089da:	47b0      	blx	r6
 80089dc:	1c41      	adds	r1, r0, #1
 80089de:	d1c7      	bne.n	8008970 <__sflush_r+0x34>
 80089e0:	682b      	ldr	r3, [r5, #0]
 80089e2:	2b00      	cmp	r3, #0
 80089e4:	d0c4      	beq.n	8008970 <__sflush_r+0x34>
 80089e6:	2b1d      	cmp	r3, #29
 80089e8:	d001      	beq.n	80089ee <__sflush_r+0xb2>
 80089ea:	2b16      	cmp	r3, #22
 80089ec:	d101      	bne.n	80089f2 <__sflush_r+0xb6>
 80089ee:	602f      	str	r7, [r5, #0]
 80089f0:	e7b1      	b.n	8008956 <__sflush_r+0x1a>
 80089f2:	89a3      	ldrh	r3, [r4, #12]
 80089f4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80089f8:	81a3      	strh	r3, [r4, #12]
 80089fa:	e7ad      	b.n	8008958 <__sflush_r+0x1c>
 80089fc:	690f      	ldr	r7, [r1, #16]
 80089fe:	2f00      	cmp	r7, #0
 8008a00:	d0a9      	beq.n	8008956 <__sflush_r+0x1a>
 8008a02:	0793      	lsls	r3, r2, #30
 8008a04:	680e      	ldr	r6, [r1, #0]
 8008a06:	bf08      	it	eq
 8008a08:	694b      	ldreq	r3, [r1, #20]
 8008a0a:	600f      	str	r7, [r1, #0]
 8008a0c:	bf18      	it	ne
 8008a0e:	2300      	movne	r3, #0
 8008a10:	eba6 0807 	sub.w	r8, r6, r7
 8008a14:	608b      	str	r3, [r1, #8]
 8008a16:	f1b8 0f00 	cmp.w	r8, #0
 8008a1a:	dd9c      	ble.n	8008956 <__sflush_r+0x1a>
 8008a1c:	6a21      	ldr	r1, [r4, #32]
 8008a1e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8008a20:	4643      	mov	r3, r8
 8008a22:	463a      	mov	r2, r7
 8008a24:	4628      	mov	r0, r5
 8008a26:	47b0      	blx	r6
 8008a28:	2800      	cmp	r0, #0
 8008a2a:	dc06      	bgt.n	8008a3a <__sflush_r+0xfe>
 8008a2c:	89a3      	ldrh	r3, [r4, #12]
 8008a2e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8008a32:	81a3      	strh	r3, [r4, #12]
 8008a34:	f04f 30ff 	mov.w	r0, #4294967295
 8008a38:	e78e      	b.n	8008958 <__sflush_r+0x1c>
 8008a3a:	4407      	add	r7, r0
 8008a3c:	eba8 0800 	sub.w	r8, r8, r0
 8008a40:	e7e9      	b.n	8008a16 <__sflush_r+0xda>
 8008a42:	bf00      	nop
 8008a44:	20400001 	.word	0x20400001

08008a48 <_fflush_r>:
 8008a48:	b538      	push	{r3, r4, r5, lr}
 8008a4a:	690b      	ldr	r3, [r1, #16]
 8008a4c:	4605      	mov	r5, r0
 8008a4e:	460c      	mov	r4, r1
 8008a50:	b913      	cbnz	r3, 8008a58 <_fflush_r+0x10>
 8008a52:	2500      	movs	r5, #0
 8008a54:	4628      	mov	r0, r5
 8008a56:	bd38      	pop	{r3, r4, r5, pc}
 8008a58:	b118      	cbz	r0, 8008a62 <_fflush_r+0x1a>
 8008a5a:	6983      	ldr	r3, [r0, #24]
 8008a5c:	b90b      	cbnz	r3, 8008a62 <_fflush_r+0x1a>
 8008a5e:	f7ff fa65 	bl	8007f2c <__sinit>
 8008a62:	4b14      	ldr	r3, [pc, #80]	; (8008ab4 <_fflush_r+0x6c>)
 8008a64:	429c      	cmp	r4, r3
 8008a66:	d11b      	bne.n	8008aa0 <_fflush_r+0x58>
 8008a68:	686c      	ldr	r4, [r5, #4]
 8008a6a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8008a6e:	2b00      	cmp	r3, #0
 8008a70:	d0ef      	beq.n	8008a52 <_fflush_r+0xa>
 8008a72:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8008a74:	07d0      	lsls	r0, r2, #31
 8008a76:	d404      	bmi.n	8008a82 <_fflush_r+0x3a>
 8008a78:	0599      	lsls	r1, r3, #22
 8008a7a:	d402      	bmi.n	8008a82 <_fflush_r+0x3a>
 8008a7c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8008a7e:	f7ff faf3 	bl	8008068 <__retarget_lock_acquire_recursive>
 8008a82:	4628      	mov	r0, r5
 8008a84:	4621      	mov	r1, r4
 8008a86:	f7ff ff59 	bl	800893c <__sflush_r>
 8008a8a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8008a8c:	07da      	lsls	r2, r3, #31
 8008a8e:	4605      	mov	r5, r0
 8008a90:	d4e0      	bmi.n	8008a54 <_fflush_r+0xc>
 8008a92:	89a3      	ldrh	r3, [r4, #12]
 8008a94:	059b      	lsls	r3, r3, #22
 8008a96:	d4dd      	bmi.n	8008a54 <_fflush_r+0xc>
 8008a98:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8008a9a:	f7ff fae6 	bl	800806a <__retarget_lock_release_recursive>
 8008a9e:	e7d9      	b.n	8008a54 <_fflush_r+0xc>
 8008aa0:	4b05      	ldr	r3, [pc, #20]	; (8008ab8 <_fflush_r+0x70>)
 8008aa2:	429c      	cmp	r4, r3
 8008aa4:	d101      	bne.n	8008aaa <_fflush_r+0x62>
 8008aa6:	68ac      	ldr	r4, [r5, #8]
 8008aa8:	e7df      	b.n	8008a6a <_fflush_r+0x22>
 8008aaa:	4b04      	ldr	r3, [pc, #16]	; (8008abc <_fflush_r+0x74>)
 8008aac:	429c      	cmp	r4, r3
 8008aae:	bf08      	it	eq
 8008ab0:	68ec      	ldreq	r4, [r5, #12]
 8008ab2:	e7da      	b.n	8008a6a <_fflush_r+0x22>
 8008ab4:	08009448 	.word	0x08009448
 8008ab8:	08009468 	.word	0x08009468
 8008abc:	08009428 	.word	0x08009428

08008ac0 <_lseek_r>:
 8008ac0:	b538      	push	{r3, r4, r5, lr}
 8008ac2:	4d07      	ldr	r5, [pc, #28]	; (8008ae0 <_lseek_r+0x20>)
 8008ac4:	4604      	mov	r4, r0
 8008ac6:	4608      	mov	r0, r1
 8008ac8:	4611      	mov	r1, r2
 8008aca:	2200      	movs	r2, #0
 8008acc:	602a      	str	r2, [r5, #0]
 8008ace:	461a      	mov	r2, r3
 8008ad0:	f7f7 ff84 	bl	80009dc <_lseek>
 8008ad4:	1c43      	adds	r3, r0, #1
 8008ad6:	d102      	bne.n	8008ade <_lseek_r+0x1e>
 8008ad8:	682b      	ldr	r3, [r5, #0]
 8008ada:	b103      	cbz	r3, 8008ade <_lseek_r+0x1e>
 8008adc:	6023      	str	r3, [r4, #0]
 8008ade:	bd38      	pop	{r3, r4, r5, pc}
 8008ae0:	200008b4 	.word	0x200008b4

08008ae4 <__swhatbuf_r>:
 8008ae4:	b570      	push	{r4, r5, r6, lr}
 8008ae6:	460e      	mov	r6, r1
 8008ae8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8008aec:	2900      	cmp	r1, #0
 8008aee:	b096      	sub	sp, #88	; 0x58
 8008af0:	4614      	mov	r4, r2
 8008af2:	461d      	mov	r5, r3
 8008af4:	da07      	bge.n	8008b06 <__swhatbuf_r+0x22>
 8008af6:	2300      	movs	r3, #0
 8008af8:	602b      	str	r3, [r5, #0]
 8008afa:	89b3      	ldrh	r3, [r6, #12]
 8008afc:	061a      	lsls	r2, r3, #24
 8008afe:	d410      	bmi.n	8008b22 <__swhatbuf_r+0x3e>
 8008b00:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8008b04:	e00e      	b.n	8008b24 <__swhatbuf_r+0x40>
 8008b06:	466a      	mov	r2, sp
 8008b08:	f000 f862 	bl	8008bd0 <_fstat_r>
 8008b0c:	2800      	cmp	r0, #0
 8008b0e:	dbf2      	blt.n	8008af6 <__swhatbuf_r+0x12>
 8008b10:	9a01      	ldr	r2, [sp, #4]
 8008b12:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8008b16:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8008b1a:	425a      	negs	r2, r3
 8008b1c:	415a      	adcs	r2, r3
 8008b1e:	602a      	str	r2, [r5, #0]
 8008b20:	e7ee      	b.n	8008b00 <__swhatbuf_r+0x1c>
 8008b22:	2340      	movs	r3, #64	; 0x40
 8008b24:	2000      	movs	r0, #0
 8008b26:	6023      	str	r3, [r4, #0]
 8008b28:	b016      	add	sp, #88	; 0x58
 8008b2a:	bd70      	pop	{r4, r5, r6, pc}

08008b2c <__smakebuf_r>:
 8008b2c:	898b      	ldrh	r3, [r1, #12]
 8008b2e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008b30:	079d      	lsls	r5, r3, #30
 8008b32:	4606      	mov	r6, r0
 8008b34:	460c      	mov	r4, r1
 8008b36:	d507      	bpl.n	8008b48 <__smakebuf_r+0x1c>
 8008b38:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8008b3c:	6023      	str	r3, [r4, #0]
 8008b3e:	6123      	str	r3, [r4, #16]
 8008b40:	2301      	movs	r3, #1
 8008b42:	6163      	str	r3, [r4, #20]
 8008b44:	b002      	add	sp, #8
 8008b46:	bd70      	pop	{r4, r5, r6, pc}
 8008b48:	ab01      	add	r3, sp, #4
 8008b4a:	466a      	mov	r2, sp
 8008b4c:	f7ff ffca 	bl	8008ae4 <__swhatbuf_r>
 8008b50:	9900      	ldr	r1, [sp, #0]
 8008b52:	4605      	mov	r5, r0
 8008b54:	4630      	mov	r0, r6
 8008b56:	f7ff f8f9 	bl	8007d4c <_malloc_r>
 8008b5a:	b948      	cbnz	r0, 8008b70 <__smakebuf_r+0x44>
 8008b5c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8008b60:	059a      	lsls	r2, r3, #22
 8008b62:	d4ef      	bmi.n	8008b44 <__smakebuf_r+0x18>
 8008b64:	f023 0303 	bic.w	r3, r3, #3
 8008b68:	f043 0302 	orr.w	r3, r3, #2
 8008b6c:	81a3      	strh	r3, [r4, #12]
 8008b6e:	e7e3      	b.n	8008b38 <__smakebuf_r+0xc>
 8008b70:	4b0d      	ldr	r3, [pc, #52]	; (8008ba8 <__smakebuf_r+0x7c>)
 8008b72:	62b3      	str	r3, [r6, #40]	; 0x28
 8008b74:	89a3      	ldrh	r3, [r4, #12]
 8008b76:	6020      	str	r0, [r4, #0]
 8008b78:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8008b7c:	81a3      	strh	r3, [r4, #12]
 8008b7e:	9b00      	ldr	r3, [sp, #0]
 8008b80:	6163      	str	r3, [r4, #20]
 8008b82:	9b01      	ldr	r3, [sp, #4]
 8008b84:	6120      	str	r0, [r4, #16]
 8008b86:	b15b      	cbz	r3, 8008ba0 <__smakebuf_r+0x74>
 8008b88:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8008b8c:	4630      	mov	r0, r6
 8008b8e:	f000 f831 	bl	8008bf4 <_isatty_r>
 8008b92:	b128      	cbz	r0, 8008ba0 <__smakebuf_r+0x74>
 8008b94:	89a3      	ldrh	r3, [r4, #12]
 8008b96:	f023 0303 	bic.w	r3, r3, #3
 8008b9a:	f043 0301 	orr.w	r3, r3, #1
 8008b9e:	81a3      	strh	r3, [r4, #12]
 8008ba0:	89a0      	ldrh	r0, [r4, #12]
 8008ba2:	4305      	orrs	r5, r0
 8008ba4:	81a5      	strh	r5, [r4, #12]
 8008ba6:	e7cd      	b.n	8008b44 <__smakebuf_r+0x18>
 8008ba8:	08007ec5 	.word	0x08007ec5

08008bac <_read_r>:
 8008bac:	b538      	push	{r3, r4, r5, lr}
 8008bae:	4d07      	ldr	r5, [pc, #28]	; (8008bcc <_read_r+0x20>)
 8008bb0:	4604      	mov	r4, r0
 8008bb2:	4608      	mov	r0, r1
 8008bb4:	4611      	mov	r1, r2
 8008bb6:	2200      	movs	r2, #0
 8008bb8:	602a      	str	r2, [r5, #0]
 8008bba:	461a      	mov	r2, r3
 8008bbc:	f7f7 feca 	bl	8000954 <_read>
 8008bc0:	1c43      	adds	r3, r0, #1
 8008bc2:	d102      	bne.n	8008bca <_read_r+0x1e>
 8008bc4:	682b      	ldr	r3, [r5, #0]
 8008bc6:	b103      	cbz	r3, 8008bca <_read_r+0x1e>
 8008bc8:	6023      	str	r3, [r4, #0]
 8008bca:	bd38      	pop	{r3, r4, r5, pc}
 8008bcc:	200008b4 	.word	0x200008b4

08008bd0 <_fstat_r>:
 8008bd0:	b538      	push	{r3, r4, r5, lr}
 8008bd2:	4d07      	ldr	r5, [pc, #28]	; (8008bf0 <_fstat_r+0x20>)
 8008bd4:	2300      	movs	r3, #0
 8008bd6:	4604      	mov	r4, r0
 8008bd8:	4608      	mov	r0, r1
 8008bda:	4611      	mov	r1, r2
 8008bdc:	602b      	str	r3, [r5, #0]
 8008bde:	f7f7 fee2 	bl	80009a6 <_fstat>
 8008be2:	1c43      	adds	r3, r0, #1
 8008be4:	d102      	bne.n	8008bec <_fstat_r+0x1c>
 8008be6:	682b      	ldr	r3, [r5, #0]
 8008be8:	b103      	cbz	r3, 8008bec <_fstat_r+0x1c>
 8008bea:	6023      	str	r3, [r4, #0]
 8008bec:	bd38      	pop	{r3, r4, r5, pc}
 8008bee:	bf00      	nop
 8008bf0:	200008b4 	.word	0x200008b4

08008bf4 <_isatty_r>:
 8008bf4:	b538      	push	{r3, r4, r5, lr}
 8008bf6:	4d06      	ldr	r5, [pc, #24]	; (8008c10 <_isatty_r+0x1c>)
 8008bf8:	2300      	movs	r3, #0
 8008bfa:	4604      	mov	r4, r0
 8008bfc:	4608      	mov	r0, r1
 8008bfe:	602b      	str	r3, [r5, #0]
 8008c00:	f7f7 fee1 	bl	80009c6 <_isatty>
 8008c04:	1c43      	adds	r3, r0, #1
 8008c06:	d102      	bne.n	8008c0e <_isatty_r+0x1a>
 8008c08:	682b      	ldr	r3, [r5, #0]
 8008c0a:	b103      	cbz	r3, 8008c0e <_isatty_r+0x1a>
 8008c0c:	6023      	str	r3, [r4, #0]
 8008c0e:	bd38      	pop	{r3, r4, r5, pc}
 8008c10:	200008b4 	.word	0x200008b4

08008c14 <_init>:
 8008c14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008c16:	bf00      	nop
 8008c18:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8008c1a:	bc08      	pop	{r3}
 8008c1c:	469e      	mov	lr, r3
 8008c1e:	4770      	bx	lr

08008c20 <_fini>:
 8008c20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008c22:	bf00      	nop
 8008c24:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8008c26:	bc08      	pop	{r3}
 8008c28:	469e      	mov	lr, r3
 8008c2a:	4770      	bx	lr
